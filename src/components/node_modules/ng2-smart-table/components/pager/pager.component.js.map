{"version":3,"file":"pager.component.js","sourceRoot":"","sources":["../../../../src/ng2-smart-table/components/pager/pager.component.ts"],"names":[],"mappings":"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","sourcesContent":["import { Component, Input, Output, EventEmitter, OnChanges, SimpleChanges } from '@angular/core';\r\nimport { Subscription } from 'rxjs/Subscription';\r\n\r\nimport { DataSource } from '../../lib/data-source/data-source';\r\n\r\n@Component({\r\n  selector: 'ng2-smart-table-pager',\r\n  styleUrls: ['./pager.component.scss'],\r\n  template: `\r\n    <nav *ngIf=\"shouldShow()\" class=\"ng2-smart-pagination-nav\">\r\n      <ul class=\"ng2-smart-pagination pagination\">\r\n        <li class=\"ng2-smart-page-item page-item\" [ngClass]=\"{disabled: getPage() == 1}\">\r\n          <a class=\"ng2-smart-page-link page-link\" href=\"#\"\r\n          (click)=\"getPage() == 1 ? false : paginate(1)\" aria-label=\"First\">\r\n            <span aria-hidden=\"true\">&laquo;</span>\r\n            <span class=\"sr-only\">First</span>\r\n          </a>\r\n        </li>\r\n        <li class=\"ng2-smart-page-item page-item\"\r\n        [ngClass]=\"{active: getPage() == page}\" *ngFor=\"let page of getPages()\">\r\n          <span class=\"ng2-smart-page-link page-link\"\r\n          *ngIf=\"getPage() == page\">{{ page }} <span class=\"sr-only\">(current)</span></span>\r\n          <a class=\"ng2-smart-page-link page-link\" href=\"#\"\r\n          (click)=\"paginate(page)\" *ngIf=\"getPage() != page\">{{ page }}</a>\r\n        </li>\r\n\r\n        <li class=\"ng2-smart-page-item page-item\"\r\n        [ngClass]=\"{disabled: getPage() == getLast()}\">\r\n          <a class=\"ng2-smart-page-link page-link\" href=\"#\"\r\n          (click)=\"getPage() == getLast() ? false : paginate(getLast())\" aria-label=\"Last\">\r\n            <span aria-hidden=\"true\">&raquo;</span>\r\n            <span class=\"sr-only\">Last</span>\r\n          </a>\r\n        </li>\r\n      </ul>\r\n    </nav>\r\n  `,\r\n})\r\nexport class PagerComponent implements OnChanges {\r\n\r\n  @Input() source: DataSource;\r\n\r\n  @Output() changePage = new EventEmitter<any>();\r\n\r\n  protected pages: Array<any>;\r\n  protected page: number;\r\n  protected count: number = 0;\r\n  protected perPage: number;\r\n\r\n  protected dataChangedSub: Subscription;\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    if (changes.source) {\r\n      if (!changes.source.firstChange) {\r\n        this.dataChangedSub.unsubscribe();\r\n      }\r\n      this.dataChangedSub = this.source.onChanged().subscribe((dataChanges) => {\r\n        this.page = this.source.getPaging().page;\r\n        this.perPage = this.source.getPaging().perPage;\r\n        this.count = this.source.count();\r\n        if (this.isPageOutOfBounce()) {\r\n          this.source.setPage(--this.page);\r\n        }\r\n\r\n        this.processPageChange(dataChanges);\r\n        this.initPages();\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * We change the page here depending on the action performed against data source\r\n   * if a new element was added to the end of the table - then change the page to the last\r\n   * if a new element was added to the beginning of the table - then to the first page\r\n   * @param changes\r\n   */\r\n  processPageChange(changes: any) {\r\n    if (changes['action'] === 'prepend') {\r\n      this.source.setPage(1);\r\n    }\r\n    if (changes['action'] === 'append') {\r\n      this.source.setPage(this.getLast());\r\n    }\r\n  }\r\n\r\n  shouldShow(): boolean {\r\n    return this.source.count() > this.perPage;\r\n  }\r\n\r\n  paginate(page: number): boolean {\r\n    this.source.setPage(page);\r\n    this.page = page;\r\n    this.changePage.emit({ page });\r\n    return false;\r\n  }\r\n\r\n  getPage(): number {\r\n    return this.page;\r\n  }\r\n\r\n  getPages(): Array<any> {\r\n    return this.pages;\r\n  }\r\n\r\n  getLast(): number {\r\n    return Math.ceil(this.count / this.perPage);\r\n  }\r\n\r\n  isPageOutOfBounce(): boolean {\r\n    return (this.page * this.perPage) >= (this.count + this.perPage) && this.page > 1;\r\n  }\r\n\r\n  initPages() {\r\n    const pagesCount = this.getLast();\r\n    let showPagesCount = 4;\r\n    showPagesCount = pagesCount < showPagesCount ? pagesCount : showPagesCount;\r\n    this.pages = [];\r\n\r\n    if (this.shouldShow()) {\r\n\r\n      let middleOne = Math.ceil(showPagesCount / 2);\r\n      middleOne = this.page >= middleOne ? this.page : middleOne;\r\n\r\n      let lastOne = middleOne + Math.floor(showPagesCount / 2);\r\n      lastOne = lastOne >= pagesCount ? pagesCount : lastOne;\r\n\r\n      const firstOne = lastOne - showPagesCount + 1;\r\n\r\n      for (let i = firstOne; i <= lastOne; i++) {\r\n        this.pages.push(i);\r\n      }\r\n    }\r\n  }\r\n}\r\n"]}
{"version":3,"file":"checkbox-filter.component.js","sourceRoot":"","sources":["../../../../../src/ng2-smart-table/components/filter/filter-types/checkbox-filter.component.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAAA,OAAO,EAAE,SAAS,EAAU,MAAM,eAAe,CAAC;AAClD,OAAO,EAAE,WAAW,EAAE,MAAM,gBAAgB,CAAC;AAE7C,OAAO,EAAE,aAAa,EAAE,MAAM,kBAAkB,CAAC;AACjD,OAAO,gCAAgC,CAAC;AAUxC,IAAa,uBAAuB;IAAS,2CAAa;IAKxD;QAAA,YACE,iBAAO,SACR;QALD,kBAAY,GAAY,KAAK,CAAC;QAC9B,kBAAY,GAAG,IAAI,WAAW,EAAE,CAAC;;IAIjC,CAAC;IAED,0CAAQ,GAAR;QAAA,iBAUC;QATC,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC,YAAY,CAAC,YAAY;aACtD,YAAY,CAAC,IAAI,CAAC,KAAK,CAAC;aACxB,SAAS,CAAC,UAAC,OAAgB;YAC1B,KAAI,CAAC,YAAY,GAAG,IAAI,CAAC;YACzB,IAAM,OAAO,GAAG,CAAC,KAAI,CAAC,MAAM,CAAC,eAAe,EAAE,IAAI,KAAI,CAAC,MAAM,CAAC,eAAe,EAAE,CAAC,IAAI,CAAC,IAAI,IAAI,CAAC;YAC9F,IAAM,QAAQ,GAAG,CAAC,KAAI,CAAC,MAAM,CAAC,eAAe,EAAE,IAAI,KAAI,CAAC,MAAM,CAAC,eAAe,EAAE,CAAC,KAAK,CAAC,IAAI,KAAK,CAAC;YACjG,KAAI,CAAC,KAAK,GAAG,OAAO,GAAG,OAAO,GAAG,QAAQ,CAAC;YAC1C,KAAI,CAAC,SAAS,EAAE,CAAC;QACnB,CAAC,CAAC,CAAC;IACP,CAAC;IAED,6CAAW,GAAX,UAAY,KAAU;QACpB,KAAK,CAAC,cAAc,EAAE,CAAC;QACvB,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;QAChB,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,KAAK,EAAE,EAAE,SAAS,EAAE,KAAK,EAAE,CAAC,CAAC;QACxD,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;QAC1B,IAAI,CAAC,SAAS,EAAE,CAAC;IACnB,CAAC;IACH,8BAAC;AAAD,CAAC,AA5BD,CAA6C,aAAa,GA4BzD;AA5BY,uBAAuB;IARnC,SAAS,CAAC;QACT,QAAQ,EAAE,iBAAiB;QAC3B,QAAQ,EAAE,sQAIT;KACF,CAAC;;GACW,uBAAuB,CA4BnC;SA5BY,uBAAuB","sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { FormControl } from '@angular/forms';\r\n\r\nimport { DefaultFilter } from './default-filter';\r\nimport 'rxjs/add/operator/debounceTime';\r\n\r\n@Component({\r\n  selector: 'checkbox-filter',\r\n  template: `\r\n    <input type=\"checkbox\" [formControl]=\"inputControl\" [ngClass]=\"inputClass\" class=\"form-control\">\r\n    <a href=\"#\" *ngIf=\"filterActive\"\r\n                (click)=\"resetFilter($event)\">{{column.getFilterConfig()?.resetText || 'reset'}}</a>\r\n  `,\r\n})\r\nexport class CheckboxFilterComponent extends DefaultFilter implements OnInit {\r\n\r\n  filterActive: boolean = false;\r\n  inputControl = new FormControl();\r\n\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.changesSubscription = this.inputControl.valueChanges\r\n      .debounceTime(this.delay)\r\n      .subscribe((checked: boolean) => {\r\n        this.filterActive = true;\r\n        const trueVal = (this.column.getFilterConfig() && this.column.getFilterConfig().true) || true;\r\n        const falseVal = (this.column.getFilterConfig() && this.column.getFilterConfig().false) || false;\r\n        this.query = checked ? trueVal : falseVal;\r\n        this.setFilter();\r\n      });\r\n  }\r\n\r\n  resetFilter(event: any) {\r\n    event.preventDefault();\r\n    this.query = '';\r\n    this.inputControl.setValue(false, { emitEvent: false });\r\n    this.filterActive = false;\r\n    this.setFilter();\r\n  }\r\n}\r\n"]}
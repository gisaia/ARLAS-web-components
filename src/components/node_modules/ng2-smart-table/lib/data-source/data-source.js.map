{"version":3,"file":"data-source.js","sourceRoot":"","sources":["../../../../src/ng2-smart-table/lib/data-source/data-source.ts"],"names":[],"mappings":"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","sourcesContent":["import { Subject } from 'rxjs/Subject';\r\nimport { Observable } from 'rxjs/Observable';\r\n\r\nexport abstract class DataSource {\r\n\r\n  protected onChangedSource = new Subject<any>();\r\n  protected onAddedSource = new Subject<any>();\r\n  protected onUpdatedSource = new Subject<any>();\r\n  protected onRemovedSource = new Subject<any>();\r\n\r\n  abstract getAll(): Promise<any>;\r\n  abstract getElements(): Promise<any>;\r\n  abstract getSort(): any;\r\n  abstract getFilter(): any;\r\n  abstract getPaging(): any;\r\n  abstract count(): number;\r\n\r\n  refresh() {\r\n    this.emitOnChanged('refresh');\r\n  }\r\n\r\n  load(data: Array<any>): Promise<any> {\r\n    this.emitOnChanged('load');\r\n    return Promise.resolve();\r\n  }\r\n\r\n  onChanged(): Observable<any> {\r\n    return this.onChangedSource.asObservable();\r\n  }\r\n\r\n  onAdded(): Observable<any> {\r\n    return this.onAddedSource.asObservable();\r\n  }\r\n\r\n  onUpdated(): Observable<any> {\r\n    return this.onUpdatedSource.asObservable();\r\n  }\r\n\r\n  onRemoved(): Observable<any> {\r\n    return this.onRemovedSource.asObservable();\r\n  }\r\n\r\n  prepend(element: any): Promise<any> {\r\n    this.emitOnAdded(element);\r\n    this.emitOnChanged('prepend');\r\n    return Promise.resolve();\r\n  }\r\n\r\n  append(element: any): Promise<any> {\r\n    this.emitOnAdded(element);\r\n    this.emitOnChanged('append');\r\n    return Promise.resolve();\r\n  }\r\n\r\n  add(element: any): Promise<any> {\r\n    this.emitOnAdded(element);\r\n    this.emitOnChanged('add');\r\n    return Promise.resolve();\r\n  }\r\n\r\n  remove(element: any): Promise<any> {\r\n    this.emitOnRemoved(element);\r\n    this.emitOnChanged('remove');\r\n    return Promise.resolve();\r\n  }\r\n\r\n  update(element: any, values: any): Promise<any> {\r\n    this.emitOnUpdated(element);\r\n    this.emitOnChanged('update');\r\n    return Promise.resolve();\r\n  }\r\n\r\n  empty(): Promise<any> {\r\n    this.emitOnChanged('empty');\r\n    return Promise.resolve();\r\n  }\r\n\r\n  setSort(conf: Array<any>, doEmit?: boolean) {\r\n    if (doEmit) {\r\n      this.emitOnChanged('sort');\r\n    }\r\n  }\r\n\r\n  setFilter(conf: Array<any>, andOperator?: boolean, doEmit?: boolean) {\r\n    if (doEmit) {\r\n      this.emitOnChanged('filter');\r\n    }\r\n  }\r\n\r\n  addFilter(fieldConf: {}, andOperator?: boolean, doEmit?: boolean) {\r\n    if (doEmit) {\r\n      this.emitOnChanged('filter');\r\n    }\r\n  }\r\n\r\n  setPaging(page: number, perPage: number, doEmit?: boolean) {\r\n    if (doEmit) {\r\n      this.emitOnChanged('paging');\r\n    }\r\n  }\r\n\r\n  setPage(page: number, doEmit?: boolean) {\r\n    if (doEmit) {\r\n      this.emitOnChanged('page');\r\n    }\r\n  }\r\n\r\n  protected emitOnRemoved(element: any) {\r\n    this.onRemovedSource.next(element);\r\n  }\r\n\r\n  protected emitOnUpdated(element: any) {\r\n    this.onUpdatedSource.next(element);\r\n  }\r\n\r\n  protected emitOnAdded(element: any) {\r\n    this.onAddedSource.next(element);\r\n  }\r\n\r\n  protected emitOnChanged(action: string) {\r\n    this.getElements().then((elements) => this.onChangedSource.next({\r\n      action: action,\r\n      elements: elements,\r\n      paging: this.getPaging(),\r\n      filter: this.getFilter(),\r\n      sort: this.getSort(),\r\n    }));\r\n  }\r\n}\r\n"]}
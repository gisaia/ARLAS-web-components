{"version":3,"file":"server.data-source.js","sourceRoot":"","sources":["../../../../../src/ng2-smart-table/lib/data-source/server/server.data-source.ts"],"names":[],"mappings":"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","sourcesContent":["import { Http } from '@angular/http';\r\nimport { RequestOptionsArgs } from '@angular/http/src/interfaces';\r\nimport { URLSearchParams } from '@angular/http';\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { LocalDataSource } from '../local/local.data-source';\r\nimport { ServerSourceConf } from './server-source.conf';\r\nimport { getDeepFromObject } from '../../helpers';\r\n\r\nimport 'rxjs/add/operator/toPromise';\r\n\r\nexport class ServerDataSource extends LocalDataSource {\r\n\r\n  protected conf: ServerSourceConf;\r\n\r\n  protected lastRequestCount: number = 0;\r\n\r\n  constructor(protected http: Http, conf: ServerSourceConf | {} = {}) {\r\n    super();\r\n\r\n    this.conf = new ServerSourceConf(conf);\r\n\r\n    if (!this.conf.endPoint) {\r\n      throw new Error('At least endPoint must be specified as a configuration of the server data source.');\r\n    }\r\n  }\r\n\r\n  count(): number {\r\n    return this.lastRequestCount;\r\n  }\r\n\r\n  getElements(): Promise<any> {\r\n    return this.requestElements().map(res => {\r\n      this.lastRequestCount = this.extractTotalFromResponse(res);\r\n      this.data = this.extractDataFromResponse(res);\r\n\r\n      return this.data;\r\n    }).toPromise();\r\n  }\r\n\r\n  /**\r\n   * Extracts array of data from server response\r\n   * @param res\r\n   * @returns {any}\r\n   */\r\n  protected extractDataFromResponse(res: any): Array<any> {\r\n    const rawData = res.json();\r\n    const data = !!this.conf.dataKey ? getDeepFromObject(rawData, this.conf.dataKey, []) : rawData;\r\n\r\n    if (data instanceof Array) {\r\n      return data;\r\n    }\r\n\r\n    throw new Error(`Data must be an array.\r\n    Please check that data extracted from the server response by the key '${this.conf.dataKey}' exists and is array.`);\r\n  }\r\n\r\n  /**\r\n   * Extracts total rows count from the server response\r\n   * Looks for the count in the heders first, then in the response body\r\n   * @param res\r\n   * @returns {any}\r\n   */\r\n  protected extractTotalFromResponse(res: any): number {\r\n    if (res.headers.has(this.conf.totalKey)) {\r\n      return +res.headers.get(this.conf.totalKey);\r\n    } else {\r\n      const rawData = res.json();\r\n      return getDeepFromObject(rawData, this.conf.totalKey, 0);\r\n    }\r\n  }\r\n\r\n  protected requestElements(): Observable<any> {\r\n    return this.http.get(this.conf.endPoint, this.createRequestOptions());\r\n  }\r\n\r\n  protected createRequestOptions(): RequestOptionsArgs {\r\n    let requestOptions: RequestOptionsArgs = {};\r\n    requestOptions.params = new URLSearchParams();\r\n\r\n    requestOptions = this.addSortRequestOptions(requestOptions);\r\n    requestOptions = this.addFilterRequestOptions(requestOptions);\r\n    return this.addPagerRequestOptions(requestOptions);\r\n  }\r\n\r\n  protected addSortRequestOptions(requestOptions: RequestOptionsArgs): RequestOptionsArgs {\r\n    const searchParams: URLSearchParams = <URLSearchParams>requestOptions.params;\r\n\r\n    if (this.sortConf) {\r\n      this.sortConf.forEach((fieldConf) => {\r\n        searchParams.set(this.conf.sortFieldKey, fieldConf.field);\r\n        searchParams.set(this.conf.sortDirKey, fieldConf.direction.toUpperCase());\r\n      });\r\n    }\r\n\r\n    return requestOptions;\r\n  }\r\n\r\n  protected addFilterRequestOptions(requestOptions: RequestOptionsArgs): RequestOptionsArgs {\r\n    const searchParams: URLSearchParams = <URLSearchParams>requestOptions.params;\r\n\r\n    if (this.filterConf.filters) {\r\n      this.filterConf.filters.forEach((fieldConf: any) => {\r\n        if (fieldConf['search']) {\r\n          searchParams.set(this.conf.filterFieldKey.replace('#field#', fieldConf['field']), fieldConf['search']);\r\n        }\r\n      });\r\n    }\r\n\r\n    return requestOptions;\r\n  }\r\n\r\n  protected addPagerRequestOptions(requestOptions: RequestOptionsArgs): RequestOptionsArgs {\r\n    const searchParams: URLSearchParams = <URLSearchParams>requestOptions.params;\r\n\r\n    if (this.pagingConf && this.pagingConf['page'] && this.pagingConf['perPage']) {\r\n      searchParams.set(this.conf.pagerPageKey, this.pagingConf['page']);\r\n      searchParams.set(this.conf.pagerLimitKey, this.pagingConf['perPage']);\r\n    }\r\n\r\n    return requestOptions;\r\n  }\r\n}\r\n"]}
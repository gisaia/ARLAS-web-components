/*
 * Licensed to Gisaïa under one or more contributor
 * license agreements. See the NOTICE.txt file distributed with
 * this work for additional information regarding copyright
 * ownership. Gisaïa licenses this file to you under
 * the Apache License, Version 2.0 (the "License"); you may
 * not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */
import { Component, Input, Output } from '@angular/core';
import { TranslateService } from '@ngx-translate/core';
import { NUMBER_FORMAT_CHAR } from '../../componentsUtils';
import { Subject } from 'rxjs';
import { Item } from '../model/item';
import * as i0 from "@angular/core";
import * as i1 from "@ngx-translate/core";
import * as i2 from "@angular/common";
import * as i3 from "@angular/material/icon";
import * as i4 from "@angular/material/tooltip";
import * as i5 from "../result-actions/result-actions.component";
import * as i6 from "../../../pipes/format-number/format-number.pipe";
import * as i7 from "../../../pipes/replace/replace.pipe";
import * as i8 from "../../../pipes/get-attachment-url/get-attachment-url.pipe";
export class ResultDetailedItemComponent {
    constructor(translate) {
        this.translate = translate;
        /**
         * @Input
         * @description Whether display group with no detail.
         */
        this.showEmptyGroup = false;
        /**
         * @Output
         * @description Emits the event of applying the specified action on the specified item.
         */
        this.actionOnItemEvent = new Subject();
        /**
         * @Input : Angular
         * @description List of active actions per item.
        */
        this.activatedActionsPerItem = new Map();
        this.NUMBER_FORMAT_CHAR = NUMBER_FORMAT_CHAR;
    }
    ngOnInit() { }
    // Emits the action on this ResultDetailedItem to the parent (ResultList)
    triggerActionOnItem(action) {
        this.actionOnItemEvent.next({ action: action, elementidentifier: { idFieldName: this.idFieldName, idValue: this.rowItem.identifier } });
    }
    getGroups() {
        return (this.showEmptyGroup) ? (this.rowItem?.itemDetailedData) : (this.rowItem?.itemDetailedData.filter(d => d.details.length > 0));
    }
    getAttachmentLabel(attachment, index) {
        if (attachment.label && attachment.label.length > 0) {
            return attachment.label;
        }
        else {
            return this.translate.instant('Link') + ' ' + index;
        }
    }
    getAttachmentDescription(attachment) {
        if (attachment.description && attachment.description.length > 0) {
            return attachment.description;
        }
        else {
            return attachment.url;
        }
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "18.2.13", ngImport: i0, type: ResultDetailedItemComponent, deps: [{ token: i1.TranslateService }], target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "18.2.13", type: ResultDetailedItemComponent, selector: "[arlas-result-detailed-item]", inputs: { detailColspan: "detailColspan", idFieldName: "idFieldName", containerType: "containerType", rowItem: "rowItem", showEmptyGroup: "showEmptyGroup", detailedDataRetriever: "detailedDataRetriever", activatedActionsPerItem: "activatedActionsPerItem" }, outputs: { actionOnItemEvent: "actionOnItemEvent" }, ngImport: i0, template: "<td class=\"checkboxcell\" [colSpan]=\"1\">\n</td>\n<td [class.grid-container]=\"containerType === 'grid'\" [colSpan]=\"detailColspan - 1\">\n  <div class=\"details-title\" *ngIf=\"rowItem?.detailsTitleEnabled\">{{rowItem?.detailsTitle}}</div>\n  <div class=\"resultdetaileditem\">\n    <ng-container *ngFor=\"let group of rowItem?.itemDetailedData\">\n      <div class=\"resultdetaileditem--group\" *ngIf=\"showEmptyGroup || group.details.length > 0\">\n        <span class=\"resultdetaileditem--group-title {{group.group | replace:' ':'-' | lowercase}}-item-detail\">\n          {{group.group | translate}}\n        </span>\n        <span *ngFor=\"let detail of group.details\" class=\"resultdetaileditem--item {{detail.key}}-item-detail\">\n          <span class=\"resultdetaileditem--item--key\">{{detail.key | translate}}</span>\n          <span class=\"resultdetaileditem--item--value\">{{detail.value | formatNumber:NUMBER_FORMAT_CHAR}}</span>\n        </span>\n      </div>\n    </ng-container>\n    <arlas-result-actions\n          [activatedActionsPerItem]=\"activatedActionsPerItem\"\n          [detailedDataRetriever]=\"detailedDataRetriever\"\n          [item]=\"rowItem\"\n          [mode]=\"'text'\"\n          (actionOnItemEvent)=\"triggerActionOnItem($event)\" ></arlas-result-actions>\n    <span class=\"result-attachments\" *ngIf=\"rowItem?.attachments && rowItem?.attachments.length > 0\">\n      <div class=\"result-attachments--title\">{{'Attachments' | translate}}</div>\n      <span class=\"result-attachments--item\" *ngFor=\"let att of rowItem?.attachments; index as i\">\n        <a class=\"result-attachments--item--link\" href=\"{{att.url | getAttachmentUrl}}\"\n          matTooltip=\"{{getAttachmentDescription(att)}}\" [matTooltipPosition]=\"'after'\" target=\"_blank\">\n          <mat-icon *ngIf=\"att.icon\" class=\"result-attachments--item--link--icon\">{{att.icon}}</mat-icon>\n          <span class=\"result-attachments--item--link--label\"> {{getAttachmentLabel(att, i + 1)}}</span>\n        </a>\n      </span>\n    </span>\n  </div>\n\n</td>\n", styles: ["@charset \"UTF-8\";.grid-container{overflow-y:auto;display:block;height:100%;padding:0}.grid-container .details-title{background-color:#fff;position:sticky;top:0}.details-title{font-weight:500;font-size:1.1em;padding:5px}.resultdetaileditem{font-family:Roboto,Helvetica Neue,sans-serif;font-size:.7em;text-align:left;padding:0 5px}.resultdetaileditem--group{padding-bottom:10px}.resultdetaileditem--group-title{font-weight:700;font-size:12px;border-bottom:1px solid rgba(240,238,238,.8117647059);display:block}.resultdetaileditem--item{display:block;color:#000;padding:3px;border-bottom:1px solid rgba(240,238,238,.8117647059)}.resultdetaileditem--item--key{font-size:11px;font-weight:500;width:120px;display:inline-block;white-space:pre-wrap}.resultdetaileditem--item--value{margin-right:10px;font-weight:500;font-size:11px;overflow-wrap:anywhere}.resultdetaileditem .resultdetaileditem__actions{font-family:Roboto,Helvetica Neue,sans-serif;font-size:.9em;margin:3px;padding:5px 10px;height:25px;line-height:0;cursor:pointer;color:#000;background-color:#fff;border:1.5px solid black;border-radius:2px}.result-attachments{display:block;max-width:95%;padding-top:10px}.result-attachments--title{font-weight:700;color:#322d90;font-size:1.1em}.result-attachments--item{padding-right:5px}\n"], dependencies: [{ kind: "directive", type: i2.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { kind: "directive", type: i2.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { kind: "component", type: i3.MatIcon, selector: "mat-icon", inputs: ["color", "inline", "svgIcon", "fontSet", "fontIcon"], exportAs: ["matIcon"] }, { kind: "directive", type: i4.MatTooltip, selector: "[matTooltip]", inputs: ["matTooltipPosition", "matTooltipPositionAtOrigin", "matTooltipDisabled", "matTooltipShowDelay", "matTooltipHideDelay", "matTooltipTouchGestures", "matTooltip", "matTooltipClass"], exportAs: ["matTooltip"] }, { kind: "component", type: i5.ResultActionsComponent, selector: "arlas-result-actions", inputs: ["item", "width", "activatedActionsPerItem", "detailedDataRetriever", "stopPropagation", "mode"], outputs: ["actionOnItemEvent"] }, { kind: "pipe", type: i2.LowerCasePipe, name: "lowercase" }, { kind: "pipe", type: i1.TranslatePipe, name: "translate" }, { kind: "pipe", type: i6.FormatNumberPipe, name: "formatNumber" }, { kind: "pipe", type: i7.ReplacePipe, name: "replace" }, { kind: "pipe", type: i8.GetAttachmentUrlPipe, name: "getAttachmentUrl" }] }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "18.2.13", ngImport: i0, type: ResultDetailedItemComponent, decorators: [{
            type: Component,
            args: [{ selector: '[arlas-result-detailed-item]', template: "<td class=\"checkboxcell\" [colSpan]=\"1\">\n</td>\n<td [class.grid-container]=\"containerType === 'grid'\" [colSpan]=\"detailColspan - 1\">\n  <div class=\"details-title\" *ngIf=\"rowItem?.detailsTitleEnabled\">{{rowItem?.detailsTitle}}</div>\n  <div class=\"resultdetaileditem\">\n    <ng-container *ngFor=\"let group of rowItem?.itemDetailedData\">\n      <div class=\"resultdetaileditem--group\" *ngIf=\"showEmptyGroup || group.details.length > 0\">\n        <span class=\"resultdetaileditem--group-title {{group.group | replace:' ':'-' | lowercase}}-item-detail\">\n          {{group.group | translate}}\n        </span>\n        <span *ngFor=\"let detail of group.details\" class=\"resultdetaileditem--item {{detail.key}}-item-detail\">\n          <span class=\"resultdetaileditem--item--key\">{{detail.key | translate}}</span>\n          <span class=\"resultdetaileditem--item--value\">{{detail.value | formatNumber:NUMBER_FORMAT_CHAR}}</span>\n        </span>\n      </div>\n    </ng-container>\n    <arlas-result-actions\n          [activatedActionsPerItem]=\"activatedActionsPerItem\"\n          [detailedDataRetriever]=\"detailedDataRetriever\"\n          [item]=\"rowItem\"\n          [mode]=\"'text'\"\n          (actionOnItemEvent)=\"triggerActionOnItem($event)\" ></arlas-result-actions>\n    <span class=\"result-attachments\" *ngIf=\"rowItem?.attachments && rowItem?.attachments.length > 0\">\n      <div class=\"result-attachments--title\">{{'Attachments' | translate}}</div>\n      <span class=\"result-attachments--item\" *ngFor=\"let att of rowItem?.attachments; index as i\">\n        <a class=\"result-attachments--item--link\" href=\"{{att.url | getAttachmentUrl}}\"\n          matTooltip=\"{{getAttachmentDescription(att)}}\" [matTooltipPosition]=\"'after'\" target=\"_blank\">\n          <mat-icon *ngIf=\"att.icon\" class=\"result-attachments--item--link--icon\">{{att.icon}}</mat-icon>\n          <span class=\"result-attachments--item--link--label\"> {{getAttachmentLabel(att, i + 1)}}</span>\n        </a>\n      </span>\n    </span>\n  </div>\n\n</td>\n", styles: ["@charset \"UTF-8\";.grid-container{overflow-y:auto;display:block;height:100%;padding:0}.grid-container .details-title{background-color:#fff;position:sticky;top:0}.details-title{font-weight:500;font-size:1.1em;padding:5px}.resultdetaileditem{font-family:Roboto,Helvetica Neue,sans-serif;font-size:.7em;text-align:left;padding:0 5px}.resultdetaileditem--group{padding-bottom:10px}.resultdetaileditem--group-title{font-weight:700;font-size:12px;border-bottom:1px solid rgba(240,238,238,.8117647059);display:block}.resultdetaileditem--item{display:block;color:#000;padding:3px;border-bottom:1px solid rgba(240,238,238,.8117647059)}.resultdetaileditem--item--key{font-size:11px;font-weight:500;width:120px;display:inline-block;white-space:pre-wrap}.resultdetaileditem--item--value{margin-right:10px;font-weight:500;font-size:11px;overflow-wrap:anywhere}.resultdetaileditem .resultdetaileditem__actions{font-family:Roboto,Helvetica Neue,sans-serif;font-size:.9em;margin:3px;padding:5px 10px;height:25px;line-height:0;cursor:pointer;color:#000;background-color:#fff;border:1.5px solid black;border-radius:2px}.result-attachments{display:block;max-width:95%;padding-top:10px}.result-attachments--title{font-weight:700;color:#322d90;font-size:1.1em}.result-attachments--item{padding-right:5px}\n"] }]
        }], ctorParameters: () => [{ type: i1.TranslateService }], propDecorators: { detailColspan: [{
                type: Input
            }], idFieldName: [{
                type: Input
            }], containerType: [{
                type: Input
            }], rowItem: [{
                type: Input
            }], showEmptyGroup: [{
                type: Input
            }], actionOnItemEvent: [{
                type: Output
            }], detailedDataRetriever: [{
                type: Input
            }], activatedActionsPerItem: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,
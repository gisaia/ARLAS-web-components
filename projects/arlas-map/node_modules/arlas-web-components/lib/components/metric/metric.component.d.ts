import { OnChanges, OnInit, SimpleChanges } from '@angular/core';
import * as i0 from "@angular/core";
export declare class MetricComponent implements OnInit, OnChanges {
    beforeValue: string;
    value: number;
    afterValue: string;
    customizedCssClass: string;
    valuePrecision: number;
    /**
     * Whether to shorten the metric value
     */
    shortValue: boolean;
    /**
     * Whether to display a '~' before the metric value
     */
    approximateValue: boolean;
    /**
     * @Input : Angular
     * @description Chart's width. If not specified, the chart takes the component's container width.
     */
    chartWidth: any;
    displayedValue: string | number;
    NUMBER_FORMAT_CHAR: string;
    constructor();
    ngOnInit(): void;
    ngOnChanges(changes: SimpleChanges): void;
    /**
     * @returns Json schema of the donut component for configuration
     */
    static getMetricJsonSchema(): Object;
    static round(value: number, precision: number): number;
    /**
     * Sets the value displayed in html
     */
    private setDisplayedValue;
    static ɵfac: i0.ɵɵFactoryDeclaration<MetricComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<MetricComponent, "arlas-metric", never, { "beforeValue": { "alias": "beforeValue"; "required": false; }; "value": { "alias": "value"; "required": false; }; "afterValue": { "alias": "afterValue"; "required": false; }; "customizedCssClass": { "alias": "customizedCssClass"; "required": false; }; "valuePrecision": { "alias": "valuePrecision"; "required": false; }; "shortValue": { "alias": "shortValue"; "required": false; }; "approximateValue": { "alias": "approximateValue"; "required": false; }; "chartWidth": { "alias": "chartWidth"; "required": false; }; }, {}, never, never, false, never>;
}

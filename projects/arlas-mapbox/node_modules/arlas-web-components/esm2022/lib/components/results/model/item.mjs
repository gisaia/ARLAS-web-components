/*
 * Licensed to Gisaïa under one or more contributor
 * license agreements. See the NOTICE.txt file distributed with
 * this work for additional information regarding copyright
 * ownership. Gisaïa licenses this file to you under
 * the Apache License, Version 2.0 (the "License"); you may
 * not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */
;
export class Item {
    constructor(columns, itemData) {
        /**
         * @description More data organized in groups.
         */
        this.itemDetailedData = new Array();
        /**
         * @description Whether to display the detailed data.
         */
        this.isDetailToggled = false;
        /**
         * @description Whether the item is checked.
         */
        this.isChecked = false;
        /**
         * @description Whether the item state is indeterminated.
         */
        this.isindeterminated = false;
        /**
         * @description Whether to highlight the item.
         */
        this.ishighLight = undefined;
        this.columns = columns;
        this.itemData = itemData;
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaXRlbS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL2FybGFzLWNvbXBvbmVudHMvc3JjL2xpYi9jb21wb25lbnRzL3Jlc3VsdHMvbW9kZWwvaXRlbS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Ozs7Ozs7Ozs7R0FpQkc7QUFRRixDQUFDO0FBRUYsTUFBTSxPQUFPLElBQUk7SUFpR2YsWUFBbUIsT0FBc0IsRUFBRSxRQUFtQztRQXREOUU7O1dBRUc7UUFDSSxxQkFBZ0IsR0FBRyxJQUFJLEtBQUssRUFBbUIsQ0FBQztRQVN2RDs7V0FFRztRQUNJLG9CQUFlLEdBQUcsS0FBSyxDQUFDO1FBQy9COztXQUVHO1FBQ0ksY0FBUyxHQUFHLEtBQUssQ0FBQztRQUN6Qjs7V0FFRztRQUNJLHFCQUFnQixHQUFHLEtBQUssQ0FBQztRQUNoQzs7V0FFRztRQUNJLGdCQUFXLEdBQUcsU0FBUyxDQUFDO1FBNEI3QixJQUFJLENBQUMsT0FBTyxHQUFHLE9BQU8sQ0FBQztRQUN2QixJQUFJLENBQUMsUUFBUSxHQUFHLFFBQVEsQ0FBQztJQUMzQixDQUFDO0NBQ0YiLCJzb3VyY2VzQ29udGVudCI6WyIvKlxuICogTGljZW5zZWQgdG8gR2lzYcOvYSB1bmRlciBvbmUgb3IgbW9yZSBjb250cmlidXRvclxuICogbGljZW5zZSBhZ3JlZW1lbnRzLiBTZWUgdGhlIE5PVElDRS50eHQgZmlsZSBkaXN0cmlidXRlZCB3aXRoXG4gKiB0aGlzIHdvcmsgZm9yIGFkZGl0aW9uYWwgaW5mb3JtYXRpb24gcmVnYXJkaW5nIGNvcHlyaWdodFxuICogb3duZXJzaGlwLiBHaXNhw69hIGxpY2Vuc2VzIHRoaXMgZmlsZSB0byB5b3UgdW5kZXJcbiAqIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7IHlvdSBtYXlcbiAqIG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiAgICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsXG4gKiBzb2Z0d2FyZSBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhblxuICogXCJBUyBJU1wiIEJBU0lTLCBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTllcbiAqIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuICBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZVxuICogc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZCBsaW1pdGF0aW9uc1xuICogdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cblxuaW1wb3J0IHsgQWN0aW9uLCBBdHRhY2htZW50LCBJdGVtRGF0YVR5cGUgfSBmcm9tICcuLi91dGlscy9yZXN1bHRzLnV0aWxzJztcbmltcG9ydCB7IENvbHVtbiB9IGZyb20gJy4vY29sdW1uJztcblxuZXhwb3J0IGludGVyZmFjZSBJdGVtRGV0YWlsR3JvdXAge1xuICBncm91cDogc3RyaW5nO1xuICBkZXRhaWxzOiBBcnJheTx7IGtleTogc3RyaW5nOyB2YWx1ZTogc3RyaW5nOyB9Pjtcbn07XG5cbmV4cG9ydCBjbGFzcyBJdGVtIHtcblxuICAvKipcbiAgICogQGRlc2NyaXB0aW9uIEl0ZW0ncyBpZGVudGlmaWVyLlxuICAgKi9cbiAgcHVibGljIGlkZW50aWZpZXI6IHN0cmluZztcbiAgLyoqXG4gICAqIEBkZXNjcmlwdGlvbiBMaXN0IG9mIHVybHMgcG9pbnRpbmcgdG8gdGhlIGl0ZW0ncyBpbWFnZXMuXG4gICAqL1xuICBwdWJsaWMgdXJsSW1hZ2VzOiBBcnJheTxzdHJpbmc+O1xuICAvKipcbiAgICogQGRlc2NyaXB0aW9uIExpc3Qgb2YgZGVzY3JpcHRpb25zIG9mIHRoZSBpbWFnZXMuXG4gICAqL1xuICBwdWJsaWMgZGVzY3JpcHRpb25zOiBBcnJheTxzdHJpbmc+O1xuICAvKipcbiAgICogQGRlc2NyaXB0aW9uIElmIGltYWdlIGlzIGVuYWJsZWQgKHRvIGF2b2lkIDQwNCBub3QgZm91bmQpXG4gICAqL1xuICBwdWJsaWMgaW1hZ2VFbmFibGVkOiBib29sZWFuO1xuICAvKipcbiAgICogQGRlc2NyaXB0aW9uIFVybCB0aGF0IGxpbmtzIHRoZSBpdGVtJ3MgdGh1bWJuYWlsLlxuICAgKi9cbiAgcHVibGljIHVybFRodW1ibmFpbDogc3RyaW5nO1xuICAvKipcbiAgICogQGRlc2NyaXB0aW9uIElmIHRodW1ibmFpbCBpcyBlbmFibGVkICh0byBhdm9pZCA0MDQgbm90dCBmb3VuZClcbiAgICovXG4gIHB1YmxpYyB0aHVtYm5haWxFbmFibGVkOiBib29sZWFuO1xuICAvKipcbiAgICogQGRlc2NyaXB0aW9uIEl0ZW0ncyB0aXRsZS5cbiAgICovXG4gIHB1YmxpYyB0aXRsZTogc3RyaW5nO1xuICAvKipcbiAgICogQGRlc2NyaXB0aW9uIEl0ZW0ncyB0b29sdGlwLlxuICAgKi9cbiAgcHVibGljIHRvb2x0aXA6IHN0cmluZztcbiAgLyoqXG4gICAqIEBkZXNjcmlwdGlvbiBUaGUgaXRlbSdzIGRhdGEgaXMgb3JnYW5pemVkIGluIHRoaXMgY29sdW1ucyB3aGVuIHJlcHJlc2VudGVkIGluIGEgdGFibGUuXG4gICAqL1xuICBwdWJsaWMgY29sdW1uczogQXJyYXk8Q29sdW1uPjtcbiAgLyoqXG4gICAqIEBkZXNjcmlwdGlvbiBBIGZpZWxkTmFtZS1maWVsZFZhbHVlIG1hcCByZXByZXNlbnRpbmcgdGhlIGl0ZW0ncyBkYXRhLlxuICAgKi9cbiAgcHVibGljIGl0ZW1EYXRhOiBNYXA8c3RyaW5nLCBJdGVtRGF0YVR5cGU+O1xuXG4gIC8qKlxuICAgKiBAZGVzY3JpcHRpb24gTW9yZSBkYXRhIG9yZ2FuaXplZCBpbiBncm91cHMuXG4gICAqL1xuICBwdWJsaWMgaXRlbURldGFpbGVkRGF0YSA9IG5ldyBBcnJheTxJdGVtRGV0YWlsR3JvdXA+KCk7XG4gIC8qKlxuICAgICAqIEBkZXNjcmlwdGlvbiBMaW5rcyBhdHRhY2hlZCB0byB0aGUgaXRlbS5cbiAgICAgKi9cbiAgcHVibGljIGF0dGFjaG1lbnRzOiBBcnJheTxBdHRhY2htZW50PjtcbiAgLyoqXG4gICAqIEBkZXNjcmlwdGlvbiBMaXN0IG9mIGFjdGlvbnMgdGhhdCBjYW4gYmUgYXBwbGllZCB0byB0aGlzIGl0ZW0uXG4gICAqL1xuICBwdWJsaWMgYWN0aW9uczogQXJyYXk8QWN0aW9uPjtcbiAgLyoqXG4gICAqIEBkZXNjcmlwdGlvbiBXaGV0aGVyIHRvIGRpc3BsYXkgdGhlIGRldGFpbGVkIGRhdGEuXG4gICAqL1xuICBwdWJsaWMgaXNEZXRhaWxUb2dnbGVkID0gZmFsc2U7XG4gIC8qKlxuICAgKiBAZGVzY3JpcHRpb24gV2hldGhlciB0aGUgaXRlbSBpcyBjaGVja2VkLlxuICAgKi9cbiAgcHVibGljIGlzQ2hlY2tlZCA9IGZhbHNlO1xuICAvKipcbiAgICogQGRlc2NyaXB0aW9uIFdoZXRoZXIgdGhlIGl0ZW0gc3RhdGUgaXMgaW5kZXRlcm1pbmF0ZWQuXG4gICAqL1xuICBwdWJsaWMgaXNpbmRldGVybWluYXRlZCA9IGZhbHNlO1xuICAvKipcbiAgICogQGRlc2NyaXB0aW9uIFdoZXRoZXIgdG8gaGlnaGxpZ2h0IHRoZSBpdGVtLlxuICAgKi9cbiAgcHVibGljIGlzaGlnaExpZ2h0ID0gdW5kZWZpbmVkO1xuICAvKipcbiAgICogQGRlc2NyaXB0aW9uIFRoZSBpdGVtIHBvc2l0aW9uIGluIGEgbGlzdCBvZiBpdGVtcy5cbiAgICovXG4gIHB1YmxpYyBwb3NpdGlvbjogbnVtYmVyO1xuICAvKipcbiAgICogQGRlc2NyaXB0aW9uIFRoZSBtYXRlcmlhbCBncmlkIGljb24uXG4gICAqIEBkZXByZWNhdGVkXG4gICAqL1xuICBwdWJsaWMgaWNvbjogc3RyaW5nO1xuICAvKipcbiAgICogQGRlc2NyaXB0aW9uIFRoZSBjc3MgY2xhc3MgZm9yIG1hdGVyaWFsIGdyaWQgaWNvbi5cbiAgICovXG4gIHB1YmxpYyBpY29uQ3NzQ2xhc3M6IHN0cmluZztcbiAgLyoqXG4gICAqIEBkZXNjcmlwdGlvbiBjb2xvciBjaGFyYWN0ZXJpc2luZyB0aGUgaXRlbVxuICAgKi9cbiAgcHVibGljIGNvbG9yOiBzdHJpbmc7XG4gIC8qKlxuICAgICogQGRlc2NyaXB0aW9uIFRpdGxlIGZvciB0aGUgZGV0YWlscyBzZWN0aW9uLlxuICAgICovXG4gIHB1YmxpYyBkZXRhaWxzVGl0bGU6IHN0cmluZztcbiAgLyoqXG4gICAqIEBkZXNjcmlwdGlvbiBJZiBkZXRhaWxzIGl0ZW0gdGl0bGUgaXMgZW5hYmxlZFxuICAgKi9cbiAgcHVibGljIGRldGFpbHNUaXRsZUVuYWJsZWQ6IGJvb2xlYW47XG5cbiAgcHVibGljIGNvbnN0cnVjdG9yKGNvbHVtbnM6IEFycmF5PENvbHVtbj4sIGl0ZW1EYXRhOiBNYXA8c3RyaW5nLCBJdGVtRGF0YVR5cGU+KSB7XG4gICAgdGhpcy5jb2x1bW5zID0gY29sdW1ucztcbiAgICB0aGlzLml0ZW1EYXRhID0gaXRlbURhdGE7XG4gIH1cbn1cbiJdfQ==
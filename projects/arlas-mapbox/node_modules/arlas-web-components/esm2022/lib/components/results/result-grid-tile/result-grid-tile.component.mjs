/*
 * Licensed to Gisaïa under one or more contributor
 * license agreements. See the NOTICE.txt file distributed with
 * this work for additional information regarding copyright
 * ownership. Gisaïa licenses this file to you under
 * the Apache License, Version 2.0 (the "License"); you may
 * not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */
import { Component, Input, Output, ViewChild } from '@angular/core';
import { MatTooltip } from '@angular/material/tooltip';
import { Subject } from 'rxjs';
import { Item } from '../model/item';
import { ItemComponent } from '../model/itemComponent';
import { ThumbnailFitEnum } from '../utils/enumerations/thumbnailFitEnum';
import { ResultListOptions } from '../utils/results.utils';
import { marker } from '@colsen1991/ngx-translate-extract-marker';
import * as i0 from "@angular/core";
import * as i1 from "@angular/common";
import * as i2 from "@angular/material/icon";
import * as i3 from "@angular/material/tooltip";
import * as i4 from "ng-lazyload-image";
import * as i5 from "../result-actions/result-actions.component";
import * as i6 from "@ngx-translate/core";
export class ResultGridTileComponent extends ItemComponent {
    constructor() {
        super();
        /**
         * @constant
         */
        this.SHOW_IMAGE = marker('Click to show details');
        /**
         * @Input
         * @description How to fit the thumbnail to the tile:
         * - `height` fit the height of the thumbnail.
         * - `width` fit the width of the thumbnail.
         * - `contain` fit the wholethumbnail.
         */
        this.thumbnailFit = ThumbnailFitEnum.contain;
        /**
         * @Input : Angular
         * @description Map <itemId, Set<actionIds>> : for each item, gives the list of activated actions.
        */
        this.activatedActionsPerItem = new Map();
        /**
        * @Input
        * @description Display or not big full info icon on the grid.
        */
        this.displayInfoIcon = false;
        /**
         * @Output
         * @description Emits the event of applying the specified action on the specified item.
         */
        this.actionOnItemEvent = new Subject();
        /**
         * @Output
         * @description Emits the list of selected items in result-list.component.
         */
        this.selectedItemsEvent = new Subject();
        /**
         * @Output
         * @description Emits the selected/unselected item.
         * @deprecated
         */
        this.selectedItemPositionEvent = new Subject();
        /**
         * @Output
         * @description Emits the the item that it has been clicked on it.
         */
        this.clickedOnItemEvent = new Subject();
        this.ThumbnailFitEnum = ThumbnailFitEnum;
    }
    /**
     * Hides the cell's tooltip when the mouse is over the attachements buttons
     * @param event mouseover event
     */
    hideCellTooltip(event) {
        event.stopPropagation();
        this.cellTooltip.hide();
    }
    /**
     * Shows the cell's tooltip when the mouse is over the tile
     */
    showCellTooltip() {
        this.cellTooltip.show();
    }
    ngOnInit() { }
    // Update the list of the selected items
    setSelectedItem() {
        super.setSelectedItem(this.gridTile.isChecked, this.gridTile.identifier, this.selectedItems);
        this.gridTile.isChecked = !this.gridTile.isChecked;
        // Emit to the result list the fact that this checkbox has changed in order to notify the correspondant one in list mode
        this.selectedItemsEvent.next(this.selectedItems);
    }
    determinateItem() {
        this.gridTile.isChecked = true;
        this.gridTile.isindeterminated = false;
        this.selectedItems.add(this.gridTile.identifier);
        // Emit to the result list the fact that this checkbox has changed in order to notify the correspondant one in grid mode
        this.selectedItemsEvent.next(this.selectedItems);
    }
    setClickedOnItem() {
        this.retrieveAdditionalInfo(this.detailedDataRetriever, this.gridTile);
        this.clickedOnItemEvent.next(this.gridTile);
    }
    triggerActionOnItem(action) {
        this.actionOnItemEvent.next({
            action: action,
            elementidentifier: { idFieldName: this.idFieldName, idValue: this.gridTile.identifier }
        });
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "18.2.13", ngImport: i0, type: ResultGridTileComponent, deps: [], target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "18.2.13", type: ResultGridTileComponent, selector: "arlas-result-grid-tile", inputs: { gridTile: "gridTile", thumbnailFit: "thumbnailFit", selectedItems: "selectedItems", detailedDataRetriever: "detailedDataRetriever", options: "options", idFieldName: "idFieldName", activatedActionsPerItem: "activatedActionsPerItem", displayInfoIcon: "displayInfoIcon" }, outputs: { actionOnItemEvent: "actionOnItemEvent", selectedItemsEvent: "selectedItemsEvent", selectedItemPositionEvent: "selectedItemPositionEvent", clickedOnItemEvent: "clickedOnItemEvent" }, viewQueries: [{ propertyName: "cellTooltip", first: true, predicate: ["cellTooltip"], descendants: true, static: true }], usesInheritance: true, ngImport: i0, template: "<div class=\"resultgrid\" >\n  <div class=\"resultgrid--container resultgrid--container-highlight-{{gridTile?.ishighLight}}\" color=\"primary\"[style.border-color]=\"gridTile?.color ? gridTile?.color : 'none'\">\n    <mat-icon *ngIf=\"gridTile?.isChecked && !gridTile?.isindeterminated\" (click)=\"setSelectedItem()\" class=\"primary resultgrid__icon_check mat-icon material-icons\">check_box</mat-icon>\n    <mat-icon *ngIf=\"!gridTile?.isChecked && !gridTile?.isindeterminated\" (click)=\"setSelectedItem()\" class=\"primary resultgrid__icon_check mat-icon material-icons\">check_box_outline_blank</mat-icon>\n    <mat-icon *ngIf=\"gridTile?.isindeterminated\" (click)=\"determinateItem()\" class=\"primary resultgrid__icon_check mat-icon material-icons\">indeterminate_check_box</mat-icon>\n    <div id=\"{{'grid-tile-' + gridTile?.identifier}}\" (click)=\"setClickedOnItem()\" (mouseover)=\"showCellTooltip()\" #cellTooltip=\"matTooltip\" matTooltip=\"{{SHOW_IMAGE | translate}}\"  class=\"resultgrid__img {{gridTile?.iconCssClass}}\">\n      <img [defaultImage]=\"options?.defautlImgUrl\" [lazyLoad]=\"gridTile?.urlThumbnail\"\n        [class.contain_thumbnail]=\"thumbnailFit === ThumbnailFitEnum.contain\" [class.height_thumbnail]=\"thumbnailFit === ThumbnailFitEnum.height\"\n        [class.width_thumbnail]=\"thumbnailFit === ThumbnailFitEnum.width\">\n      <div *ngIf=\"options?.showActionsOnhover\" class=\"actions\" (mouseover)=\"hideCellTooltip($event)\">\n        <arlas-result-actions \n          [activatedActionsPerItem]=\"activatedActionsPerItem\" \n          [detailedDataRetriever]=\"detailedDataRetriever\"\n          [item]=\"gridTile\"\n          [stopPropagation]=\"true\"\n          (actionOnItemEvent)=\"triggerActionOnItem($event)\" ></arlas-result-actions>\n\n      </div>\n      <mat-icon class=\"resultlist__md-grid-tile__selected--icon\" *ngIf=\"displayInfoIcon\">info_outline</mat-icon>\n    </div>\n    <div class=\"resultgrid__title-highlight-{{gridTile?.ishighLight}}\">\n      <span *ngIf=\"gridTile?.color\" matTooltip=\"{{gridTile?.tooltip}}\" class=\"tablet\" [style.background-color]=\"gridTile?.color\"></span>\n      <span class=\"resultgrid__title  resultgrid__title-{{gridTile?.iconCssClass}}\" > {{gridTile?.title}} </span>\n    </div>\n  </div>\n</div>\n", styles: ["@charset \"UTF-8\";.resultgrid{width:100%;height:100%}.resultitem-grid__actions{min-width:0;border-radius:50%;border:none;width:24px;height:24px;box-shadow:0 3px 1px -2px #0003,0 2px 2px #00000024,0 1px 5px #0000001f;font-size:0;margin:1px 5px;background-color:#fff;background-image:url(\"data:image/svg+xml,%3Csvg%20width%3D%2720%27%20height%3D%2720%27%20xmlns%3D%27http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%27%3E%20%3Cg%3E%20%20%3Ctitle%3Ebackground%3C%2Ftitle%3E%20%20%3Crect%20fill%3D%27%23fff%27%20id%3D%27canvas_background%27%20height%3D%2722%27%20width%3D%2722%27%20y%3D%27-1%27%20x%3D%27-1%27%2F%3E%20%20%3Cg%20display%3D%27none%27%20overflow%3D%27visible%27%20y%3D%270%27%20x%3D%270%27%20height%3D%27100%25%27%20width%3D%27100%25%27%20id%3D%27canvasGrid%27%3E%20%20%20%3Crect%20fill%3D%27url(%23gridpattern)%27%20stroke-width%3D%270%27%20y%3D%270%27%20x%3D%270%27%20height%3D%27100%25%27%20width%3D%27100%25%27%2F%3E%20%20%3C%2Fg%3E%20%3C%2Fg%3E%20%3Cg%3E%20%20%3Ctitle%3ELayer%201%3C%2Ftitle%3E%20%20%3Cellipse%20stroke%3D%27%23000000%27%20ry%3D%275.779194%27%20rx%3D%275.5%27%20id%3D%27svg_1%27%20cy%3D%2710.000004%27%20cx%3D%2710%27%20stroke-width%3D%272.5%27%20fill%3D%27%23ffffff%27%2F%3E%20%3C%2Fg%3E%3C%2Fsvg%3E\");background-repeat:no-repeat;background-position:center}.resultitem-grid__actions:active{border:1px solid white}.grid_actions{flex-direction:row-reverse;flex-wrap:wrap-reverse;position:absolute;bottom:1px;right:0;margin-left:2px;margin-top:2px}.resultgrid__img:hover .grid_actions{display:flex;justify-content:space-between}.resultgrid--container,.resultgrid--container-highlight-{width:100%;height:100%;margin:1px;background-color:#fff;position:relative;color:#000}.resultgrid .resultgrid--container .resultgrid__img:hover .actions ::ng-deep .list_actions .not_activated{display:block}.resultgrid .resultgrid--container .resultgrid__img .actions{position:absolute;bottom:15%;right:2px}.resultgrid--container-highlight-false{opacity:.3}.resultgrid--container-highlight-true{opacity:1}.resultgrid__icon_check{position:absolute;top:5px;left:5px;font-size:15px;width:15px;height:15px;color:#fff;cursor:pointer;z-index:5;-webkit-user-select:none;user-select:none}.resultgrid__img{box-sizing:border-box;display:flex;height:85%;width:100%;padding:2px;background-position:center center;background-repeat:no-repeat;position:relative;align-items:center;justify-content:center;background-color:#000}.resultgrid__title-highlight-,.resultgrid__title-highlight-false,.resultgrid__title-highlight-true{height:15%;color:#000;font-family:Roboto,Helvetica Neue,sans-serif;font-size:12px;display:flex;justify-content:space-between;align-items:center;padding:0 5px;box-sizing:border-box}.resultgrid__title-highlight- .tablet,.resultgrid__title-highlight-false .tablet,.resultgrid__title-highlight-true .tablet{height:80%;max-height:20px;aspect-ratio:1;border-radius:100px;margin-right:2px}.resultgrid__title-highlight- .resultgrid__title,.resultgrid__title-highlight-false .resultgrid__title,.resultgrid__title-highlight-true .resultgrid__title{text-overflow:ellipsis;white-space:nowrap;overflow:hidden}.resultgrid__title-highlight-false{opacity:.3}.fill-images{object-fit:cover;width:100%;height:100%;background-color:#000}.contain_thumbnail{object-fit:contain;width:100%;height:100%;background-color:#000}.height_thumbnail{object-fit:cover;max-width:100%;max-height:100%;height:100%;background-color:#000}.width_thumbnail{object-fit:cover;max-width:100%;max-height:100%;width:100%;background-color:#000}.resultlist__md-grid-tile{margin-top:5px}.resultlist__md-grid-tile__selected--icon{position:absolute;z-index:1;top:15px;color:#fff;background-color:transparent;opacity:50%;font-size:72px;height:72px!important;width:72px!important;pointer-events:auto;cursor:default}\n"], dependencies: [{ kind: "directive", type: i1.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { kind: "component", type: i2.MatIcon, selector: "mat-icon", inputs: ["color", "inline", "svgIcon", "fontSet", "fontIcon"], exportAs: ["matIcon"] }, { kind: "directive", type: i3.MatTooltip, selector: "[matTooltip]", inputs: ["matTooltipPosition", "matTooltipPositionAtOrigin", "matTooltipDisabled", "matTooltipShowDelay", "matTooltipHideDelay", "matTooltipTouchGestures", "matTooltip", "matTooltipClass"], exportAs: ["matTooltip"] }, { kind: "directive", type: i4.LazyLoadImageDirective, selector: "[lazyLoad]", inputs: ["lazyLoad", "defaultImage", "errorImage", "scrollTarget", "customObservable", "offset", "useSrcset", "decode", "debug"], outputs: ["onStateChange"] }, { kind: "component", type: i5.ResultActionsComponent, selector: "arlas-result-actions", inputs: ["item", "width", "activatedActionsPerItem", "detailedDataRetriever", "stopPropagation", "mode"], outputs: ["actionOnItemEvent"] }, { kind: "pipe", type: i6.TranslatePipe, name: "translate" }] }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "18.2.13", ngImport: i0, type: ResultGridTileComponent, decorators: [{
            type: Component,
            args: [{ selector: 'arlas-result-grid-tile', template: "<div class=\"resultgrid\" >\n  <div class=\"resultgrid--container resultgrid--container-highlight-{{gridTile?.ishighLight}}\" color=\"primary\"[style.border-color]=\"gridTile?.color ? gridTile?.color : 'none'\">\n    <mat-icon *ngIf=\"gridTile?.isChecked && !gridTile?.isindeterminated\" (click)=\"setSelectedItem()\" class=\"primary resultgrid__icon_check mat-icon material-icons\">check_box</mat-icon>\n    <mat-icon *ngIf=\"!gridTile?.isChecked && !gridTile?.isindeterminated\" (click)=\"setSelectedItem()\" class=\"primary resultgrid__icon_check mat-icon material-icons\">check_box_outline_blank</mat-icon>\n    <mat-icon *ngIf=\"gridTile?.isindeterminated\" (click)=\"determinateItem()\" class=\"primary resultgrid__icon_check mat-icon material-icons\">indeterminate_check_box</mat-icon>\n    <div id=\"{{'grid-tile-' + gridTile?.identifier}}\" (click)=\"setClickedOnItem()\" (mouseover)=\"showCellTooltip()\" #cellTooltip=\"matTooltip\" matTooltip=\"{{SHOW_IMAGE | translate}}\"  class=\"resultgrid__img {{gridTile?.iconCssClass}}\">\n      <img [defaultImage]=\"options?.defautlImgUrl\" [lazyLoad]=\"gridTile?.urlThumbnail\"\n        [class.contain_thumbnail]=\"thumbnailFit === ThumbnailFitEnum.contain\" [class.height_thumbnail]=\"thumbnailFit === ThumbnailFitEnum.height\"\n        [class.width_thumbnail]=\"thumbnailFit === ThumbnailFitEnum.width\">\n      <div *ngIf=\"options?.showActionsOnhover\" class=\"actions\" (mouseover)=\"hideCellTooltip($event)\">\n        <arlas-result-actions \n          [activatedActionsPerItem]=\"activatedActionsPerItem\" \n          [detailedDataRetriever]=\"detailedDataRetriever\"\n          [item]=\"gridTile\"\n          [stopPropagation]=\"true\"\n          (actionOnItemEvent)=\"triggerActionOnItem($event)\" ></arlas-result-actions>\n\n      </div>\n      <mat-icon class=\"resultlist__md-grid-tile__selected--icon\" *ngIf=\"displayInfoIcon\">info_outline</mat-icon>\n    </div>\n    <div class=\"resultgrid__title-highlight-{{gridTile?.ishighLight}}\">\n      <span *ngIf=\"gridTile?.color\" matTooltip=\"{{gridTile?.tooltip}}\" class=\"tablet\" [style.background-color]=\"gridTile?.color\"></span>\n      <span class=\"resultgrid__title  resultgrid__title-{{gridTile?.iconCssClass}}\" > {{gridTile?.title}} </span>\n    </div>\n  </div>\n</div>\n", styles: ["@charset \"UTF-8\";.resultgrid{width:100%;height:100%}.resultitem-grid__actions{min-width:0;border-radius:50%;border:none;width:24px;height:24px;box-shadow:0 3px 1px -2px #0003,0 2px 2px #00000024,0 1px 5px #0000001f;font-size:0;margin:1px 5px;background-color:#fff;background-image:url(\"data:image/svg+xml,%3Csvg%20width%3D%2720%27%20height%3D%2720%27%20xmlns%3D%27http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%27%3E%20%3Cg%3E%20%20%3Ctitle%3Ebackground%3C%2Ftitle%3E%20%20%3Crect%20fill%3D%27%23fff%27%20id%3D%27canvas_background%27%20height%3D%2722%27%20width%3D%2722%27%20y%3D%27-1%27%20x%3D%27-1%27%2F%3E%20%20%3Cg%20display%3D%27none%27%20overflow%3D%27visible%27%20y%3D%270%27%20x%3D%270%27%20height%3D%27100%25%27%20width%3D%27100%25%27%20id%3D%27canvasGrid%27%3E%20%20%20%3Crect%20fill%3D%27url(%23gridpattern)%27%20stroke-width%3D%270%27%20y%3D%270%27%20x%3D%270%27%20height%3D%27100%25%27%20width%3D%27100%25%27%2F%3E%20%20%3C%2Fg%3E%20%3C%2Fg%3E%20%3Cg%3E%20%20%3Ctitle%3ELayer%201%3C%2Ftitle%3E%20%20%3Cellipse%20stroke%3D%27%23000000%27%20ry%3D%275.779194%27%20rx%3D%275.5%27%20id%3D%27svg_1%27%20cy%3D%2710.000004%27%20cx%3D%2710%27%20stroke-width%3D%272.5%27%20fill%3D%27%23ffffff%27%2F%3E%20%3C%2Fg%3E%3C%2Fsvg%3E\");background-repeat:no-repeat;background-position:center}.resultitem-grid__actions:active{border:1px solid white}.grid_actions{flex-direction:row-reverse;flex-wrap:wrap-reverse;position:absolute;bottom:1px;right:0;margin-left:2px;margin-top:2px}.resultgrid__img:hover .grid_actions{display:flex;justify-content:space-between}.resultgrid--container,.resultgrid--container-highlight-{width:100%;height:100%;margin:1px;background-color:#fff;position:relative;color:#000}.resultgrid .resultgrid--container .resultgrid__img:hover .actions ::ng-deep .list_actions .not_activated{display:block}.resultgrid .resultgrid--container .resultgrid__img .actions{position:absolute;bottom:15%;right:2px}.resultgrid--container-highlight-false{opacity:.3}.resultgrid--container-highlight-true{opacity:1}.resultgrid__icon_check{position:absolute;top:5px;left:5px;font-size:15px;width:15px;height:15px;color:#fff;cursor:pointer;z-index:5;-webkit-user-select:none;user-select:none}.resultgrid__img{box-sizing:border-box;display:flex;height:85%;width:100%;padding:2px;background-position:center center;background-repeat:no-repeat;position:relative;align-items:center;justify-content:center;background-color:#000}.resultgrid__title-highlight-,.resultgrid__title-highlight-false,.resultgrid__title-highlight-true{height:15%;color:#000;font-family:Roboto,Helvetica Neue,sans-serif;font-size:12px;display:flex;justify-content:space-between;align-items:center;padding:0 5px;box-sizing:border-box}.resultgrid__title-highlight- .tablet,.resultgrid__title-highlight-false .tablet,.resultgrid__title-highlight-true .tablet{height:80%;max-height:20px;aspect-ratio:1;border-radius:100px;margin-right:2px}.resultgrid__title-highlight- .resultgrid__title,.resultgrid__title-highlight-false .resultgrid__title,.resultgrid__title-highlight-true .resultgrid__title{text-overflow:ellipsis;white-space:nowrap;overflow:hidden}.resultgrid__title-highlight-false{opacity:.3}.fill-images{object-fit:cover;width:100%;height:100%;background-color:#000}.contain_thumbnail{object-fit:contain;width:100%;height:100%;background-color:#000}.height_thumbnail{object-fit:cover;max-width:100%;max-height:100%;height:100%;background-color:#000}.width_thumbnail{object-fit:cover;max-width:100%;max-height:100%;width:100%;background-color:#000}.resultlist__md-grid-tile{margin-top:5px}.resultlist__md-grid-tile__selected--icon{position:absolute;z-index:1;top:15px;color:#fff;background-color:transparent;opacity:50%;font-size:72px;height:72px!important;width:72px!important;pointer-events:auto;cursor:default}\n"] }]
        }], ctorParameters: () => [], propDecorators: { cellTooltip: [{
                type: ViewChild,
                args: ['cellTooltip', { static: true }]
            }], gridTile: [{
                type: Input
            }], thumbnailFit: [{
                type: Input
            }], selectedItems: [{
                type: Input
            }], detailedDataRetriever: [{
                type: Input
            }], options: [{
                type: Input
            }], idFieldName: [{
                type: Input
            }], activatedActionsPerItem: [{
                type: Input
            }], displayInfoIcon: [{
                type: Input
            }], actionOnItemEvent: [{
                type: Output
            }], selectedItemsEvent: [{
                type: Output
            }], selectedItemPositionEvent: [{
                type: Output
            }], clickedOnItemEvent: [{
                type: Output
            }] } });
//# sourceMappingURL=data:application/json;base64,
import { AfterViewInit, OnChanges, SimpleChanges, OnDestroy } from '@angular/core';
import { Granularity, TimelineData, TimelineTooltip } from 'arlas-d3';
import { Subject } from 'rxjs';
import * as i0 from "@angular/core";
export declare enum TranslationDirection {
    past = "past",
    future = "future"
}
export declare class CalendarTimelineComponent implements AfterViewInit, OnChanges, OnDestroy {
    id: string;
    granularity: Granularity;
    climatological: boolean;
    boundDates: Date[];
    data: TimelineData[];
    cursorPosition: Date;
    hideLeftButton: boolean;
    hideRightButton: boolean;
    selectedData: Subject<TimelineData>;
    hoveredData: Subject<TimelineTooltip>;
    translate: Subject<TranslationDirection>;
    width: number;
    height: number;
    private timeline;
    private _onDestroy$;
    private timelineContainer;
    constructor();
    ngOnChanges(changes: SimpleChanges): void;
    ngAfterViewInit(): void;
    ngOnDestroy(): void;
    plot(): void;
    translateFuture(): void;
    translatePast(): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<CalendarTimelineComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<CalendarTimelineComponent, "arlas-calendar-timeline", never, { "id": { "alias": "id"; "required": false; }; "granularity": { "alias": "granularity"; "required": false; }; "climatological": { "alias": "climatological"; "required": false; }; "boundDates": { "alias": "boundDates"; "required": false; }; "data": { "alias": "data"; "required": false; }; "cursorPosition": { "alias": "cursorPosition"; "required": false; }; "hideLeftButton": { "alias": "hideLeftButton"; "required": false; }; "hideRightButton": { "alias": "hideRightButton"; "required": false; }; }, { "selectedData": "selectedData"; "hoveredData": "hoveredData"; "translate": "translate"; }, never, never, false, never>;
}

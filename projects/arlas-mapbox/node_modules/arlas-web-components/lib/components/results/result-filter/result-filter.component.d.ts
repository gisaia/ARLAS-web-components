import { OnChanges, OnInit, SimpleChanges } from '@angular/core';
import { MatSelectChange } from '@angular/material/select';
import { Subject } from 'rxjs';
import { Column } from '../model/column';
import { ItemDataType } from '../utils/results.utils';
import * as i0 from "@angular/core";
export declare class ResultFilterComponent implements OnInit, OnChanges {
    /**
     * @Input
     * @description The column to which the filter is applied.
     */
    column: Column;
    /**
     * @Input
     * @description A map of columns to filter : key = column (or field) name & value = field value.
     * This components sets directly this map.
     */
    filtersMap: Map<string, ItemDataType>;
    /**
     * @Input
     * @description The filter value.
     */
    inputValue: string;
    /**
     * @Input
     * @description The values of dropdown list.
     */
    dropdownValues: Array<string>;
    /**
     * @Output
     * @description Emits the map of filtered columns and the filters values (fieldName-fieldValue map).
     */
    setFiltersEvent: Subject<Map<string, ItemDataType>>;
    /**
     * @Output
     * @description Emits the column on change to notify the main component.
     */
    columnChanged: Subject<Column>;
    selected: Array<any>;
    constructor();
    ngOnInit(): void;
    ngOnChanges(changes: SimpleChanges): void;
    setFilterOnKeyEnter(event: any): void;
    setFilter(): void;
    selectionChange(event: MatSelectChange): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<ResultFilterComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<ResultFilterComponent, "[arlas-result-filter]", never, { "column": { "alias": "column"; "required": false; }; "filtersMap": { "alias": "filtersMap"; "required": false; }; "inputValue": { "alias": "inputValue"; "required": false; }; "dropdownValues": { "alias": "dropdownValues"; "required": false; }; }, { "setFiltersEvent": "setFiltersEvent"; "columnChanged": "columnChanged"; }, never, never, false, never>;
}

import { EventEmitter } from '@angular/core';
import { PowerBar } from '../model/powerbar';
import * as i0 from "@angular/core";
export declare class PowerbarComponent {
    powerbar: PowerBar;
    /**
     * @Input : Angular
     * @description Precision when rounding numbers (ie the count next to the progress bar).
     * Default is 2.
     */
    numberShorteningPrecision: number;
    /**
     * @Input : Angular
     * @description Unit the a powerbar represents
     */
    unit: string;
    /**
     * @Input : Angular
     * @description Whether to allow colorizing the bar according to its term or not using keysToColors
     */
    useColorService: boolean;
    /**
     * @Input : Angular
     * @description Whether to allow colorizing the bar according to its term or not using a field of the data
     */
    useColorFromData: boolean;
    /**
     * @Input : Angular
     * @description Hide selected powerbar
     */
    hideSelected: boolean;
    /**
     * @Input : Angular
     * @description Whether to have the option to select the powerbar using checkboxes.
     */
    selectWithCheckbox: boolean;
    onCheckEvent: EventEmitter<boolean>;
    onClickEvent: EventEmitter<boolean>;
    NUMBER_FORMAT_CHAR: string;
    onCheck(): void;
    onSelect(): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<PowerbarComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<PowerbarComponent, "arlas-powerbar", never, { "powerbar": { "alias": "powerbar"; "required": false; }; "numberShorteningPrecision": { "alias": "numberShorteningPrecision"; "required": false; }; "unit": { "alias": "unit"; "required": false; }; "useColorService": { "alias": "useColorService"; "required": false; }; "useColorFromData": { "alias": "useColorFromData"; "required": false; }; "hideSelected": { "alias": "hideSelected"; "required": false; }; "selectWithCheckbox": { "alias": "selectWithCheckbox"; "required": false; }; }, { "onCheckEvent": "onCheckEvent"; "onClickEvent": "onClickEvent"; }, never, never, false, never>;
}

{"version":3,"file":"arlas-web-components.mjs","sources":["../../../projects/arlas-components/src/lib/components/componentsUtils.ts","../../../projects/arlas-components/src/lib/services/color.generator.service.ts","../../../projects/arlas-components/src/lib/components/donut/donut.component.ts","../../../projects/arlas-components/src/lib/components/donut/donut.component.html","../../../projects/arlas-components/src/lib/components/donut/donut.module.ts","../../../projects/arlas-components/src/lib/services/collection.service.ts","../../../projects/arlas-components/src/lib/pipes/get-collection-unit/get-collection-unit.pipe.ts","../../../projects/arlas-components/src/lib/components/histogram/histogram-key.pipe.ts","../../../projects/arlas-components/src/lib/components/histogram/histogram.component.ts","../../../projects/arlas-components/src/lib/components/histogram/histogram.component.html","../../../projects/arlas-components/src/lib/pipes/get-collection-unit/get-collection-unit.module.ts","../../../projects/arlas-components/src/lib/components/histogram/histogram.module.ts","../../../projects/arlas-components/src/lib/components/powerbars/model/powerbar.ts","../../../projects/arlas-components/src/lib/components/results/utils/enumerations/pageEnum.ts","../../../projects/arlas-components/src/lib/components/results/utils/enumerations/thumbnailFitEnum.ts","../../../projects/arlas-components/src/lib/components/results/utils/enumerations/cellBackgroundStyleEnum.ts","../../../projects/arlas-components/src/lib/components/results/utils/results.utils.ts","../../../projects/arlas-components/src/lib/components/results/model/item.ts","../../../projects/arlas-components/src/lib/components/results/utils/enumerations/sortEnum.ts","../../../projects/arlas-components/src/lib/components/results/model/column.ts","../../../projects/arlas-components/src/lib/components/results/utils/enumerations/modeEnum.ts","../../../projects/arlas-components/src/lib/services/resultlist.notifier.service.ts","../../../projects/arlas-components/src/lib/components/results/model/itemComponent.ts","../../../projects/arlas-components/src/lib/components/results/result-actions/result-actions.pipe.ts","../../../projects/arlas-components/src/lib/components/results/result-actions/result-actions.component.ts","../../../projects/arlas-components/src/lib/components/results/result-actions/result-actions.component.html","../../../projects/arlas-components/src/lib/components/results/result-grid-tile/result-grid-tile.component.ts","../../../projects/arlas-components/src/lib/components/results/result-grid-tile/result-grid-tile.component.html","../../../projects/arlas-components/src/lib/pipes/format-number/format-number.pipe.ts","../../../projects/arlas-components/src/lib/components/results/result-item/result-item.component.ts","../../../projects/arlas-components/src/lib/components/results/result-item/result-item.component.html","../../../projects/arlas-components/src/lib/pipes/replace/replace.pipe.ts","../../../projects/arlas-components/src/lib/pipes/get-attachment-url/get-attachment-url.pipe.ts","../../../projects/arlas-components/src/lib/components/results/result-detailed-item/result-detailed-item.component.ts","../../../projects/arlas-components/src/lib/components/results/result-detailed-item/result-detailed-item.component.html","../../../projects/arlas-components/src/lib/components/results/result-detailed-grid/result-detailed-grid.component.ts","../../../projects/arlas-components/src/lib/components/results/result-detailed-grid/result-detailed-grid.component.html","../../../projects/arlas-components/src/lib/components/results/result-filter/result-filter.component.ts","../../../projects/arlas-components/src/lib/components/results/result-filter/result-filter.component.html","../../../projects/arlas-components/src/lib/components/results/result-directive/result-scroll.directive.ts","../../../projects/arlas-components/src/lib/components/results/result-list/result-list.component.ts","../../../projects/arlas-components/src/lib/components/results/result-list/result-list.component.html","../../../projects/arlas-components/src/lib/services/color.generator.module.ts","../../../projects/arlas-components/src/lib/pipes/format-number/format-number.module.ts","../../../projects/arlas-components/src/lib/pipes/replace/replace.module.ts","../../../projects/arlas-components/src/lib/pipes/get-attachment-url/get-attachment-url.module.ts","../../../projects/arlas-components/src/lib/components/results/results.module.ts","../../../projects/arlas-components/src/lib/services/collection.module.ts","../../../projects/arlas-components/src/lib/components/metric/metric.component.ts","../../../projects/arlas-components/src/lib/components/metric/metric.component.html","../../../projects/arlas-components/src/lib/components/metric/metric.module.ts","../../../projects/arlas-components/src/lib/pipes/shorten-number/shorten-number.pipe.ts","../../../projects/arlas-components/src/lib/components/powerbars/powerbar/powerbar.component.ts","../../../projects/arlas-components/src/lib/components/powerbars/powerbar/powerbar.component.html","../../../projects/arlas-components/src/lib/components/powerbars/powerbars.component.ts","../../../projects/arlas-components/src/lib/components/powerbars/powerbars.component.html","../../../projects/arlas-components/src/lib/pipes/shorten-number/shorten-number.module.ts","../../../projects/arlas-components/src/lib/components/powerbars/powerbar/powerbar.module.ts","../../../projects/arlas-components/src/lib/components/powerbars/powerbars.module.ts","../../../projects/arlas-components/src/lib/components/metrics-table/multi-bars-row/metrics-table-row.component.ts","../../../projects/arlas-components/src/lib/components/metrics-table/multi-bars-row/metrics-table-row.component.html","../../../projects/arlas-components/src/lib/pipes/get-collection-display-name/get-collection-display-name.pipe.ts","../../../projects/arlas-components/src/lib/pipes/get-field-display-name/get-field-display-name.pipe.ts","../../../projects/arlas-components/src/lib/components/metrics-table/metrics-table.component.ts","../../../projects/arlas-components/src/lib/components/metrics-table/metrics-table.component.html","../../../projects/arlas-components/src/lib/pipes/format-title/format-long-title.pipe.ts","../../../projects/arlas-components/src/lib/components/metrics-table/multi-bars-row/metrics-table-row.module.ts","../../../projects/arlas-components/src/lib/pipes/get-collection-display-name/get-collection-display.module.ts","../../../projects/arlas-components/src/lib/pipes/get-field-display-name/get-field-display.module.ts","../../../projects/arlas-components/src/lib/components/metrics-table/metrics-table.module.ts","../../../projects/arlas-components/src/lib/components/wmts-layer-manager/wmts-layer-manager.component.ts","../../../projects/arlas-components/src/lib/components/wmts-layer-manager/wmts-layer-manager-dialog.component.html","../../../projects/arlas-components/src/lib/components/wmts-layer-manager/wmts-layer-manager.component.html","../../../projects/arlas-components/src/lib/components/wmts-layer-manager/wmts-layer-manager.module.ts","../../../projects/arlas-components/src/lib/components/calendar-timeline/calendar-timeline.component.ts","../../../projects/arlas-components/src/lib/components/calendar-timeline/calendar-timeline.component.html","../../../projects/arlas-components/src/lib/components/calendar-timeline/calendar-timeline.module.ts","../../../projects/arlas-components/src/lib/pipes/get-value/get-value.pipe.ts","../../../projects/arlas-components/src/lib/pipes/get-value/get-value.module.ts","../../../projects/arlas-components/src/lib/pipes/get-color/get-color.pipe.ts","../../../projects/arlas-components/src/lib/pipes/get-color/get-color.module.ts","../../../projects/arlas-components/src/public-api.ts","../../../projects/arlas-components/src/arlas-web-components.ts"],"sourcesContent":["/*\n * Licensed to Gisaïa under one or more contributor\n * license agreements. See the NOTICE.txt file distributed with\n * this work for additional information regarding copyright\n * ownership. Gisaïa licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport { UntypedFormControl, Validators } from '@angular/forms';\nimport { Observable, Subject } from 'rxjs';\nimport tinycolor from 'tinycolor2';\n\nexport function formatNumber(x, formatChar = ' '): string {\n  if (formatChar === NUMBER_FORMAT_CHAR) {\n    formatChar = ' ';\n  }\n  if (+x + '' !== 'NaN' && typeof +x === 'number') {\n    const num = +x;\n    const trunc = Math.trunc(num);\n    const decimal = (num + '').split('.');\n    const spacedNumber = Math.abs(trunc).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, formatChar);\n    const spacedNumberString = trunc < 0 ? '-' + spacedNumber : spacedNumber;\n    if (num < 0.09 && num > -0.09 && num !== 0) {\n      return Number.parseFloat(x).toExponential(3);\n    }\n    return decimal.length === 2 ? spacedNumberString + '.' + decimal[1] : spacedNumberString;\n  }\n  return x;\n}\nexport const NUMBER_FORMAT_CHAR = 'NUMBER_FORMAT_CHAR';\n\nexport function numberToShortValue(number: number, p?: number): string {\n  if (Math.abs(number) < 1000) {\n    if (Math.round(number) === number) {\n      return number.toFixed(0);\n    }\n    return number.toFixed(p);\n  }\n\n  // what tier? (determines SI symbol)\n  const suffixes = ['', 'k', 'M', 'b', 't'];\n  const suffixNum = Math.log10(Math.abs(number)) / 3 | 0;\n\n  if (suffixNum === 0) {\n    return number.toString();\n  }\n  // get suffix and determine scale\n  const suffix = suffixes[suffixNum];\n  const scale = Math.pow(10, suffixNum * 3);\n  // scale the number\n  const scaled = number / scale;\n  // format number and add suffix\n  return scaled.toFixed(p) + ' ' + suffix;\n}\nexport const DEFAULT_SHORTENING_PRECISION = 2;\n\nexport function getKeys(map): Array<string> {\n  return Array.from(map.keys());\n}\n\nexport function getValues(map): Array<any> {\n  return Array.from(map.values());\n}\n\nexport abstract class ColorGeneratorLoader {\n  public abstract keysToColors: Array<[string, string]>;\n  public abstract colorsSaturationWeight: number;\n  public abstract changekeysToColors$: Observable<void>;\n  /**\n   * This method generates a determistic color from the given key, a list of [key, color] and a saturation weight.\n   * @param key The text from which the color is generated\n   * @param externalkeysToColors List of [key, color] couples that associates a hex color to each key.\n   * @param colorsSaturationWeight Knowing that saturation scale is [0, 1], `colorsSaturationWeight` is a factor (between 0 and 1) that\n   * tightens this scale to [(1-colorsSaturationWeight), 1]. Therefore all generated colors saturation will be within this scale.\n   */\n  public abstract getColor(key: string, externalkeysToColors: Array<[string, string]>, externalColorsSaturationWeight: number): string;\n  public abstract getTextColor(color): string;\n}\n\nexport class AwcColorGeneratorLoader extends ColorGeneratorLoader {\n  public changekeysToColors$: Observable<void> = new Subject<void>().asObservable();\n  public keysToColors: Array<[string, string]>;\n  public colorsSaturationWeight = 0.5;\n  /**\n   * This method generates a determistic color from the given key, a list of [key, color] and a saturation weight.\n   * - First the method checks if the [key,color] is defined in externalkeysToColors and returns the correspondant color.\n   *\n   * - If externalkeysToColors parameter is undefined, then the method checks if the [key,color] is defined in\n   * keysToColors attribute of the loader\n   *\n   * - If neither `externalkeysToColors` parameter nor `keysToColors` attribute are defined, then the color is generated using a determist\n   * method.\n   * - For this determinist method, the generated colors saturation scale can be tightened using `externalColorsSaturationWeight` parameter\n   * - If the parameter `externalColorsSaturationWeight` is undefined, the attribute `colorsSaturationWeight` is used instead.\n   * @param key The text from which the color is generated\n   * @param externalkeysToColors List of [key, color] couples that associates a hex color to each key.\n   * @param colorsSaturationWeight Knowing that saturation scale is [0, 1], `colorsSaturationWeight` is a factor (between 0 and 1) that\n   * tightens this scale to [(1-colorsSaturationWeight), 1]. Therefore all generated colors saturation will be within this scale.\n   */\n  public getColor(key: string, externalKeysToColors: Array<[string, string]>, externalColorsSaturationWeight: number): string {\n    let colorHex = null;\n    const keysToColors = externalKeysToColors ? externalKeysToColors : this.keysToColors;\n    const saturationWeight = (externalColorsSaturationWeight !== undefined && externalColorsSaturationWeight !== null) ?\n      externalColorsSaturationWeight : this.colorsSaturationWeight;\n    if (keysToColors) {\n      for (let i = 0; i < keysToColors.length; i++) {\n        const keyToColor = keysToColors[i];\n        if (keyToColor[0] === key) {\n          colorHex = keyToColor[1];\n          break;\n        }\n      }\n      if (!colorHex) {\n        colorHex = this.getHexColor(key, saturationWeight);\n      }\n    } else {\n      colorHex = this.getHexColor(key, saturationWeight);\n    }\n    return colorHex;\n  }\n\n  public getTextColor(color): string {\n    return '#000000';\n  }\n\n  private getHexColor(key: string, saturationWeight: number): string {\n    const text = key + ':' + key;\n    // string to int\n    let hash = 0;\n    for (let i = 0; i < text.length; i++) {\n      hash = text.charCodeAt(i) + ((hash << 5) - hash);\n    }\n    // int to rgb\n    let hex = (hash & 0x00FFFFFF).toString(16).toUpperCase();\n    hex = '00000'.substring(0, 6 - hex.length) + hex;\n    const color = tinycolor.mix(hex, hex);\n    color.saturate(color.toHsv().s * saturationWeight + ((1 - saturationWeight) * 100));\n    return color.toHexString();\n  }\n}\n\nexport class SelectFormControl extends UntypedFormControl {\n\n  // used only for autocomplete: list of filtered options\n  public filteredOptions: Array<string>;\n  public syncOptions: Array<string> = [];\n\n  public constructor(\n    formState: any,\n    label: string,\n    options: Array<string>) {\n\n    super(formState, Validators.required);\n    this.setValue(formState);\n    this.setSyncOptions(options);\n\n  }\n\n  public setSyncOptions(newOptions: Array<string>) {\n    this.syncOptions = newOptions;\n    this.filteredOptions = newOptions;\n  }\n}\nconst ARLAS_ID = 'arlas_id:';\n\n/** FROM V15.0.0 layer ids look like 'arlas_id:NAME:timestamp\n   * This pipe extracts the 'NAME' in that id\n   */\nexport function getLayerName(id: string): string {\n  if (!!id && id.startsWith(ARLAS_ID)) {\n    const datedName = id.split(ARLAS_ID)[1];\n    const undatedName = datedName.split(':')[0];\n    return undatedName;\n  }\n  return id;\n}\n","/*\n * Licensed to Gisaïa under one or more contributor\n * license agreements. See the NOTICE.txt file distributed with\n * this work for additional information regarding copyright\n * ownership. Gisaïa licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport { Injectable } from '@angular/core';\nimport { ColorGeneratorLoader } from '../components/componentsUtils';\nimport { Subject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ArlasColorService {\n\n  private changekeysToColors =  new Subject<void>();\n  public changekeysToColors$ = this.changekeysToColors.asObservable();\n  public constructor(public colorGenerator: ColorGeneratorLoader) {\n    this.colorGenerator.changekeysToColors$.subscribe(() => this.changekeysToColors.next());\n\n  }\n\n  public getColor(key: string, keysToColors?: Array<[string, string]>, colorsSaturationWeight?: number): string {\n    return this.colorGenerator.getColor(key, keysToColors, colorsSaturationWeight);\n  }\n\n  public getTextColor(color): string {\n    return this.colorGenerator.getTextColor(color);\n  }\n\n}\n","/*\n * Licensed to Gisaïa under one or more contributor\n * license agreements. See the NOTICE.txt file distributed with\n * this work for additional information regarding copyright\n * ownership. Gisaïa licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport {\n  Component, OnChanges, Input, Output, SimpleChanges, ViewContainerRef, ElementRef, ViewEncapsulation,\n  OnDestroy\n} from '@angular/core';\nimport { Subject, fromEvent } from 'rxjs';\nimport { debounceTime, takeUntil } from 'rxjs/operators';\nimport { AbstractDonut, OneSelectionDonut, MultiSelectionDonut, DonutParams, TreeNode, SimpleNode, ARLASDonutTooltip } from 'arlas-d3';\nimport * as donutJsonSchema from './donut.schema.json';\nimport { ArlasColorService } from '../../services/color.generator.service';\nimport { TranslateService } from '@ngx-translate/core';\nimport { NUMBER_FORMAT_CHAR } from '../componentsUtils';\n\n@Component({\n  selector: 'arlas-donut',\n  templateUrl: './donut.component.html',\n  styleUrls: ['./donut.component.scss'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class DonutComponent implements OnChanges, OnDestroy {\n  /**\n   * @Input : Angular\n   * @description Data tree to plot in the donut.\n   */\n  @Input() public donutData: TreeNode;\n\n  /**\n   * @Input : Angular\n   * @description Sets the opacity of non-hovered or non-selected nodes.\n   */\n  @Input() public opacity = 0.4;\n\n  /**\n   * @Input : Angular\n   * @description Css class name to use to customize a specific powerbar's style.\n   */\n  @Input() public customizedCssClass;\n\n  /**\n   * @Input : Angular\n   * @description List of selected nodes.\n   */\n  @Input() public selectedArcsList: Array<Array<SimpleNode>> = new Array<Array<SimpleNode>>();\n\n  /**\n   * @Input : Angular\n   * @description Whether the donut is multi-selectable.\n   */\n  @Input() public multiselectable = true;\n\n  /**\n   * @Input : Angular\n   * @description id of the donut\n   */\n  @Input() public id: string;\n\n  /**\n   * @Input : Angular\n   * @description List of [key, color] couples that associates a hex color to each key\n   */\n  @Input() public keysToColors: Array<[string, string]>;\n\n  /**\n   * @Input : Angular\n   * @description Knowing that saturation scale is [0, 1], `colorsSaturationWeight` is a\n   * factor (between 0 and 1) that tightens this scale to [(1-colorsSaturationWeight), 1].\n   * Therefore colors saturation of donuts arcs will be within this tightened scale..\n   */\n  @Input() public colorsSaturationWeight = 1 / 2 ;\n\n  /**\n   * @Input : Angular\n   * @description Diameter of the donut. If it's not set, the donut take the Max(width,height) of the div containing the svg.\n   */\n  @Input() public diameter: number;\n\n  /**\n   * @Input : Angular\n   * @description Width of the svg containing the donut. If it's not set, the container width takes the donut's diameter.\n   */\n  @Input() public containerWidth: number;\n\n  /**\n   * @Input : Angular\n   * @description Unit that a node of the donut represents\n   */\n  @Input() public unit = '';\n\n  /**\n   * @Output : Angular\n   * @description Emits the list of selected nodes and the paths to their ultimate parent\n   */\n  @Output() public selectedNodesEvent: Subject<Array<Array<SimpleNode>>> = new Subject<Array<Array<SimpleNode>>>();\n\n  /**\n   * @Output : Angular\n   * @description Emits the hovered node and the path to it's parents.\n   * The key of the map is the node's name and the value is its color on the donut\n   */\n  @Output() public hoveredNodesEvent: Subject<Map<string, string>> = new Subject<Map<string, string>>();\n\n  /**\n   * @Output : Angular\n   * @description Emits the information about the hovered node and its parents.\n   */\n  @Output() public hoveredNodeTooltipEvent: Subject<ARLASDonutTooltip> = new Subject<ARLASDonutTooltip>();\n\n  public donut: AbstractDonut;\n\n  private _onDestroy$ = new Subject<boolean>();\n\n  public constructor(\n    private el: ElementRef,\n    private colorService: ArlasColorService,\n    private translate: TranslateService\n  ) {\n    fromEvent(window, 'resize')\n      .pipe(debounceTime(500), takeUntil(this._onDestroy$))\n      .subscribe((event: Event) => {\n        this.donut.resize(this.el.nativeElement.childNodes[0]);\n      });\n    this.colorService.changekeysToColors$\n      .pipe(takeUntil(this._onDestroy$))\n      .subscribe(() => {\n        this.donut.donutParams.keysToColors = this.colorService.colorGenerator.keysToColors;\n        this.donut.donutParams.donutNodeColorizer = this.colorService;\n        this.donut.resize(this.el.nativeElement.childNodes[0]);\n      });\n  }\n\n  public ngOnDestroy() {\n    this._onDestroy$.next(true);\n    this._onDestroy$.complete();\n  }\n\n  public ngOnChanges(changes: SimpleChanges): void {\n    if (this.donut === undefined) {\n      if (this.multiselectable) {\n        this.donut = new MultiSelectionDonut();\n      } else {\n        this.donut = new OneSelectionDonut();\n      }\n      this.setDonutParameters();\n    }\n\n    if (changes.donutData && this.donutData !== undefined && this.donutData !== null && this.donut !== undefined\n      && this.donut.donutParams !== undefined) {\n      this.donut.dataChange(this.donutData);\n    }\n\n    if (changes.selectedArcsList && this.selectedArcsList !== undefined && this.selectedArcsList !== null && this.donut !== undefined\n      && this.donut.donutParams !== undefined && this.donut.donutParams.donutNodes !== undefined) {\n      this.donut.onSelectionChange(this.selectedArcsList);\n    }\n  }\n\n  /**\n   * @returns Json schema of the donut component for configuration\n   */\n  public static getDonutJsonSchema(): Object {\n    return donutJsonSchema;\n  }\n\n  private setDonutParameters(): void {\n    if (!this.unit) {\n      this.unit = '';\n    }\n    this.donut.donutParams = new DonutParams();\n    this.donut.donutParams.id = this.id;\n    this.donut.donutParams.customizedCssClass = this.customizedCssClass;\n    this.donut.donutParams.donutData = this.donutData;\n    this.donut.donutParams.hoveredNodesEvent = this.hoveredNodesEvent;\n    this.donut.donutParams.tooltipEvent = this.hoveredNodeTooltipEvent;\n    this.donut.donutParams.multiselectable = this.multiselectable;\n    this.donut.donutParams.opacity = this.opacity;\n    this.donut.donutParams.selectedArcsList = this.selectedArcsList;\n    this.donut.donutParams.selectedNodesEvent = this.selectedNodesEvent;\n    this.donut.donutParams.donutContainer = this.el.nativeElement.childNodes[0];\n    this.donut.donutParams.svgElement = this.el.nativeElement.childNodes[0].childNodes[0];\n    this.donut.donutParams.keysToColors = this.keysToColors;\n    this.donut.donutParams.colorsSaturationWeight = this.colorsSaturationWeight;\n    this.donut.donutParams.donutNodeColorizer = this.colorService;\n    this.donut.donutParams.numberFormatChar = this.translate.instant(NUMBER_FORMAT_CHAR);\n    this.donut.donutParams.diameter = this.diameter;\n    this.donut.donutParams.containerWidth = this.containerWidth;\n  }\n}\n","<div id=\"{{id}}\" class=\"donut__container\" [ngClass]=\"customizedCssClass\">\n  <svg id=\"svgix\"></svg>\n</div>\n","/*\n * Licensed to Gisaïa under one or more contributor\n * license agreements. See the NOTICE.txt file distributed with\n * this work for additional information regarding copyright\n * ownership. Gisaïa licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { DonutComponent } from './donut.component';\n\n@NgModule({\n  declarations: [DonutComponent],\n  exports: [DonutComponent],\n  imports: [\n    CommonModule\n  ]\n})\nexport class DonutModule {\n}\n","/*\n * Licensed to Gisaïa under one or more contributor\n * license agreements. See the NOTICE.txt file distributed with\n * this work for additional information regarding copyright\n * ownership. Gisaïa licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport { Injectable } from '@angular/core';\n\nexport abstract class BaseCollectionService {\n  protected abstract _initUnits();\n  protected abstract _initDisplayNames();\n  public abstract getDisplayName(collectionName: string): string;\n  public abstract getDisplayFieldName(fieldName: string): string;\n  public abstract getUnit(collectionName: string): string;\n  public abstract getAllUnits(): any[];\n}\n\nexport class AwcCollectionService extends BaseCollectionService {\n  public getAllUnits(): string[] {\n    return [];\n  }\n  protected _initUnits() { }\n  protected _initDisplayNames() { }\n\n  public getDisplayName(collectionName: string): string {\n    return collectionName;\n  }\n\n  public getDisplayFieldName(fieldName: string): string {\n    return fieldName;\n  }\n\n  public getUnit(collectionName: string): string {\n    return collectionName;\n  }\n}\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CollectionService {\n\n  public constructor(private baseCollectionService: BaseCollectionService) {\n  }\n  public getDisplayName(collectionName: string): string {\n    return this.baseCollectionService.getDisplayName(collectionName);\n  };\n\n  public getDisplayFieldName(fieldName: string): string {\n    return this.baseCollectionService.getDisplayFieldName(fieldName);\n  };\n\n  public getUnit(collectionName: string): string {\n    return this.baseCollectionService.getUnit(collectionName);\n  };\n\n  public getAllUnits() {\n    return this.baseCollectionService.getAllUnits();\n  }\n\n}\n\n\n\n","/*\n * Licensed to Gisaïa under one or more contributor\n * license agreements. See the NOTICE.txt file distributed with\n * this work for additional information regarding copyright\n * ownership. Gisaïa licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { Pipe, PipeTransform } from '@angular/core';\nimport { CollectionService } from '../../services/collection.service';\n\n@Pipe({\n  name: 'getCollectionUnit'\n})\nexport class GetCollectionUnitPipe implements PipeTransform {\n\n  public constructor(private arlasCollectionService: CollectionService) {\n  }\n  public transform(value: string): unknown {\n    if(!value) {\n      return  '';\n    }\n    return this.arlasCollectionService.getUnit(value);\n  }\n\n}\n","/*\n * Licensed to Gisaïa under one or more contributor\n * license agreements. See the NOTICE.txt file distributed with\n * this work for additional information regarding copyright\n * ownership. Gisaïa licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { Pipe, PipeTransform } from '@angular/core';\nimport { HistogramUtils } from 'arlas-d3';\n\n@Pipe({\n  name: 'histogramKey'\n})\nexport class HistogramKeyPipe implements PipeTransform {\n\n  public transform(key: any, ...args: any[]): string {\n    return HistogramUtils.toString(key, args[0]);\n  }\n}\n","/*\n * Licensed to Gisaïa under one or more contributor\n * license agreements. See the NOTICE.txt file distributed with\n * this work for additional information regarding copyright\n * ownership. Gisaïa licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport {\n  AfterViewChecked, Component, ElementRef, Input, OnChanges, OnDestroy, OnInit, Output, SimpleChanges, ViewChild, ViewEncapsulation\n} from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport {\n  AbstractChart, AbstractHistogram, AbstractSwimlane, ChartArea, ChartBars, ChartCurve,\n  ChartOneDimension, ChartType, DataType, HistogramParams, HistogramUtils, Position,\n  SelectedInputValues, SelectedOutputValues, SelectionType, SwimlaneBars, SwimlaneCircles,\n  SwimlaneMode\n} from 'arlas-d3';\nimport {\n  HistogramData, HistogramTooltip, SwimlaneData, SwimlaneOptions, SwimlaneRepresentation\n} from 'arlas-d3/histograms/utils/HistogramUtils';\nimport { Subject, fromEvent } from 'rxjs';\nimport { debounceTime, takeUntil } from 'rxjs/operators';\nimport { ArlasColorService } from '../../services/color.generator.service';\nimport { NUMBER_FORMAT_CHAR } from '../componentsUtils';\nimport * as histogramJsonSchema from './histogram.schema.json';\nimport * as swimlaneJsonSchema from './swimlane.schema.json';\n\n/**\n * The Histogram web component allows you to display your numeric and temporal data in charts or swimlanes.\n * Charts can be represented as bars or areas.\n * Swimlanes can be represented as bars or circles.\n * For both modes, data can be multi-selected using a selection brush.\n */\n\n@Component({\n  selector: 'arlas-histogram',\n  templateUrl: './histogram.component.html',\n  styleUrls: ['./histogram.component.scss'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class HistogramComponent implements OnInit, OnChanges, AfterViewChecked, OnDestroy {\n\n  @ViewChild('left', { read: ElementRef, static: false }) public lt: ElementRef;\n  @ViewChild('right', { read: ElementRef, static: false }) public rt: ElementRef;\n\n  /**\n   * @Input : Angular\n   * @description Data to plot in the chart.\n   */\n  @Input() public data: Array<HistogramData> | SwimlaneData;\n  /**\n   * @Input : Angular\n   * @description HistogramData is a bucket of a given chart Id. Many charts ids can be represented in histogram. This\n   * input sets the main chart id. So that the main one can be represented differently from the others\n   */\n  @Input() public mainChartId: string;\n  /**\n   * @Input\n   * @description To be set to `time` when x axis represents dates and to `numeric` otherwise.\n   */\n  @Input() public dataType: DataType = DataType.numeric;\n  /**\n   * @description Unit of data to add in the end of tooltip values.\n   * @deprecated If xUnit is specified, dataUnit is not taken into account.\n   */\n  @Input() public dataUnit = '';\n  /**\n   * @description Unit of x axis values.\n   */\n  @Input() public xUnit = '';\n  /**\n   * @description Unit of y axis values.\n   */\n  @Input() public yUnit = '';\n  /**\n   * @Input : Angular\n   * @description The date format of the start/end values.\n   *  Please refer to this [list of specifiers](https://github.com/d3/d3-time-format/blob/master/README.md#locale_format).\n   */\n  @Input() public valuesDateFormat: string = null;\n  /**\n   * @Input : Angular\n   * @description Whether the chart is selectable.\n   */\n  @Input() public isHistogramSelectable = true;\n  /**\n   * @Input : Angular\n   * @description Whether the selection is multiple.\n   */\n  @Input() public multiselectable = false;\n  /**\n   * @Input : Angular\n   * @description A single interval that selects data.\n   */\n  @Input() public intervalSelection: SelectedInputValues;\n  /**\n   * @Input : Angular\n   * @description A list of intervals that select data.\n   */\n  @Input() public intervalListSelection: SelectedInputValues[];\n  /**\n   * @Input : Angular\n   * @description Top position of the remove-selection-button.\n   */\n  @Input() public topOffsetRemoveInterval = 40;\n  /**\n   * @Input : Angular\n   * @description leftOffsetRemoveInterval.\n   */\n  @Input() public leftOffsetRemoveInterval = 18;\n  /**\n   * @Input : Angular\n   * @description A 0 to 1 weight of the brush handles height.\n   * This input will be taken into account when selectionType is 'rectangle'.\n   * (This input will be renamed handlesHeightWeight in the v25.0.0 release.)\n   */\n  @Input() public brushHandlesHeightWeight = 1;\n  /**\n   * @Input : Angular\n   * @description Radius of handles in pixels. This input will be taken into account when selectionType is 'slider'.\n   */\n   @Input() public handlesRadius = 4;\n  /**\n   * @Input : Angular\n   * @description Radius of handles in pixels. This input will be taken into account when selectionType is 'slider'.\n   */\n  @Input() public selectionType: SelectionType = SelectionType.slider;\n  /**\n   * @Input : Angular\n   * @description Chart's representation type.\n   */\n  @Input() public chartType: ChartType = ChartType.area;\n  /**\n   * @Input : Angular\n   * @description Chart's title.\n   */\n  @Input() public chartTitle = '';\n  /**\n   * @Input : Angular\n   * @description Chart's label for the x axis (Visible when there is one bucket on the histogram).\n   */\n  @Input() public chartXLabel = '';\n\n  /**\n   * @Input : Angular\n   * @description Chart's label for the y axis (Visible when there is one bucket on the histogram).\n   */\n  @Input() public chartYLabel = '';\n  /**\n   * @Input : Angular\n   * @description Chart's width. If not specified, the chart takes the component's container width.\n   */\n  @Input() public chartWidth: number = null;\n  /**\n   * @Input : Angular\n   * @description Chart's height. If not specified, the chart takes the component's container height.\n   */\n  @Input() public chartHeight: number = null;\n  /**\n   * @Input : Angular\n   * @description Css class name to use to customize a specific `arlas-histogram` component.\n   */\n  @Input() public customizedCssClass = '';\n  /**\n   * @Input : Angular\n   * @description Whether the histogram values start from zero or from the minimum of data\n   */\n  @Input() public yAxisStartsFromZero = true;\n  /**\n   * @Input : Angular\n   * @description Whether to add stripes in the histograms when yAxis starts from minimum of data\n   */\n  @Input() public showStripes = true;\n  /**\n   * @Input : Angular\n   * @description The xAxis positon : above or below the chart.\n   */\n  @Input() public xAxisPosition: Position = Position.bottom;\n  /**\n   * @Input : Angular\n   * @description The start/end values positon : above or below the chart.\n   */\n  @Input() public descriptionPosition: Position = Position.bottom;\n  /**\n   * @Input : Angular\n   * @description Number of ticks in the X axis.\n   */\n  @Input() public xTicks = 5;\n  /**\n   * @Input : Angular\n   * @description Number of ticks in the Y axis.\n   */\n  @Input() public yTicks = 5;\n  /**\n   * @Input : Angular\n   * @description Number of labels in the X axis.\n   */\n  @Input() public xLabels = 5;\n  /**\n   * @Input : Angular\n   * @description Number of labels in the Y axis.\n   */\n  @Input() public yLabels = 5;\n  /**\n   * @Input : Angular\n   * @description Display short labels on y axis.\n   */\n  @Input() public shortYLabels = false;\n  /**\n   * @Input : Angular\n   * @description Whether showing the X axis ticks.\n   */\n  @Input() public showXTicks = true;\n  /**\n   * @Input : Angular\n   * @description Whether showing the Y axis ticks.\n   */\n  @Input() public showYTicks = true;\n  /**\n   * @Input : Angular\n   * @description Whether showing the X axis labels.\n   */\n  @Input() public showXLabels = true;\n  /**\n   * @Input : Angular\n   * @description Whether showing the Y axis labels.\n   */\n  @Input() public showYLabels = true;\n  /**\n   * @Input : Angular\n   * @description Whether showing the horizontal dashed lines.\n   */\n  @Input() public showHorizontalLines = true;\n  /**\n   * @Input : Angular\n   * @description The date format of ticks.\n   * Please refer to this [list of specifiers](https://github.com/d3/d3-time-format/blob/master/README.md#locale_format).\n   */\n  @Input() public ticksDateFormat: string = null;\n  /**\n   * @Input : Angular\n   * @description Whether the curve of an `area` chart is smoothed.\n   */\n  @Input() public isSmoothedCurve = true;\n\n  /**\n   * @Input : Angular\n   * @description Weight applied to bars width. ]0,1].\n   */\n  @Input() public barWeight = 0.6;\n  /**\n   * @Input : Angular\n   * @description Either a hex string color or a color name (in English) or a saturation interval.\n   */\n  @Input() public paletteColors: [number, number] | string = null;\n  /**\n  * @Input : Angular\n  * @description Allows to include only selections that contain data in the histogram/swimlane\n  */\n  @Input() public displayOnlyIntervalsWithData = false;\n  /**\n   * @Input : Angular\n   * @description Translates area chart by half data interval\n   */\n  @Input() public applyOffsetOnAreaChart = true;\n  /**\n   * @Input : Angular\n   * @description The swimlane mode.\n   * - `variableHeight` buckets height varies with the bucket's value\n   * - `fixedHeight` all the buckets have the same height. A level tick is plotted on the bucket to indicate\n   * the value level compared to other values.\n   * - `circles` buckets are represented with circles whose radius varies the bucket's value.\n   */\n  @Input() public swimlaneMode: SwimlaneMode = SwimlaneMode.variableHeight;\n  /**\n   * @Input : Angular\n   * @description The swimlane representation.\n   * - `column` representation focuses on terms of the same column; each term is compared to the sum of all terms values in the column.\n   * - `global` representation compares all the buckets values to the maximum value in the swimlane.\n   */\n  @Input() public swimlaneRepresentation: SwimlaneRepresentation = SwimlaneRepresentation.global;\n\n  /**\n   * @Input : Angular\n   * @description Graphical options to configure for the swimlane.\n  */\n  @Input() public swimlaneOptions: SwimlaneOptions;\n  /**\n   * @Input : Angular\n   * @description The width of swimlane labels space.\n   */\n  @Input() public swimLaneLabelsWidth = null;\n  /**\n   * @Input : Angular\n   * @description The radius of swimlane bars borders.\n   */\n  @Input() public swimlaneBorderRadius = 3;\n  /**\n   * @Input : Angular\n   * @description The height of a single lane. If not specified, a lane height is the chartHeight devided by the number of lanes.\n   */\n  @Input() public swimlaneHeight: number = null;\n\n  @Input() public id: string;\n  /**\n   * @Input : Angular\n   * @description Term's list of powerbars to select\n   */\n  @Input() public selectedSwimlanes = new Set<string>();\n  /**\n * @Input : Angular\n * @description Wether use UTC to display date on the app\n */\n  @Input() public useUtc = true;\n  /**\n   * @Output : Angular\n   * @description Emits the list of selected powerbars terms\n   */\n  @Output() public selectedSwimlanesEvent = new Subject<Set<string>>();\n  /**\n   * @Output : Angular\n   * @description Emits the list of selected intervals.\n   */\n  @Output() public valuesListChangedEvent: Subject<SelectedOutputValues[]> = new Subject<SelectedOutputValues[]>();\n  /**\n   * @Output : Angular\n   * @description Emits the hovered bucket key (key as in HistogramData).\n   */\n  @Output() public hoveredBucketEvent: Subject<Date | number> = new Subject<Date | number>();\n  /**\n   * @Output : Angular\n   * @description Emits an event informing that the chart finished plotting.\n   */\n  @Output() public dataPlottedEvent: Subject<string> = new Subject<string>();\n  /**\n   * @Output : Angular\n   * @description Emits the hovered bucket information that can be exploited to display a tooltip\n   */\n  @Output() public tooltipEvent: Subject<HistogramTooltip> = new Subject<HistogramTooltip>();\n\n  public histogram: AbstractHistogram;\n  public chart: AbstractChart;\n  public ChartType = ChartType;\n  public Position = Position;\n\n  private _onDestroy$ = new Subject<boolean>();\n\n  public constructor(private colorService: ArlasColorService, private el: ElementRef, private translate: TranslateService) {\n    fromEvent(window, 'resize')\n      .pipe(debounceTime(500), takeUntil(this._onDestroy$))\n      .subscribe((event: Event) => {\n        this.resizeHistogram();\n      });\n  }\n\n  public ngOnDestroy() {\n    this._onDestroy$.next(true);\n    this._onDestroy$.complete();\n  }\n\n  public static getHistogramJsonSchema(): Object {\n    return histogramJsonSchema;\n  }\n\n  public static getSwimlaneJsonSchema(): Object {\n    return swimlaneJsonSchema;\n  }\n\n\n  public ngOnChanges(changes: SimpleChanges): void {\n    if (this.histogram === undefined) {\n      switch (this.chartType) {\n      case ChartType.area: {\n        this.histogram = new ChartArea();\n        this.chart = this.histogram as ChartArea;\n        break;\n      }\n      case ChartType.curve: {\n        this.histogram = new ChartCurve();\n        this.chart = this.histogram as ChartCurve;\n        break;\n      }\n      case ChartType.bars: {\n        this.histogram = new ChartBars();\n        this.chart = this.histogram as ChartBars;\n        break;\n      }\n      case ChartType.oneDimension: {\n        this.histogram = new ChartOneDimension();\n        this.chart = this.histogram as ChartOneDimension;\n        break;\n      }\n      case ChartType.swimlane: {\n        if (this.swimlaneMode === SwimlaneMode.circles) {\n          this.histogram = new SwimlaneCircles();\n        } else {\n          this.histogram = new SwimlaneBars();\n        }\n        break;\n      }\n      default: {\n        this.histogram = new ChartArea();\n        break;\n      }\n      }\n      this.setHistogramParameters();\n    }\n\n    if (changes.data && this.data !== undefined && this.histogram !== undefined) {\n      if (Array.isArray(this.data)) {\n        this.histogram.histogramParams.histogramData = this.data;\n      } else {\n        this.histogram.histogramParams.swimlaneData = this.data;\n      }\n      this.histogram.histogramParams.hasDataChanged = true;\n      this.plotHistogram(this.data);\n      this.histogram.histogramParams.hasDataChanged = false;\n      this.dataPlottedEvent.next('DATA_PLOTTED');\n    }\n\n    if (changes.intervalSelection && this.intervalSelection !== undefined && this.histogram !== undefined && this.isHistogramSelectable) {\n      this.histogram.histogramParams.intervalSelection = this.intervalSelection;\n      if (this.histogram.histogramParams.dataLength > 0) {\n        (<AbstractChart>this.histogram).setSelectedInterval(this.intervalSelection);\n      }\n    }\n\n    if (changes.intervalListSelection && this.isHistogramSelectable && this.histogram !== undefined) {\n      if (changes.intervalListSelection.currentValue) {\n        this.histogram.histogramParams.intervalListSelection = this.intervalListSelection;\n        (<AbstractChart>this.histogram).redrawSelectedIntervals();\n      }\n    }\n\n    if (changes.selectedSwimlanes && this.histogram !== undefined && this.chartType === ChartType.swimlane) {\n      this.histogram.histogramParams.selectedSwimlanes = this.selectedSwimlanes;\n      (<AbstractSwimlane>this.histogram).applyStyleOnSwimlanes();\n    }\n  }\n\n  public ngOnInit() {\n  }\n\n  public ngAfterViewChecked() {\n    if (this.chartType === ChartType.swimlane) {\n      (<AbstractSwimlane>this.histogram).truncateLabels();\n    }\n    if (this.rt !== undefined && this.lt !== undefined) {\n      this.histogram.setHTMLElementsOfBrushCornerTooltips(this.rt.nativeElement, this.lt.nativeElement);\n    }\n  }\n\n  /**\n   * @description Plots the histogram\n   */\n  public plotHistogram(inputData: Array<HistogramData> | SwimlaneData): void {\n    this.histogram.plot(inputData);\n  }\n\n  /**\n   * @description Resizes the histogram on windows resize event\n   */\n  public resizeHistogram(): void {\n    if (this.histogram) {\n      this.histogram.resize(this.el.nativeElement.childNodes[0]);\n    }\n  }\n\n  /**\n   * @description Removes the selected interval\n   */\n  public removeSelectInterval(id: string) {\n    (<AbstractChart>this.histogram).removeSelectInterval(id);\n  }\n\n  private setHistogramParameters() {\n    if (!this.chartXLabel) {\n      this.chartXLabel = '';\n    }\n    if (!this.chartYLabel) {\n      this.chartYLabel = '';\n    }\n    if (!this.xUnit && this.dataUnit) {\n      this.xUnit = this.dataUnit;\n    } else if (!this.xUnit) {\n      this.xUnit = '';\n    }\n    if (!this.dataUnit) {\n      this.dataUnit = '';\n    }\n    if (!this.yUnit) {\n      this.yUnit = '';\n    }\n    if (!this.selectionType) {\n      this.selectionType = SelectionType.slider;\n    }\n    this.histogram.histogramParams = new HistogramParams();\n    this.histogram.histogramParams.useUtc = this.useUtc;\n    this.histogram.histogramParams.selectionType = this.selectionType;\n    this.histogram.histogramParams.handlesRadius = this.handlesRadius;\n    if (this.histogram.histogramParams.useUtc === undefined) {\n      this.histogram.histogramParams.useUtc = true;\n    }\n    this.histogram.histogramParams.barWeight = this.barWeight;\n    this.histogram.histogramParams.numberFormatChar = this.translate.instant(NUMBER_FORMAT_CHAR);\n    this.histogram.histogramParams.handlesHeightWeight = this.brushHandlesHeightWeight;\n    this.histogram.histogramParams.chartHeight = this.chartHeight;\n    this.histogram.histogramParams.chartTitle = this.chartTitle;\n    this.histogram.histogramParams.chartType = this.chartType;\n    this.histogram.histogramParams.chartWidth = this.chartWidth;\n    if (Array.isArray(this.data)) {\n      this.histogram.histogramParams.histogramData = this.data;\n    } else {\n      this.histogram.histogramParams.swimlaneData = this.data;\n    }\n    this.histogram.histogramParams.dataType = this.dataType;\n    this.histogram.histogramParams.dataUnit = this.dataUnit;\n    this.histogram.histogramParams.hoveredBucketEvent = this.hoveredBucketEvent;\n    this.histogram.histogramParams.intervalListSelection = this.intervalListSelection;\n    this.histogram.histogramParams.intervalSelection = this.intervalSelection;\n    this.histogram.histogramParams.isHistogramSelectable = this.isHistogramSelectable;\n    this.histogram.histogramParams.isSmoothedCurve = this.isSmoothedCurve;\n    this.histogram.histogramParams.multiselectable = this.multiselectable;\n    this.histogram.histogramParams.paletteColors = this.paletteColors;\n    this.histogram.histogramParams.showHorizontalLines = this.showHorizontalLines;\n    this.histogram.histogramParams.showXLabels = this.showXLabels;\n    this.histogram.histogramParams.showXTicks = this.showXTicks;\n    this.histogram.histogramParams.showYLabels = this.showYLabels;\n    this.histogram.histogramParams.showYTicks = this.showYTicks;\n    this.histogram.histogramParams.ticksDateFormat = this.ticksDateFormat;\n    this.histogram.histogramParams.topOffsetRemoveInterval = this.topOffsetRemoveInterval;\n    this.histogram.histogramParams.valuesDateFormat = this.valuesDateFormat;\n    this.histogram.histogramParams.valuesListChangedEvent = this.valuesListChangedEvent;\n    this.histogram.histogramParams.xAxisPosition = this.xAxisPosition;\n    this.histogram.histogramParams.xLabels = this.xLabels;\n    this.histogram.histogramParams.xTicks = this.xTicks;\n    this.histogram.histogramParams.yLabels = this.yLabels;\n    this.histogram.histogramParams.yTicks = this.yTicks;\n    this.histogram.histogramParams.shortYLabels = this.shortYLabels;\n    this.histogram.histogramParams.swimLaneLabelsWidth = this.swimLaneLabelsWidth;\n    this.histogram.histogramParams.swimlaneHeight = this.swimlaneHeight;\n    this.histogram.histogramParams.swimlaneBorderRadius = this.swimlaneBorderRadius;\n    this.histogram.histogramParams.swimlaneMode = this.swimlaneMode;\n    this.histogram.histogramParams.swimlaneOptions = this.swimlaneOptions;\n    this.histogram.histogramParams.swimlaneRepresentation = this.swimlaneRepresentation !== undefined ?\n      this.swimlaneRepresentation : SwimlaneRepresentation.global;\n    this.histogram.histogramParams.uid = HistogramUtils.generateUID();\n    this.histogram.histogramParams.id = this.id;\n    this.histogram.histogramParams.histogramContainer = this.el.nativeElement.childNodes[0];\n    this.histogram.histogramParams.svgNode = this.el.nativeElement.childNodes[0].querySelector('svg');\n    this.histogram.histogramParams.displayOnlyIntervalsWithData = this.displayOnlyIntervalsWithData;\n    this.histogram.histogramParams.yAxisFromZero = this.yAxisStartsFromZero;\n    this.histogram.histogramParams.showStripes = this.showStripes;\n    this.histogram.histogramParams.moveDataByHalfInterval = this.applyOffsetOnAreaChart;\n    this.histogram.histogramParams.selectedSwimlanes = this.selectedSwimlanes;\n    this.histogram.histogramParams.selectedSwimlanesEvent = this.selectedSwimlanesEvent;\n    this.histogram.histogramParams.colorGenerator = this.colorService;\n    this.histogram.histogramParams.mainChartId = this.mainChartId;\n    this.histogram.histogramParams.tooltipEvent\n      .pipe(takeUntil(this._onDestroy$))\n      .subscribe(t => {\n        t.title = this.chartTitle;\n        t.xLabel = this.chartXLabel;\n        t.yLabel = this.chartYLabel;\n        t.xUnit = this.xUnit;\n        t.yUnit = this.yUnit;\n        this.tooltipEvent.next(t);\n      });\n  }\n}\n","<div id=\"{{id}}\" class=\"histogram\" [ngClass]=\"customizedCssClass\">\n  <div *ngIf=\"descriptionPosition === Position.top\" class=\"histogram__description\" [style.width.px]=\"histogram?.histogramParams.chartWidth-histogram?.histogramParams.margin.left-histogram?.histogramParams.margin.right\"\n    [style.margin-left.px]=\"histogram?.histogramParams.margin.left\" [style.margin-right.px]=\"histogram?.histogramParams.margin.right\">\n    <div class=\"histogram__description--display\">\n      <div class=\"histogram__description__startvalue\">\n        <span *ngIf=\"histogram?.histogramParams.dataLength > 1\" class=\"histogram__description__startvalue--background\">{{histogram?.histogramParams.startValue}}</span>\n      </div>\n      <div class=\"histogram__description__title\">\n        <span *ngIf=\"histogram?.histogramParams.showTitle\">{{histogram?.histogramParams.chartTitle}}</span>\n      </div>\n      <div class=\"histogram__description__endvalue\">\n        <span *ngIf=\"histogram?.histogramParams.dataLength > 1\" class=\"histogram__description__endvalue--background\">{{histogram?.histogramParams.endValue}}</span>\n      </div>\n    </div>\n  </div>\n  <div [style.display]=\"histogram?.histogramParams.displaySvg\" style=\"position:relative\">\n    <svg id=\"svgix\" class=\"histogram__chart\" [style.width.px]=\"histogram?.histogramParams.chartWidth\" [style.height.px]=\"histogram?.histogramParams.chartHeight\"></svg>\n    <div *ngIf=\"chart?.brush?.isBrushing\">\n      <div #left [style.visibility]=\"histogram?.brushCornerTooltips.horizontalCssVisibility\" class=\"histogram__brush-tooltip histogram__brush-tooltip__horizontal--left\"\n        [style.left.px]=\"histogram?.brushCornerTooltips.leftCornerTooltip.xPosition\"   [style.top.px]=\"histogram?.brushCornerTooltips.leftCornerTooltip.yPosition\">\n        {{histogram?.brushCornerTooltips.leftCornerTooltip.content}}\n      </div>\n      <div #right [style.visibility]=\"histogram?.brushCornerTooltips.horizontalCssVisibility\" class=\"histogram__brush-tooltip histogram__brush-tooltip__horizontal--right\"\n        [style.right.px]=\"histogram?.brushCornerTooltips.rightCornerTooltip.xPosition\"   [style.top.px]=\"histogram?.brushCornerTooltips.rightCornerTooltip.yPosition\">\n        {{histogram?.brushCornerTooltips.rightCornerTooltip.content}}\n      </div>\n\n      <div #leftvertical [style.visibility]=\"histogram?.brushCornerTooltips.verticalCssVisibility\" class=\"histogram__brush-tooltip histogram__brush-tooltip__vertical--left__rotation histogram__brush-tooltip__vertical--left\"\n        [style.left.px]=\"histogram?.brushCornerTooltips.leftCornerTooltip.xPosition\"   [style.top.px]=\"histogram?.brushCornerTooltips.leftCornerTooltip.yPosition\" [style.width.px]=\"histogram?.brushCornerTooltips.leftCornerTooltip.width\">\n        {{histogram?.brushCornerTooltips.leftCornerTooltip.content}}\n      </div>\n      <div #rightvertical [style.visibility]=\"histogram?.brushCornerTooltips.verticalCssVisibility\" class=\"histogram__brush-tooltip histogram__brush-tooltip__vertical--right__rotation histogram__brush-tooltip__vertical--right\"\n        [style.left.px]=\"histogram?.brushCornerTooltips.rightCornerTooltip.xPosition\"   [style.top.px]=\"histogram?.brushCornerTooltips.rightCornerTooltip.yPosition\" [style.width.px]=\"histogram?.brushCornerTooltips.rightCornerTooltip.width\">\n        {{histogram?.brushCornerTooltips.rightCornerTooltip.content}}\n      </div>\n    </div>\n  </div>\n  <div *ngIf=\"histogram?.histogramParams.dataLength === 1\" class=\"histogram__no-chart\" [style.width.px]=\"histogram?.histogramParams.chartWidth\" [style.height.px]=\"histogram?.histogramParams.chartHeight\">\n    <span class=\"histogram__no-chart__key\">{{chartXLabel | translate}} {{data[0].key | histogramKey : histogram?.histogramParams }} {{xUnit | translate}}</span>\n    <div *ngFor=\"let d of data\">\n      <span class=\"histogram__no-chart__value\">{{histogram?.histogramParams.chartTitle | translate}} {{d.value}}  {{ ((yUnit && yUnit.length > 0) ? yUnit : d.chartId | getCollectionUnit) | translate }}</span>\n    </div>\n  </div>\n  <div *ngIf=\"descriptionPosition === Position.bottom\" class=\"histogram__description\" [style.width.px]=\"histogram?.histogramParams.chartWidth-histogram?.histogramParams.margin.left-histogram?.histogramParams.margin.right\"\n    [style.margin-left.px]=\"histogram?.histogramParams.margin.left\" [style.margin-right.px]=\"histogram?.histogramParams.margin.right\">\n    <div class=\"histogram__description--display\">\n      <div class=\"histogram__description__startvalue\">\n        <span *ngIf=\"histogram?.histogramParams.dataLength > 1\" class=\"histogram__description__startvalue--background\">{{histogram?.histogramParams.startValue}}</span>\n      </div>\n      <div class=\"histogram__description__title\">\n        <span *ngIf=\"histogram?.histogramParams.showTitle\">{{histogram?.histogramParams.chartTitle}}</span>\n      </div>\n      <div class=\"histogram__description__endvalue\">\n        <span *ngIf=\"histogram?.histogramParams.dataLength > 1\" class=\"histogram__description__endvalue--background\">{{histogram?.histogramParams.endValue}}</span>\n      </div>\n    </div>\n  </div>\n  <div *ngIf=\"chartType === ChartType.swimlane\">\n    <div class=\"histogram__tooltip\" *ngIf=\"histogram?.histogramParams.swimlaneXTooltip.isShown && !histogram?.histogramParams.swimlaneXTooltip.isRightSide\"\n      [style.left.px]=\"histogram?.histogramParams.swimlaneXTooltip.xPosition\"   [style.bottom.px]=\"30\">\n      <span class=\"histogram__swimlane--tooltip-xcontent\">{{histogram?.histogramParams.swimlaneXTooltip.xContent}}</span>\n    </div>\n    <div class=\"histogram__tooltip\" *ngIf=\"histogram?.histogramParams.swimlaneXTooltip.isShown && histogram?.histogramParams.swimlaneXTooltip.isRightSide\"\n      [style.right.px]=\"histogram?.histogramParams.swimlaneXTooltip.xPosition\"   [style.bottom.px]=\"30\">\n      <span class=\"histogram__swimlane--tooltip-xcontent\">{{histogram?.histogramParams.swimlaneXTooltip.xContent}}</span>\n    </div>\n    <div *ngFor=\"let tooltip of histogram?.histogramParams.swimlaneTooltipsMap | keyvalue\">\n      <div class=\"histogram__tooltip\" *ngIf=\"tooltip.value.isShown && !tooltip.value.isRightSide && tooltip.value.yContent\"\n        [style.left.px]=\"tooltip.value.xPosition\" [style.top.px]=\"tooltip.value.yPosition\">\n        <span class=\"histogram__swimlane--tooltip-content\">{{tooltip.value.yContent}}</span>\n        <span class=\"histogram__swimlane--tooltip-additional_info\">{{tooltip.value.yAdditonalInfo}}</span>\n      </div>\n      <div class=\"histogram__tooltip\" *ngIf=\"tooltip.value.isShown && tooltip.value.isRightSide && tooltip.value.yContent\"\n        [style.right.px]=\"tooltip.value.xPosition\"  [style.top.px]=\"tooltip.value.yPosition\">\n        <span class=\"histogram__swimlane--tooltip-content\">{{tooltip.value.yContent}}</span>\n        <span class=\"histogram__swimlane--tooltip-additional_info\">{{tooltip.value.yAdditonalInfo}}</span>\n      </div>\n    </div>\n  </div>\n\n  <div *ngFor=\"let id of histogram?.histogramParams.selectionListIntervalId\" class=\"histogram__remove\" (click)=\"removeSelectInterval(id)\" [style.top.px]=\"histogram?.histogramParams.topOffsetRemoveInterval\"\n    [style.left.px]=\"histogram?.histogramParams.intervalSelectedMap.get(id)?.x_position\" matTooltip=\"{{'Remove this selection' | translate}}\" matTooltipPosition=\"above\">\n    <svg fill=\"#fff\" height=\"24\" viewBox=\"0 0 24 24\"\n      width=\"24\" xmlns=\"http://www.w3.org/2000/svg\" transform=\"rotate(45)\">\n      <path  d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm5 11h-4v4h-2v-4H7v-2h4V7h2v4h4v2z\" />\n      <path fill=\"#555\" d=\"M13 7h-2v4H7v2h4v4h2v-4h4v-2h-4V7zm-1-5C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8z\"/>\n    </svg>\n  </div>\n  <div *ngIf=\"chartType === ChartType.swimlane\">\n    <div>\n      <div class=\"swimlane_legend\">\n        <div [style.width.px]=\"histogram?.histogramParams.chartWidth * 0.3 / 10\" class=\"swimlane_legend_color\" *ngFor=\"let b of histogram?.histogramParams.legend\" [style.background-color]=\"b.color\"></div>\n      </div>\n      <div class=\"swimlane_legend\">\n        <div [style.width.px]=\"histogram?.histogramParams.chartWidth * 0.3 / 10\" class=\"swimlane_legend_value\" *ngFor=\"let b of histogram?.histogramParams.legend; index as i\" >{{b.key}}</div>\n      </div>\n    </div>\n  </div>\n</div>\n","/*\n * Licensed to Gisaïa under one or more contributor\n * license agreements. See the NOTICE.txt file distributed with\n * this work for additional information regarding copyright\n * ownership. Gisaïa licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { NgModule } from '@angular/core';\nimport { GetCollectionUnitPipe } from './get-collection-unit.pipe';\n\n@NgModule({\n  imports: [\n  ],\n  declarations: [\n    GetCollectionUnitPipe\n  ],\n  exports: [\n    GetCollectionUnitPipe\n  ]\n})\nexport class GetCollectionUnitModule {}\n","/*\n * Licensed to Gisaïa under one or more contributor\n * license agreements. See the NOTICE.txt file distributed with\n * this work for additional information regarding copyright\n * ownership. Gisaïa licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HistogramComponent } from './histogram.component';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { HistogramKeyPipe } from './histogram-key.pipe';\nimport { GetCollectionUnitModule } from '../../pipes/get-collection-unit/get-collection-unit.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    TranslateModule,\n    MatTooltipModule,\n    GetCollectionUnitModule\n  ],\n  declarations: [HistogramComponent, HistogramKeyPipe],\n  exports: [HistogramComponent]\n})\nexport class HistogramModule {}\n","/*\n * Licensed to Gisaïa under one or more contributor\n * license agreements. See the NOTICE.txt file distributed with\n * this work for additional information regarding copyright\n * ownership. Gisaïa licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport { SimpleNode } from 'arlas-d3';\n\nexport class PowerBar {\n  /**\n   * @description Powerbar term.\n   */\n  public term: string;\n  /**\n   * @description Powerbar parent node term.\n   */\n  public parentTerm: string;\n  /**\n   * @description Term's occurence.\n   */\n  public count: number;\n  /**\n   * @description Powerbar progression.\n   */\n  public progression: number;\n  /**\n   * @description Whether the powerbar is selected.\n   */\n  public isSelected = false;\n\n  /**\n   * @description Path from the powerbar to the parent nodes\n   */\n  public path: Array<SimpleNode>;\n  /**\n   * @description class name to apply to the powerbar : `neutral-state`, `selected-bar` or `unselected-bar`.\n   */\n  public classSuffix = 'neutral-state';\n  /**\n   * @description color of the powerbar obtained from the powerbar term.\n   */\n  public color: string;\n\n  public constructor(term: string, parentTerm: string, count: number) {\n    this.term = term;\n    this.parentTerm = parentTerm;\n    this.count = count;\n  }\n}\n","/*\n * Licensed to Gisaïa under one or more contributor\n * license agreements. See the NOTICE.txt file distributed with\n * this work for additional information regarding copyright\n * ownership. Gisaïa licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nexport enum PageEnum {\n  next = 'next', previous = 'previous'\n}\n","/*\n * Licensed to Gisaïa under one or more contributor\n * license agreements. See the NOTICE.txt file distributed with\n * this work for additional information regarding copyright\n * ownership. Gisaïa licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nexport enum ThumbnailFitEnum {\n    height = 'height',\n    width = 'width',\n    contain = 'contain'\n}\n","/*\n * Licensed to Gisaïa under one or more contributor\n * license agreements. See the NOTICE.txt file distributed with\n * this work for additional information regarding copyright\n * ownership. Gisaïa licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nexport enum CellBackgroundStyleEnum {\n  filled = 'filled',\n  outlined = 'outlined'\n}\n","/*\n * Licensed to Gisaïa under one or more contributor\n * license agreements. See the NOTICE.txt file distributed with\n * this work for additional information regarding copyright\n * ownership. Gisaïa licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport { Subject } from 'rxjs';\nimport { PageEnum } from './enumerations/pageEnum';\n\n/**\n * Enables customize the resultlist options/behaviours\n */\nexport class ResultListOptions {\n  public showActionsOnhover = false;\n  public showDetailIconName = 'add_circle_outline';\n  public hideDetailIconName = 'remove_circle_outline';\n  public defautlImgUrl = './assets/no-view.png';\n\n\n  public constructor() {}\n}\n\nexport interface Action {\n  id: string;\n  label: string;\n  actionBus?: Subject<{ idFieldName: string; idValue: string; }>;\n  cssClass?: string | string[];\n  tooltip?: string;\n  /** An action might need a reverse action to go back to an original state.\n   * For instance: add layer to map => reverse => remove layer from map.*/\n  reverseAction?: Action;\n  /** if activated, the action is always displayed (not only on hover). */\n  activated?: boolean;\n  /** An Angular icon name to be used to display the icon button of the action. */\n  icon?: string;\n  /** If this attribute is set, it means that this action needs these fields values in order to be accomplished.\n   * If those fields values don't exist for an item, then the action could not be completed and therefore should be hidden. */\n  fields?: string [];\n  /** Calculated attribute that tells if the action should be shown or not. */\n  show?: boolean;\n  /** For global actions, even if no item is selected, the action will be enabled */\n  alwaysEnabled?: boolean;\n}\n\n/** A utility class to handle the action's states  */\nexport class ActionHandler {\n  /** An action is reversible simply when a reverse action is declared. */\n  public static isReversible(a: Action): boolean {\n    return !!a && !!a.reverseAction;\n  }\n\n  public static activate(a: Action): void {\n    a.activated = true;\n  }\n\n  public static reverse(a: Action): void {\n    a.activated = false;\n  }\n}\n\nexport interface ElementIdentifier {\n  idFieldName: string;\n  idValue: string;\n}\n\nexport interface FieldsConfiguration {\n  idFieldName: string;\n  /**\n   * @deprecated\n   */\n  urlImageTemplate?: string;\n  urlImageTemplates?: Array<DescribedUrl>;\n  urlThumbnailTemplate?: string;\n  titleFieldNames?: Array<Field>;\n  tooltipFieldNames?: Array<Field>;\n  useHttpQuicklooks?: boolean;\n  useHttpThumbnails?: boolean;\n  /**\n   * @deprecated\n   */\n  icon?: string;\n  iconCssClass?: string;\n  iconColorFieldName?: string;\n  detailsTitleTemplate?: string;\n}\n\nexport interface DescribedUrl {\n  url: string;\n  description: string;\n  filter?: FieldFilter;\n}\n\nexport interface FieldFilter {\n  field: string;\n  values: Array<string>;\n}\n\nexport interface Field {\n  fieldPath: string;\n  process?: string;\n}\n\nexport interface PageQuery {\n  reference: Map<string, ItemDataType>;\n  whichPage: PageEnum;\n}\n\nexport interface Attachment {\n  label?: string;\n  url: string;\n  type?: string;\n  description?: string;\n  icon?: string;\n}\n\nexport interface AdditionalInfo {\n  details?: Map<string, Map<string, string>>;\n  actions?: Array<Action>;\n  attachments?: Array<Attachment>;\n}\n\nexport type ItemDataType = string | number | Date | Array<string>;\n\nexport const PROTECTED_IMAGE_HEADER = 'Protected-Image-Header';\n\n/**\n * @param data A dictionnary of data to retrieve information\n * @param template The template of the desired string. Contains variable keys between brackets\n * @returns A string with the regex replaced by the data\n */\nexport function matchAndReplace(data: Map<string, ItemDataType>, template: string) {\n  let replaced = template;\n  template.match(/{(.+?)}/g)?.forEach(t => {\n    const key: string = t.replace('{', '').replace('}', '');\n    if (!!data.get(key)) {\n      replaced = replaced.replace(t, data.get(key).toString());\n    }\n  });\n  return replaced;\n}\n","/*\n * Licensed to Gisaïa under one or more contributor\n * license agreements. See the NOTICE.txt file distributed with\n * this work for additional information regarding copyright\n * ownership. Gisaïa licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport { Action, Attachment, ItemDataType } from '../utils/results.utils';\nimport { Column } from './column';\n\nexport interface ItemDetailGroup {\n  group: string;\n  details: Array<{ key: string; value: string; }>;\n};\n\nexport class Item {\n\n  /**\n   * @description Item's identifier.\n   */\n  public identifier: string;\n  /**\n   * @description List of urls pointing to the item's images.\n   */\n  public urlImages: Array<string>;\n  /**\n   * @description List of descriptions of the images.\n   */\n  public descriptions: Array<string>;\n  /**\n   * @description If image is enabled (to avoid 404 not found)\n   */\n  public imageEnabled: boolean;\n  /**\n   * @description Url that links the item's thumbnail.\n   */\n  public urlThumbnail: string;\n  /**\n   * @description If thumbnail is enabled (to avoid 404 nott found)\n   */\n  public thumbnailEnabled: boolean;\n  /**\n   * @description Item's title.\n   */\n  public title: string;\n  /**\n   * @description Item's tooltip.\n   */\n  public tooltip: string;\n  /**\n   * @description The item's data is organized in this columns when represented in a table.\n   */\n  public columns: Array<Column>;\n  /**\n   * @description A fieldName-fieldValue map representing the item's data.\n   */\n  public itemData: Map<string, ItemDataType>;\n\n  /**\n   * @description More data organized in groups.\n   */\n  public itemDetailedData = new Array<ItemDetailGroup>();\n  /**\n     * @description Links attached to the item.\n     */\n  public attachments: Array<Attachment>;\n  /**\n   * @description List of actions that can be applied to this item.\n   */\n  public actions: Array<Action>;\n  /**\n   * @description Whether to display the detailed data.\n   */\n  public isDetailToggled = false;\n  /**\n   * @description Whether the item is checked.\n   */\n  public isChecked = false;\n  /**\n   * @description Whether the item state is indeterminated.\n   */\n  public isindeterminated = false;\n  /**\n   * @description Whether to highlight the item.\n   */\n  public ishighLight = undefined;\n  /**\n   * @description The item position in a list of items.\n   */\n  public position: number;\n  /**\n   * @description The material grid icon.\n   * @deprecated\n   */\n  public icon: string;\n  /**\n   * @description The css class for material grid icon.\n   */\n  public iconCssClass: string;\n  /**\n   * @description color characterising the item\n   */\n  public color: string;\n  /**\n    * @description Title for the details section.\n    */\n  public detailsTitle: string;\n  /**\n   * @description If details item title is enabled\n   */\n  public detailsTitleEnabled: boolean;\n\n  public constructor(columns: Array<Column>, itemData: Map<string, ItemDataType>) {\n    this.columns = columns;\n    this.itemData = itemData;\n  }\n}\n","/*\n * Licensed to Gisaïa under one or more contributor\n * license agreements. See the NOTICE.txt file distributed with\n * this work for additional information regarding copyright\n * ownership. Gisaïa licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nexport enum SortEnum {\n  asc, desc, none\n}\n","/*\n * Licensed to Gisaïa under one or more contributor\n * license agreements. See the NOTICE.txt file distributed with\n * this work for additional information regarding copyright\n * ownership. Gisaïa licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport { SortEnum } from '../utils/enumerations/sortEnum';\n\nexport class Column {\n  /**\n   * @description The column name\n   */\n  public columnName: string;\n  /**\n   * @description The name of the field related to this column.\n   */\n  public fieldName: string;\n  /**\n   * @description Type of data that is appended to column name : %, °C, ..\n   */\n  public dataType: string;\n  /**\n   * @description Width of the column.\n   */\n  public width: number;\n  /**\n   * @description Sort direction to apply to th column : ascending, descending or none\n   */\n  public sortDirection: SortEnum = SortEnum.none;\n  /**\n   * @description Whether this column represents an id field.\n   */\n  public isIdField = false;\n  /**\n   * @description Whether the cells of this column contains a toggle button.\n   */\n  public isToggleField = false;\n  /**\n   * @description Whether the filter search column has a dropdown.\n   */\n  public dropdown = false;\n  /**\n   * @description Size of the dropdown list.\n   */\n  public dropdownsize = 10;\n  /**\n   * @description Whether to allow colorizing cells that are within this column\n   */\n  public useColorService = false;\n\n  public constructor(columnName: string, fieldName: string, dataType: string ) {\n    this.columnName = columnName;\n    this.fieldName = fieldName;\n    this.dataType = dataType;\n  }\n\n}\n","/*\n * Licensed to Gisaïa under one or more contributor\n * license agreements. See the NOTICE.txt file distributed with\n * this work for additional information regarding copyright\n * ownership. Gisaïa licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nexport enum ModeEnum {\n  list, grid\n}\n","/*\n * Licensed to Gisaïa under one or more contributor\n * license agreements. See the NOTICE.txt file distributed with\n * this work for additional information regarding copyright\n * ownership. Gisaïa licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport { Injectable } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\nimport { Item } from '../components/results/model/item';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ResultlistNotifierService {\n\n  private itemHoveredSource: Subject<Item> = new Subject();\n  public itemHovered$: Observable<Item> = this.itemHoveredSource.asObservable();\n\n  public notifyItemHover(item: Item) {\n    this.itemHoveredSource.next(item);\n  }\n\n}\n\n\n","/*\n * Licensed to Gisaïa under one or more contributor\n * license agreements. See the NOTICE.txt file distributed with\n * this work for additional information regarding copyright\n * ownership. Gisaïa licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport { Observable } from 'rxjs';\nimport { Item } from '../model/item';\nimport { DetailedDataRetriever } from '../utils/detailed-data-retriever';\nimport { Action, AdditionalInfo, Attachment } from '../utils/results.utils';\n\nexport class ItemComponent {\n\n  /**\n   * @description Emits the retrieved detailed data.\n   */\n  protected retrievedDataEvent: Observable<AdditionalInfo>;\n\n  public setSelectedItem(isChecked: Boolean, identifier: string, selectedItems: Set<string>) {\n    isChecked = !isChecked;\n    if (isChecked) {\n      if (!selectedItems.has(identifier)) {\n        selectedItems.add(identifier);\n      }\n    } else {\n      if (selectedItems.has(identifier)) {\n        selectedItems.delete(identifier);\n      }\n    }\n  }\n\n  public retrieveAdditionalInfo(detailedDataRetriever: DetailedDataRetriever, item: Item) {\n    if (detailedDataRetriever !== null && item.itemDetailedData.length === 0) {\n      this.retrievedDataEvent = detailedDataRetriever.getData(((String)(item.identifier)));\n      this.retrievedDataEvent.subscribe(additionalInfo => {\n        item.actions = new Array<Action>();\n        additionalInfo.actions.forEach(action => {\n          item.actions.push({\n            id: action.id,\n            label: action.label,\n            actionBus: action.actionBus,\n            cssClass: action.cssClass,\n            tooltip: action.tooltip,\n            reverseAction: action.reverseAction,\n            icon: action.icon,\n            fields: action.fields,\n            show: action.show\n          });\n        });\n        additionalInfo.details.forEach((v, k) => {\n          const details: Array<{ key: string; value: string; }> = new Array<{ key: string; value: string; }>();\n          v.forEach((value, key) => details.push({ key: key, value: value }));\n          item.itemDetailedData.push({ group: k, details: details });\n        });\n        if (additionalInfo.attachments) {\n          item.attachments = new Array<Attachment>();\n          additionalInfo.attachments.forEach(attachment => {\n            item.attachments.push({\n              label: attachment.label,\n              url: attachment.url,\n              type: attachment.type,\n              description: attachment.description,\n              icon: attachment.icon\n            });\n          });\n        }\n      });\n    }\n  }\n}\n","/*\n * Licensed to Gisaïa under one or more contributor\n * license agreements. See the NOTICE.txt file distributed with\n * this work for additional information regarding copyright\n * ownership. Gisaïa licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport { Pipe, PipeTransform } from '@angular/core';\nimport { Action, ActionHandler } from '../utils/results.utils';\n\n@Pipe({\n  name: 'actionDisplayer'\n})\nexport class ActionDisplayerPipe implements PipeTransform {\n\n  /**\n   * @param a Action\n   * @param displayElement Part of the action displayed in the template\n   * @returns According to the action's state, returns the right displayElement.\n   */\n  public transform(a: Action, displayElement: 'label' | 'tooltip' | 'id' | 'icon') {\n    /** Note that if an action has been activated, we display the elements of the reverse action ! */\n    /** For example if the action of 'visualize' on map is activated, we display the reverse action 'Remove from map'. */\n    switch (displayElement) {\n      case 'label':\n        return ActionHandler.isReversible(a) ?\n          (a.activated ? a.reverseAction?.label : a.label) :\n          a.label;\n      case 'tooltip':\n        return ActionHandler.isReversible(a) ?\n          (a.activated ? a.reverseAction?.tooltip : a.tooltip) :\n          a.tooltip;\n      case 'id':\n        return ActionHandler.isReversible(a) ?\n          (a.activated ? a.reverseAction?.id : a.id) :\n          a.id;\n      case 'icon':\n        return ActionHandler.isReversible(a) ?\n          (a.activated ? a.reverseAction?.icon : a.icon) :\n          a.icon;\n    }\n  }\n}\n","/*\n * Licensed to Gisaïa under one or more contributor\n * license agreements. See the NOTICE.txt file distributed with\n * this work for additional information regarding copyright\n * ownership. Gisaïa licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport { Component, Input, OnChanges, OnDestroy, OnInit, Output, SimpleChanges } from '@angular/core';\nimport { Item } from '../model/item';\nimport { Action, ActionHandler } from '../utils/results.utils';\nimport { filter, Subject, take, takeUntil } from 'rxjs';\nimport { DetailedDataRetriever } from '../utils/detailed-data-retriever';\nimport { ResultlistNotifierService } from '../../../services/resultlist.notifier.service';\n\n\n/**\n * This component displays actions of an item.\n * - Actions are only displayed when we hover an item.\n * BUT\n * An action can be reversible. It means that this action has a reverse action.\n * - An example of reversible action:  Action => Add layer to map --///--  Reverse Action => Remove layer from map.\n * - When you click on a reversible action for the first time, the action become 'activated'.\n * - Activated actions should be displayed all the time on the resultlist (in list and grid view).\n * - When you click on an 'activated' action, the action is reversed and goes back to its initial state.\n * - Actions that are not activated are only displayed when we hover an item.\n * ALSO\n * When a reversible action has `fields` attribute. It means that this action needs the existence of the fields values in order to be executed.\n * - If one of the fields values is absent in the current item, the action will be hidden.\n */\n@Component({\n  selector: 'arlas-result-actions',\n  templateUrl: './result-actions.component.html',\n  styleUrls: ['./result-actions.component.scss']\n})\nexport class ResultActionsComponent implements OnInit, OnChanges, OnDestroy {\n  /** The item which actions are managed by this component. */\n  @Input() public item: Item;\n  /** Width of the component. */\n  @Input() public width: number;\n  /** Map <itemId, Set<actionIds>> : for each item, gives the list of activated actions. */\n  @Input() public activatedActionsPerItem: Map<string, Set<string>> = new Map<string, Set<string>>();\n  /** This data retriever allows to fetch the actions of each items + check if an action should be hidden. */\n  @Input() public detailedDataRetriever: DetailedDataRetriever = null;\n  /** Whether to stop propagation at click/hover of the action. */\n  @Input() public stopPropagation = false;\n  /** Whether to display the actions as icon buttons or text buttons. */\n  @Input() public mode: 'icon' | 'text' = 'icon';\n\n  /** Emits an event when the action is clicked on it. */\n  @Output() public actionOnItemEvent: Subject<Action> = new Subject<Action>();\n\n  /** Destroy subscriptions. */\n  private _onDestroy$ = new Subject<boolean>();\n\n  public actions: Action[];\n\n  public constructor(private notifier: ResultlistNotifierService) {\n    /** When an Item is hovered: */\n    this.notifier.itemHovered$.pipe(takeUntil(this._onDestroy$)).pipe(filter((i: Item) => i.identifier === this.item.identifier)).subscribe({\n      next: (i: Item) => {\n        /** Always show non reversible actions. */\n        this.actions.filter(a => !ActionHandler.isReversible(a)).forEach(a => a.show = true);\n        /** We check if reversible actions has 'fields'.\n         * - If one of the fields values is absent in the current item, the action will be hidden. */\n        this.actions.filter(a => ActionHandler.isReversible(a) && a.fields && a.show === undefined).forEach(a => {\n          this.detailedDataRetriever.getValues(i.identifier, a.fields).pipe(take(1)).subscribe({\n            next: (values: string[]) => a.show = values.filter(v => !v).length === 0\n          });\n        });\n      }\n    });\n  }\n\n  public ngOnInit(): void {\n    this.setItemActions(this.item);\n  }\n\n  public ngOnChanges(changes: SimpleChanges): void {\n    if (changes.activatedActionsPerItem) {\n      this.updateActions();\n    }\n  }\n\n  /**\n   * An action can be reversible. It means that this action has a reverse action.\n   * - When you click on a reversible action for the first time, the action become 'activated'.\n   * - Activated actions should be displayed all the time on the resultlist (in list and grid view).\n   * - When you click on an 'activated' action, the action is reversed and goes back to its initial state.\n   */\n  public triggerAction(event: Event, action: Action) {\n    if (this.stopPropagation) {\n      event.stopPropagation();\n    }\n    this.actionOnItemEvent.next(action);\n    /** activate */\n    if (ActionHandler.isReversible(action) && !action.activated) {\n      ActionHandler.activate(action);\n    } else if (ActionHandler.isReversible(action) && action.activated) {\n      ActionHandler.reverse(action);\n    }\n    /** Retrigger the pipe ActionDisplayerPipe */\n    this.actions = [...this.actions];\n  }\n\n  /**\n   * An action can be reversible. It means that this action has a reverse action.\n   * - When you click on a reversible action for the first time, the action become 'activated'.\n   * - Activated actions should be displayed all the time on the resultlist (in list and grid view).\n   * - When you click on an 'activated' action, the action is reversed and goes back to its initial state.\n   */\n  private updateActions() {\n    if (this.activatedActionsPerItem) {\n      const actionIds = this.activatedActionsPerItem.get(this.item.identifier);\n      if (!!actionIds && !!this.actions) {\n        this.actions.filter(a => ActionHandler.isReversible(a)).forEach(a => {\n          if (actionIds.has(a.id)) {\n            ActionHandler.activate(a);\n            /** Always show activated actions. */\n            a.show = true;\n          } else {\n            ActionHandler.reverse(a);\n          }\n        });\n        /** Retrigger ActionDisplayerPipe */\n        this.actions = [...this.actions];\n      }\n    }\n  }\n\n  /**\n   * @description set the list of actions of an item\n   * @param item\n   */\n  private setItemActions(item: Item): void {\n    if (item && (!item.actions || (item.actions && item.actions.length === 0))) {\n      item.actions = new Array<Action>();\n      this.detailedDataRetriever.getActions(item).pipe(take(1)).subscribe(actions => {\n        actions.forEach(action => {\n          item.actions.push({\n            id: action.id,\n            label: action.label,\n            actionBus: action.actionBus,\n            cssClass: action.cssClass,\n            tooltip: action.tooltip,\n            reverseAction: action.reverseAction,\n            icon: action.icon,\n            fields: action.fields,\n            show: action.show\n          });\n        });\n        this.actions = item.actions;\n        this.updateActions();\n      });\n    } else if (item && item.actions && item.actions.length > 0) {\n      this.actions = item.actions;\n      this.updateActions();\n    }\n  }\n\n  public ngOnDestroy(): void {\n    this._onDestroy$.next(true);\n    this._onDestroy$.complete();\n  }\n}\n","<!-- This sections is for actions that we display as icon buttons -->\n<div [style.max-width.px]=\"width\" class=\"list_actions\" *ngIf=\"mode === 'icon'; else textActions\">\n    <ng-container *ngFor=\"let action of actions\">\n        <ng-container *ngIf=\"action?.show === true\">\n            <!-- The action is activated, which means it will always be displayed.-->\n            <ng-container *ngIf=\"action?.activated\">\n                <!-- The button icon is provided by css 'background-url' attribute.-->\n                <button *ngIf=\"!action?.icon else active_icon\" (click)=\"triggerAction($event, action)\"\n                    matTooltip=\"{{action | actionDisplayer:'tooltip' |translate}}\"\n                    class=\"resultitem-list__actions {{action.id}}-onhover-action {{action.cssClass}}-onhover-action\">\n                    {{action | actionDisplayer:'label' | translate}}\n                </button>\n                <ng-template #active_icon>\n                    <!-- The icon is provided by the action itself.-->\n                    <mat-icon (click)=\"triggerAction($event, action)\" class=\"icon\"\n                        matTooltip=\"{{action | actionDisplayer:'tooltip' |translate}}\">\n                        {{action | actionDisplayer:'icon'}}\n                    </mat-icon>\n                </ng-template>\n            </ng-container>\n        </ng-container>\n    </ng-container>\n    <ng-container *ngFor=\"let action of actions\">\n        <ng-container *ngIf=\"action?.show === true\">\n            <!-- The action is not activated, which means it will appear only when an item is hovered.-->\n            <ng-container *ngIf=\"!action?.activated\">\n                <button *ngIf=\"!action?.icon else not_active_icon\" (click)=\"triggerAction($event, action)\"\n                    class=\"not_activated\" matTooltip=\"{{action | actionDisplayer:'tooltip' |translate}}\"\n                    class=\"resultitem-list__actions {{action.id}}-onhover-action {{action.cssClass}}-onhover-action\">\n                    {{action | actionDisplayer:'label' | translate}}\n                </button>\n                <ng-template #not_active_icon>\n                    <mat-icon (click)=\"triggerAction($event, action)\" class=\"icon not_activated\"\n                        matTooltip=\"{{action | actionDisplayer:'tooltip' |translate}}\">\n                        {{action | actionDisplayer:'icon'}}\n                    </mat-icon>\n                </ng-template>\n            </ng-container>\n        </ng-container>\n    </ng-container>\n\n</div>\n<!-- This sections is for actions that we display as text buttons instead of icon buttons-->\n<ng-template #textActions>\n    <ng-container *ngFor=\"let action of actions\">\n        <ng-container *ngIf=\"action?.show === true\">\n            <button mat-raised-button *ngIf=\"!action?.activated else activeButton\" class=\"text-action {{action.id}}-action {{action.cssClass}}-action\"\n                (click)=\"triggerAction($event, action)\" matTooltip=\"{{action | actionDisplayer:'tooltip' |translate}}\">\n                {{action | actionDisplayer:'label' | translate}}\n            </button>\n            <ng-template #activeButton>\n                <button mat-raised-button *ngIf=\"action?.activated\" (click)=\"triggerAction($event, action)\"\n                    class=\"resultdetaileditem__actions text-action {{action.id}}-action {{action.cssClass}}-action\" matTooltip=\"{{action | actionDisplayer:'tooltip' |translate}}\">\n                    {{action | actionDisplayer:'label' | translate}}\n                </button>\n            </ng-template>\n        </ng-container>\n    </ng-container>\n</ng-template>\n","/*\n * Licensed to Gisaïa under one or more contributor\n * license agreements. See the NOTICE.txt file distributed with\n * this work for additional information regarding copyright\n * ownership. Gisaïa licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport { Component, Input, OnInit, Output, ViewChild } from '@angular/core';\nimport { MatTooltip } from '@angular/material/tooltip';\nimport { Subject } from 'rxjs';\nimport { Item } from '../model/item';\nimport { ItemComponent } from '../model/itemComponent';\nimport { DetailedDataRetriever } from '../utils/detailed-data-retriever';\nimport { ThumbnailFitEnum } from '../utils/enumerations/thumbnailFitEnum';\nimport { Action, ElementIdentifier, ResultListOptions } from '../utils/results.utils';\nimport { marker } from '@colsen1991/ngx-translate-extract-marker';\n\n@Component({\n  selector: 'arlas-result-grid-tile',\n  templateUrl: './result-grid-tile.component.html',\n  styleUrls: ['./result-grid-tile.component.scss']\n})\nexport class ResultGridTileComponent extends ItemComponent implements OnInit {\n  /**\n   * @constant\n   */\n  public SHOW_IMAGE = marker('Click to show details');\n\n  @ViewChild('cellTooltip', { static: true })\n  public cellTooltip: MatTooltip;\n\n  /**\n   * @Input\n   * @description An object representing an Item .\n   */\n  @Input() public gridTile: Item;\n\n  /**\n   * @Input\n   * @description How to fit the thumbnail to the tile:\n   * - `height` fit the height of the thumbnail.\n   * - `width` fit the width of the thumbnail.\n   * - `contain` fit the wholethumbnail.\n   */\n   @Input() public thumbnailFit: ThumbnailFitEnum = ThumbnailFitEnum.contain;\n  /**\n   * @Input\n   * @description List of all selected items in the result-list.component.\n   * This component sets directly this list.\n   */\n  @Input() public selectedItems: Set<string>;\n  /**\n   * @Input\n   * @description A detailed-data-retriever object that implements\n   * DetailedDataRetriever interface.\n   */\n  @Input() public detailedDataRetriever: DetailedDataRetriever;\n\n  /**\n   * @Input : Angular\n   * @description An input to customize the resultlist behaviour\n   */\n  @Input() public options: ResultListOptions;\n\n  /**\n  * @Input\n  * @description Name of the id field.\n  */\n  @Input() public idFieldName: string;\n\n  /**\n   * @Input : Angular\n   * @description Map <itemId, Set<actionIds>> : for each item, gives the list of activated actions.\n  */\n  @Input() public activatedActionsPerItem: Map<string, Set<string>> = new Map<string, Set<string>>();\n  /**\n  * @Input\n  * @description Display or not big full info icon on the grid.\n  */\n  @Input() public  displayInfoIcon = false;\n\n\n\n  /**\n   * @Output\n   * @description Emits the event of applying the specified action on the specified item.\n   */\n  @Output() public actionOnItemEvent: Subject<{ action: Action; elementidentifier: ElementIdentifier; }> =\n    new Subject<{ action: Action; elementidentifier: ElementIdentifier; }>();\n\n\n  /**\n   * @Output\n   * @description Emits the list of selected items in result-list.component.\n   */\n  @Output() public selectedItemsEvent: Subject<Set<string>> = new Subject<Set<string>>();\n\n  /**\n   * @Output\n   * @description Emits the selected/unselected item.\n   * @deprecated\n   */\n  @Output() public selectedItemPositionEvent: Subject<Item> = new Subject<Item>();\n\n  /**\n   * @Output\n   * @description Emits the the item that it has been clicked on it.\n   */\n  @Output() public clickedOnItemEvent: Subject<Item> = new Subject<Item>();\n\n\n\n  public ThumbnailFitEnum = ThumbnailFitEnum;\n\n  public constructor() {\n    super();\n  }\n\n  /**\n   * Hides the cell's tooltip when the mouse is over the attachements buttons\n   * @param event mouseover event\n   */\n  public hideCellTooltip(event: Event) {\n    event.stopPropagation();\n    this.cellTooltip.hide();\n  }\n\n  /**\n   * Shows the cell's tooltip when the mouse is over the tile\n   */\n  public showCellTooltip() {\n    this.cellTooltip.show();\n  }\n\n  public ngOnInit() { }\n\n  // Update the list of the selected items\n  public setSelectedItem() {\n    super.setSelectedItem(this.gridTile.isChecked, this.gridTile.identifier, this.selectedItems);\n    this.gridTile.isChecked = !this.gridTile.isChecked;\n    // Emit to the result list the fact that this checkbox has changed in order to notify the correspondant one in list mode\n    this.selectedItemsEvent.next(this.selectedItems);\n  }\n\n  public determinateItem() {\n    this.gridTile.isChecked = true;\n    this.gridTile.isindeterminated = false;\n    this.selectedItems.add(this.gridTile.identifier);\n    // Emit to the result list the fact that this checkbox has changed in order to notify the correspondant one in grid mode\n    this.selectedItemsEvent.next(this.selectedItems);\n  }\n\n  public setClickedOnItem() {\n    this.retrieveAdditionalInfo(this.detailedDataRetriever, this.gridTile);\n    this.clickedOnItemEvent.next(this.gridTile);\n  }\n\n  public triggerActionOnItem(action: Action) {\n    this.actionOnItemEvent.next(\n      {\n        action: action,\n        elementidentifier: { idFieldName: this.idFieldName, idValue: this.gridTile.identifier }\n      }\n    );\n  }\n}\n","<div class=\"resultgrid\" >\n  <div class=\"resultgrid--container resultgrid--container-highlight-{{gridTile?.ishighLight}}\" color=\"primary\"[style.border-color]=\"gridTile?.color ? gridTile?.color : 'none'\">\n    <mat-icon *ngIf=\"gridTile?.isChecked && !gridTile?.isindeterminated\" (click)=\"setSelectedItem()\" class=\"primary resultgrid__icon_check mat-icon material-icons\">check_box</mat-icon>\n    <mat-icon *ngIf=\"!gridTile?.isChecked && !gridTile?.isindeterminated\" (click)=\"setSelectedItem()\" class=\"primary resultgrid__icon_check mat-icon material-icons\">check_box_outline_blank</mat-icon>\n    <mat-icon *ngIf=\"gridTile?.isindeterminated\" (click)=\"determinateItem()\" class=\"primary resultgrid__icon_check mat-icon material-icons\">indeterminate_check_box</mat-icon>\n    <div id=\"{{'grid-tile-' + gridTile?.identifier}}\" (click)=\"setClickedOnItem()\" (mouseover)=\"showCellTooltip()\" #cellTooltip=\"matTooltip\" matTooltip=\"{{SHOW_IMAGE | translate}}\"  class=\"resultgrid__img {{gridTile?.iconCssClass}}\">\n      <img [defaultImage]=\"options?.defautlImgUrl\" [lazyLoad]=\"gridTile?.urlThumbnail\"\n        [class.contain_thumbnail]=\"thumbnailFit === ThumbnailFitEnum.contain\" [class.height_thumbnail]=\"thumbnailFit === ThumbnailFitEnum.height\"\n        [class.width_thumbnail]=\"thumbnailFit === ThumbnailFitEnum.width\">\n      <div *ngIf=\"options?.showActionsOnhover\" class=\"actions\" (mouseover)=\"hideCellTooltip($event)\">\n        <arlas-result-actions \n          [activatedActionsPerItem]=\"activatedActionsPerItem\" \n          [detailedDataRetriever]=\"detailedDataRetriever\"\n          [item]=\"gridTile\"\n          [stopPropagation]=\"true\"\n          (actionOnItemEvent)=\"triggerActionOnItem($event)\" ></arlas-result-actions>\n\n      </div>\n      <mat-icon class=\"resultlist__md-grid-tile__selected--icon\" *ngIf=\"displayInfoIcon\">info_outline</mat-icon>\n    </div>\n    <div class=\"resultgrid__title-highlight-{{gridTile?.ishighLight}}\">\n      <span *ngIf=\"gridTile?.color\" matTooltip=\"{{gridTile?.tooltip}}\" class=\"tablet\" [style.background-color]=\"gridTile?.color\"></span>\n      <span class=\"resultgrid__title  resultgrid__title-{{gridTile?.iconCssClass}}\" > {{gridTile?.title}} </span>\n    </div>\n  </div>\n</div>\n","/*\n * Licensed to Gisaïa under one or more contributor\n * license agreements. See the NOTICE.txt file distributed with\n * this work for additional information regarding copyright\n * ownership. Gisaïa licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport { Injectable, Pipe, PipeTransform } from '@angular/core';\nimport { formatNumber } from '../../components/componentsUtils';\nimport { TranslateService } from '@ngx-translate/core';\n\n@Pipe({\n  name: 'formatNumber'\n})\n@Injectable()\nexport class FormatNumberPipe implements PipeTransform {\n\n  public constructor(private translate: TranslateService) {}\n  public transform(x, formatChar: string = ' '): any {\n    return formatNumber(x, this.translate.instant(formatChar));\n  }\n\n}\n","/*\n * Licensed to Gisaïa under one or more contributor\n * license agreements. See the NOTICE.txt file distributed with\n * this work for additional information regarding copyright\n * ownership. Gisaïa licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport { Component, Input, OnInit, Output } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { ArlasColorService } from '../../../services/color.generator.service';\nimport { Item } from '../model/item';\nimport { ItemComponent } from '../model/itemComponent';\nimport { DetailedDataRetriever } from '../utils/detailed-data-retriever';\nimport { CellBackgroundStyleEnum } from '../utils/enumerations/cellBackgroundStyleEnum';\nimport { Action, ElementIdentifier, ResultListOptions } from '../utils/results.utils';\nimport { TranslateService } from '@ngx-translate/core';\nimport { NUMBER_FORMAT_CHAR } from '../../componentsUtils';\nimport { marker } from '@colsen1991/ngx-translate-extract-marker';\n\n\n@Component({\n  selector: '[arlas-result-item]',\n  templateUrl: './result-item.component.html',\n  styleUrls: ['./result-item.component.css']\n})\nexport class ResultItemComponent extends ItemComponent implements OnInit {\n\n  /**\n   * @constant\n   */\n  public HIDE_DETAILS = marker('Hide details');\n  /**\n   * @constant\n   */\n  public SHOW_DETAILS = marker('Show details');\n  public CellBackgroundStyleEnum = CellBackgroundStyleEnum;\n\n  /**\n   * @Input : Angular\n   * @description An input to customize the resultlist behaviour\n   */\n  @Input() public options: ResultListOptions;\n  /**\n   * @Input\n   * @description An object representing an Item .\n   */\n  @Input() public rowItem: Item;\n  /**\n  * @Input\n  * @description Name of the id field.\n  */\n  @Input() public idFieldName: string;\n  /**\n   * @Input\n   * @description A detailed-data-retriever object that implements\n   * DetailedDataRetriever interface.\n   */\n  @Input() public detailedDataRetriever: DetailedDataRetriever;\n  /**\n   * @Input\n   * @description List of all selected items in the result-list.component.\n   * This component sets directly this list.\n   */\n  @Input() public selectedItems: Set<string>;\n\n  /**\n   * @Input : Angular\n   * @description List of [key, color] couples that associates a hex color to each key\n   */\n  @Input() public keysToColors: Array<[string, string]>;\n\n  /**\n   * @Input : Angular\n   * @description Knowing that saturation scale is [0, 1], `colorsSaturationWeight` is a\n   * factor (between 0 and 1) that tightens this scale to [(1-colorsSaturationWeight), 1].\n   * Therefore saturation of generated colors will be within this tightened scale.\n   */\n  @Input() public colorsSaturationWeight = 1 / 2;\n\n  /**\n   * @Input : Angular\n   * @description Whether to allow colorizing the cells of the item (the row) according to the terms displayed\n   */\n  @Input() public useColorService = false;\n\n  /**\n   * @Input : Angular\n   * @description The way the cell will be colorized: filled or outlined\n   */\n  @Input() public cellBackgroundStyle: CellBackgroundStyleEnum = CellBackgroundStyleEnum.filled;\n\n\n  /**\n   * @Input : Angular\n   * @description Map <itemId, Set<actionIds>> : for each item, gives the list of activated actions.\n  */\n  @Input() public activatedActionsPerItem: Map<string, Set<string>> = new Map<string, Set<string>>();\n  @Input() public tableWidth: number;\n  /**\n   * @Output\n   * @description Emits the list of selected items in result-list.component.\n   */\n  @Output() public selectedItemsEvent: Subject<Set<string>> = new Subject<Set<string>>();\n\n  /**\n   * @Output\n   * @description Emits the event of applying the specified action on the specified item.\n   */\n  @Output() public actionOnItemEvent: Subject<{ action: Action; elementidentifier: ElementIdentifier; }> =\n    new Subject<{ action: Action; elementidentifier: ElementIdentifier; }>();\n\n  /**\n   * @Output\n   * @description Emits the selected/unselected item.\n   * @deprecated\n   */\n  @Output() public selectedItemPositionEvent: Subject<Item> = new Subject<Item>();\n\n  /**\n   * @Output\n   * @description Emits the border line style depending on the item's toggle state.\n   */\n  @Output() public borderStyleEvent: Subject<string> = new Subject<string>();\n\n  public isDetailToggled = false;\n  public detailedData = '';\n  public actions;\n  public borderStyle = 'solid';\n  public colors = {};\n  protected identifier: string;\n\n  public NUMBER_FORMAT_CHAR = NUMBER_FORMAT_CHAR;\n\n  public constructor(public colorService: ArlasColorService, public translate: TranslateService) {\n    super();\n    this.colorService.changekeysToColors$.subscribe(() => this.updateColors());\n  }\n\n  public ngOnInit() {\n    this.identifier = this.rowItem?.identifier;\n    this.updateColors();\n\n  }\n\n  // Detailed data is retrieved wheb the row is toggled for the first time\n  public toggle() {\n    if (this.rowItem.isDetailToggled === false) {\n      this.retrieveAdditionalInfo(this.detailedDataRetriever, this.rowItem);\n      this.borderStyle = 'dashed';\n    } else {\n      this.borderStyle = 'solid';\n    }\n    this.borderStyleEvent.next(this.borderStyle);\n    this.rowItem.isDetailToggled = !this.rowItem.isDetailToggled;\n\n  }\n\n  // Update the list of the selected items\n  public setSelectedItem() {\n    super.setSelectedItem(this.rowItem.isChecked, this.identifier, this.selectedItems);\n    this.rowItem.isChecked = !this.rowItem.isChecked;\n    // Emit to the result list the fact that this checkbox has changed in order to notify the correspondant one in grid mode\n    this.selectedItemsEvent.next(this.selectedItems);\n  }\n  public determinateItem() {\n    this.rowItem.isChecked = true;\n    this.rowItem.isindeterminated = false;\n    this.selectedItems.add(this.identifier);\n    // Emit to the result list the fact that this checkbox has changed in order to notify the correspondant one in grid mode\n    this.selectedItemsEvent.next(this.selectedItems);\n  }\n\n  public getTextColor(key): string {\n    if (key !== undefined && key !== null) {\n      return this.colorService.getTextColor(key.toString());\n    } else {\n      return '';\n    }\n  }\n\n  public triggerActionOnItem(action: Action) {\n    this.actionOnItemEvent.next({ action: action, elementidentifier: { idFieldName: this.idFieldName, idValue: this.rowItem.identifier } });\n  }\n\n  private updateColors() {\n    const newColor = {};\n    this.rowItem?.columns.forEach(c => {\n      if (c.useColorService){\n        const key = this.rowItem?.itemData.get(c.fieldName);\n        if (key !== undefined && key !== null) {\n          newColor[key.toString()] = {};\n          newColor[key.toString()]['color'] = this.getColor(key);\n          newColor[key.toString()]['textColor'] = this.getTextColor(key);\n\n        }\n      }\n    });\n    this.colors = newColor;\n  }\n\n  private getColor(key): string {\n    if (key !== undefined && key !== null) {\n      return this.colorService.getColor(key.toString(), this.keysToColors, this.colorsSaturationWeight);\n    } else {\n      return '';\n    }\n  }\n\n\n\n}\n","  <ng-container *ngFor=\"let column of rowItem?.columns;\">\n    <!-- If the column corresponds to an id field, then we put the checkbox that enables to check the item-->\n    <td *ngIf=\"column.isIdField\" class=\"resultitem__cell\" [style.max-width.px]=\"column.width\" [style.min-width.px]=\"column.width\" >\n      <div class=\"checkbox\">\n        <mat-icon *ngIf=\"rowItem?.isChecked && !rowItem?.isindeterminated\"  (click)=\"setSelectedItem()\" class=\"primary resultitem__icon_check mat-icon material-icons\">check_box</mat-icon>\n        <mat-icon *ngIf=\"!rowItem?.isChecked && !rowItem?.isindeterminated\" (click)=\"setSelectedItem()\" class=\"primary resultitem__icon_check mat-icon material-icons\">check_box_outline_blank</mat-icon>\n        <mat-icon *ngIf=\"rowItem?.isindeterminated\" (click)=\"determinateItem()\" class=\"primary resultitem__icon_check mat-icon material-icons\">indeterminate_check_box</mat-icon>\n      </div>\n    </td>\n\n    <!-- If the column is not an id field nor a toggle, then we put the value of the corespondant field-->\n    <td *ngIf=\"!column.isIdField && !column.isToggleField\" class=\"resultitem__cell resultitem__cell__{{column.fieldName}}\"\n          [style.max-width.px]=\"column.width\"\n          [style.min-width.px]=\"column.width\">\n      <label *ngIf=\"(!useColorService || !column.useColorService || cellBackgroundStyle === undefined); else labelModeIsDefined\" class=\"resultitem__cell--label resultitem__cell--label__{{column.fieldName}}  resultitem__cell--label__{{rowItem?.itemData.get(column.fieldName)}}\">\n        {{rowItem?.itemData.get(column.fieldName) | formatNumber:NUMBER_FORMAT_CHAR}}{{column.dataType}}\n      </label>\n      <ng-template #labelModeIsDefined>\n        <label *ngIf=\"cellBackgroundStyle === CellBackgroundStyleEnum.filled && column.useColorService\" class=\"resultitem__cell--label resultitem__cell--label__filled\"\n          [style.background-color]=\"!!colors[rowItem?.itemData.get(column.fieldName)] ? colors[rowItem?.itemData.get(column.fieldName)]['color'] : 'transparent'\" \n          [style.color]=\"!!colors[rowItem?.itemData.get(column.fieldName)] ?  colors[rowItem?.itemData.get(column.fieldName)]['textColor'] : 'black'\">\n          {{rowItem?.itemData.get(column.fieldName) | formatNumber:NUMBER_FORMAT_CHAR}}{{column.dataType}}\n        </label>\n        <label *ngIf=\"cellBackgroundStyle === CellBackgroundStyleEnum.outlined && column.useColorService && !!rowItem?.itemData.get(column.fieldName) && rowItem?.itemData.get(column.fieldName) !== ''\" class=\"resultitem__cell--label resultitem__cell--label__outlined\"\n          [style.border-color]=\"!!colors[rowItem?.itemData.get(column.fieldName)] ? colors[rowItem?.itemData.get(column.fieldName)]['color'] : 'black'\"  >\n          {{rowItem?.itemData.get(column.fieldName) | formatNumber:NUMBER_FORMAT_CHAR}}{{column.dataType}}\n        </label>\n      </ng-template>\n    </td>\n\n    <!-- If the column is a toggle, then we put the + button that enables to fetch detailed data of the item-->\n    <td *ngIf=\"column.isToggleField\" class=\"resultitem__cell toggle\" [style.max-width.px]=\"column.width\" [style.min-width.px]=\"column.width\">\n      <div *ngIf=\"options.showActionsOnhover\" class=\"actions\">\n        <arlas-result-actions\n          [item]=\"rowItem\"\n          [activatedActionsPerItem]=\"activatedActionsPerItem\"\n          [detailedDataRetriever]=\"detailedDataRetriever\"\n          [width]=\"tableWidth * 80 / 100\"\n          (actionOnItemEvent)=\"triggerActionOnItem($event)\"></arlas-result-actions>\n      </div>\n      <mat-icon id= \"{{'open-detail-' + rowItem?.identifier}}\" matTooltip=\"{{SHOW_DETAILS | translate}}\" class=\"resultitem__cell__toggle--icon\" *ngIf=\"!rowItem?.isDetailToggled; else cancel_toggle\" (click) = \"toggle()\">{{options.showDetailIconName}}</mat-icon>\n      <ng-template #cancel_toggle>\n        <mat-icon id= \"{{'close-detail-' + rowItem?.identifier}}\"   matTooltip=\"{{HIDE_DETAILS | translate}}\" class=\"resultitem__cell__toggle--icon\" (click) = \"toggle()\">{{options.hideDetailIconName}}</mat-icon>\n      </ng-template>\n    </td>\n\n  </ng-container>\n\n\n\n","/*\n * Licensed to Gisaïa under one or more contributor\n * license agreements. See the NOTICE.txt file distributed with\n * this work for additional information regarding copyright\n * ownership. Gisaïa licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport { Injectable, Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'replace'\n})\n@Injectable()\nexport class ReplacePipe implements PipeTransform {\n\n  public transform(value: string, searchValue: string, replaceValue: string): string {\n    if (!!value) {\n      return value.replace(searchValue, replaceValue);\n    }\n    return value;\n  }\n\n}\n","/*\n * Licensed to Gisaïa under one or more contributor\n * license agreements. See the NOTICE.txt file distributed with\n * this work for additional information regarding copyright\n * ownership. Gisaïa licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'getAttachmentUrl'\n})\nexport class GetAttachmentUrlPipe implements PipeTransform {\n\n  public transform(value: string): string {\n    if (value && !value.startsWith('http')) {\n      return 'https://' + value;\n    }\n    return value;\n  }\n\n}\n","/*\n * Licensed to Gisaïa under one or more contributor\n * license agreements. See the NOTICE.txt file distributed with\n * this work for additional information regarding copyright\n * ownership. Gisaïa licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport { Component, Input, OnInit, Output } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport { NUMBER_FORMAT_CHAR } from '../../componentsUtils';\nimport { Subject } from 'rxjs';\nimport { Item } from '../model/item';\nimport { Action, Attachment, ElementIdentifier } from '../utils/results.utils';\nimport { DetailedDataRetriever } from '../utils/detailed-data-retriever';\n\n@Component({\n  selector: '[arlas-result-detailed-item]',\n  templateUrl: './result-detailed-item.component.html',\n  styleUrls: ['./result-detailed-item.component.scss']\n})\nexport class ResultDetailedItemComponent implements OnInit {\n  /**\n   * @Input\n   * @description Number of columns in the parent table so that this component occupies the entire line.\n   */\n  @Input() public detailColspan: number;\n  /**\n   * @Input\n   * @description Name of the id field.\n   */\n  @Input() public idFieldName: string;\n\n\n  @Input() public containerType: string;\n\n  /**\n   * @Input\n   * @description An object representing an Item and that contains the detailed data.\n   */\n  @Input() public rowItem: Item;\n\n  /**\n   * @Input\n   * @description Whether display group with no detail.\n   */\n  @Input() public showEmptyGroup = false;\n\n  /**\n   * @Output\n   * @description Emits the event of applying the specified action on the specified item.\n   */\n  @Output() public actionOnItemEvent: Subject<{ action: Action; elementidentifier: ElementIdentifier; }> =\n    new Subject<{ action: Action; elementidentifier: ElementIdentifier; }>();\n\n    /**\n   * @Input\n   * @description A detailed-data-retriever object that implements\n   * DetailedDataRetriever interface.\n   */\n  @Input() public detailedDataRetriever: DetailedDataRetriever;\n  /**\n   * @Input : Angular\n   * @description List of active actions per item.\n  */\n  @Input() public activatedActionsPerItem: Map<string, Set<string>> = new Map<string, Set<string>>();\n\n  public NUMBER_FORMAT_CHAR = NUMBER_FORMAT_CHAR;\n\n\n  public constructor(public translate: TranslateService) { }\n\n  public ngOnInit() {}\n\n  // Emits the action on this ResultDetailedItem to the parent (ResultList)\n  public triggerActionOnItem(action: Action) {\n    this.actionOnItemEvent.next({ action: action, elementidentifier: { idFieldName: this.idFieldName, idValue: this.rowItem.identifier } });\n  }\n\n  public getGroups() {\n    return (this.showEmptyGroup) ? (this.rowItem?.itemDetailedData) : (this.rowItem?.itemDetailedData.filter(d => d.details.length > 0));\n  }\n\n  public getAttachmentLabel(attachment: Attachment, index: number): string {\n    if (attachment.label && attachment.label.length > 0) {\n      return attachment.label;\n    } else {\n      return this.translate.instant('Link') + ' ' + index;\n    }\n  }\n\n  public getAttachmentDescription(attachment: Attachment): string {\n    if (attachment.description && attachment.description.length > 0) {\n      return attachment.description;\n    } else {\n      return attachment.url;\n    }\n  }\n}\n","<td class=\"checkboxcell\" [colSpan]=\"1\">\n</td>\n<td [class.grid-container]=\"containerType === 'grid'\" [colSpan]=\"detailColspan - 1\">\n  <div class=\"details-title\" *ngIf=\"rowItem?.detailsTitleEnabled\">{{rowItem?.detailsTitle}}</div>\n  <div class=\"resultdetaileditem\">\n    <ng-container *ngFor=\"let group of rowItem?.itemDetailedData\">\n      <div class=\"resultdetaileditem--group\" *ngIf=\"showEmptyGroup || group.details.length > 0\">\n        <span class=\"resultdetaileditem--group-title {{group.group | replace:' ':'-' | lowercase}}-item-detail\">\n          {{group.group | translate}}\n        </span>\n        <span *ngFor=\"let detail of group.details\" class=\"resultdetaileditem--item {{detail.key}}-item-detail\">\n          <span class=\"resultdetaileditem--item--key\">{{detail.key | translate}}</span>\n          <span class=\"resultdetaileditem--item--value\">{{detail.value | formatNumber:NUMBER_FORMAT_CHAR}}</span>\n        </span>\n      </div>\n    </ng-container>\n    <arlas-result-actions\n          [activatedActionsPerItem]=\"activatedActionsPerItem\"\n          [detailedDataRetriever]=\"detailedDataRetriever\"\n          [item]=\"rowItem\"\n          [mode]=\"'text'\"\n          (actionOnItemEvent)=\"triggerActionOnItem($event)\" ></arlas-result-actions>\n    <span class=\"result-attachments\" *ngIf=\"rowItem?.attachments && rowItem?.attachments.length > 0\">\n      <div class=\"result-attachments--title\">{{'Attachments' | translate}}</div>\n      <span class=\"result-attachments--item\" *ngFor=\"let att of rowItem?.attachments; index as i\">\n        <a class=\"result-attachments--item--link\" href=\"{{att.url | getAttachmentUrl}}\"\n          matTooltip=\"{{getAttachmentDescription(att)}}\" [matTooltipPosition]=\"'after'\" target=\"_blank\">\n          <mat-icon *ngIf=\"att.icon\" class=\"result-attachments--item--link--icon\">{{att.icon}}</mat-icon>\n          <span class=\"result-attachments--item--link--label\"> {{getAttachmentLabel(att, i + 1)}}</span>\n        </a>\n      </span>\n    </span>\n  </div>\n\n</td>\n","/*\n * Licensed to Gisaïa under one or more contributor\n * license agreements. See the NOTICE.txt file distributed with\n * this work for additional information regarding copyright\n * ownership. Gisaïa licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport {\n  ChangeDetectorRef, Component,\n  ElementRef, Input, OnChanges, OnDestroy, Output, SimpleChanges, ViewChild\n} from '@angular/core';\nimport { FullScreenViewer, ImageViewer } from 'iv-viewer';\nimport { Subject } from 'rxjs';\nimport { Item } from '../model/item';\nimport { Action, ElementIdentifier, PROTECTED_IMAGE_HEADER } from '../utils/results.utils';\nimport { HttpClient } from '@angular/common/http';\nimport { marker } from '@colsen1991/ngx-translate-extract-marker';\nimport { DetailedDataRetriever } from '../utils/detailed-data-retriever';\n\n@Component({\n  selector: 'arlas-result-detailed-grid',\n  templateUrl: './result-detailed-grid.component.html',\n  styleUrls: ['./result-detailed-grid.component.scss']\n})\nexport class ResultDetailedGridComponent implements OnChanges, OnDestroy {\n  /**\n   * @constant\n   */\n  public SHOW_DETAILS = marker('Show details');\n  /**\n   * @constant\n   */\n  public VIEW_IMAGE = marker('View in full screen');\n  /**\n   * @constant\n   */\n  public SHOW_IMAGE = marker('Show image');\n  /**\n   * @constant\n   */\n  public CLOSE_DETAILS = marker('Close details');\n  private fullScreenViewer = new FullScreenViewer();\n\n  /**\n   * @Input\n   * @description An object representing an Item and that contains the detailed data.\n   */\n  @Input() public gridTile: Item;\n  /**\n   * @Input\n   * @description Width of the detailed grid.\n   */\n  @Input() public detailWidth: number;\n  /**\n   * @Input\n   * @description Height of the detailed grid.\n   */\n  @Input() public detailHeight: number;\n  /**\n   * @Input\n   * @description Name of the id field.\n   */\n  @Input() public idFieldName: string;\n  /**\n   * @Input\n   * @description Whether the detail is visible.\n   */\n  @Input() public isDetailShowed: boolean;\n  /**\n   * @Input\n   * @description Whether display group with no detail.\n   */\n  @Input() public showEmptyGroup = false;\n\n  /**\n   * @Input : Angular\n   * @description Whether to use a http request to query detailed image instead of relying on img tag internal mechanism.\n   */\n  @Input() public useHttp = false;\n\n  /**\n   * @Input : Angular\n   * @description List of active actions per item.\n  */\n  @Input() public activatedActionsPerItem: Map<string, Set<string>> = new Map<string, Set<string>>();\n\n  /**\n  * @Input\n  * @description A detailed-data-retriever object that implements\n  * DetailedDataRetriever interface.\n  */\n  @Input() public detailedDataRetriever: DetailedDataRetriever;\n  /**\n   * @Output\n   * @description Emits the event of applying the specified action on the specified item.\n   */\n\n  @Output() public actionOnItemEvent: Subject<{ action: Action; elementidentifier: ElementIdentifier; }> =\n    new Subject<{ action: Action; elementidentifier: ElementIdentifier; }>();\n  /**\n * @Output\n * @description Emits the event of closing details.\n */\n  @Output() public closeDetail: Subject<boolean> = new Subject();\n\n  @ViewChild('image_detail', { static: false }) public imageViewer: ElementRef;\n\n\n  public isDetailedDataShowed = false;\n\n  /**\n   * @description The image source to display. Either is an url or the content of the image.\n   */\n  public imgSrc: string | ArrayBuffer;\n\n  /**\n   * @description Whether the request for the image is being processed\n   */\n  public isLoading = false;\n\n  /**\n   * @description In the case of multiple images, indicates which one is selected\n   */\n  public currentImageIndex = 0;\n\n  /**\n   * @description Whether the viewer is in full screen mode\n   */\n  public isFullScreen = false;\n\n  private viewer;\n\n  public constructor(\n    private changeDetectorRef: ChangeDetectorRef,\n    private http: HttpClient\n  ) { }\n\n  public ngOnDestroy(): void {\n    this.destroyViewer(true);\n  }\n\n  public ngOnChanges(changes: SimpleChanges) {\n    if (changes['gridTile']) {\n      if (this.viewer) {\n        this.viewer = this.viewer.destroy();\n      }\n      this.isFullScreen = false;\n      this.currentImageIndex = 0;\n      this.getImage();\n    }\n  }\n\n  private getImage() {\n    this.imgSrc = undefined;\n    if (!this.gridTile || (this.gridTile && (!this.gridTile.urlImages || this.gridTile.urlImages.length === 0))) {\n      return;\n    }\n\n    if (this.useHttp) {\n      this.isLoading = true;\n      this.http.get(this.gridTile.urlImages[this.currentImageIndex], { headers: { [PROTECTED_IMAGE_HEADER]: 'true' }, responseType: 'blob' })\n        .subscribe({\n          next: (image: Blob) => {\n            const reader = new FileReader();\n            reader.addEventListener('load', () => {\n              this.imgSrc = reader.result;\n              this.gridTile.imageEnabled = true;\n              this.isLoading = false;\n              this.resetViewer();\n            }, false);\n            if (image) {\n              reader.readAsDataURL(image);\n            }\n          }, error: (err) => {\n            console.error(err);\n            this.isLoading = false;\n          }\n        });\n    } else {\n      this.imgSrc = this.gridTile.urlImages[this.currentImageIndex];\n      this.gridTile.imageEnabled = true;\n      this.resetViewer();\n    }\n  }\n\n  private resetViewer() {\n    if (this.viewer) {\n      this.viewer = this.viewer.destroy();\n    }\n    setTimeout(() => {\n      if (this.isFullScreen) {\n        this.fullScreenViewer.show(this.imgSrc);\n      } else {\n        if (!!this.imageViewer && !this.viewer) {\n          this.viewer = new ImageViewer(this.imageViewer.nativeElement);\n        }\n      }\n    }, 0);\n  }\n\n  public destroyViewer(isComponentDestroy?: boolean): void {\n    if (this.viewer) {\n      this.viewer = this.viewer.destroy();\n    }\n    if (isComponentDestroy && this.fullScreenViewer) {\n      this.fullScreenViewer.destroy();\n    }\n    // Add a delay to allow for the viewer to be destroyed properly\n    // before removing it due to visibility rules in the template\n    setTimeout(() => {\n      this.imgSrc = undefined;\n    }, 0);\n  }\n\n  public showHideDetailedData() {\n    this.isDetailedDataShowed = !this.isDetailedDataShowed;\n    this.changeDetectorRef.detectChanges();\n    this.resetViewer();\n  }\n\n  public closeDetailedData() {\n    this.isDetailShowed = false;\n    this.closeDetail.next(true);\n  }\n\n  // Emits the action on this ResultDetailedItem to the parent (ResultList)\n  public triggerActionOnItem(actionOnItem: { action: Action; elementidentifier: ElementIdentifier; }): void {\n    this.actionOnItemEvent.next(actionOnItem);\n  }\n\n  public showOverlay() {\n    this.isFullScreen = true;\n    this.resetViewer();\n\n    let viewerContainer: HTMLElement | undefined;\n    const fullScreenContainer = document.querySelector('.iv-fullscreen-container');\n\n    const actionsInfos = document.getElementsByClassName('viewer_actions-infos');\n    if (!!actionsInfos && !!actionsInfos[0]) {\n      viewerContainer = actionsInfos[0].parentElement;\n      const elements = actionsInfos.length;\n      for (let i = 0; i < elements; i++) {\n        // The element is removed from the list once retrieved\n        fullScreenContainer.appendChild(actionsInfos.item(0));\n      }\n    }\n\n    document.querySelector('.iv-fullscreen-close').addEventListener('click', () => {\n      this.isFullScreen = false;\n      if (viewerContainer) {\n        const actionsInfosFullScreen = fullScreenContainer.getElementsByClassName('viewer_actions-infos');\n        const elements = actionsInfosFullScreen.length;\n        for (let i = 0; i < elements; i++) {\n          // The element is removed from the list once retrieved\n          viewerContainer.appendChild(actionsInfosFullScreen.item(0));\n        }\n      }\n      this.resetViewer();\n    });\n  }\n\n  public onPrevious() {\n    this.currentImageIndex -= 1;\n    if (this.currentImageIndex < 0) {\n      this.currentImageIndex = this.gridTile.urlImages.length - 1;\n    }\n    this.getImage();\n  }\n\n  public onNext() {\n    this.currentImageIndex += 1;\n    if (this.currentImageIndex >= this.gridTile.urlImages.length) {\n      this.currentImageIndex = 0;\n    }\n    this.getImage();\n  }\n}\n","<div class=\"resultgrid\" *ngIf=isDetailShowed>\n  <div class=\"resultgrid--container\">\n    <div [hidden]=\"isDetailedDataShowed\">\n      <div class=\"resultgrid__img\" [style.height.px]=\"detailHeight\" [style.width.px]=\"detailWidth\">\n        <img class=\"image_view\" #image_detail *ngIf=\"gridTile.imageEnabled\" src=\"{{imgSrc}}\" (error)=\"destroyViewer()\">\n        <img *ngIf=\"(!gridTile.imageEnabled || !imgSrc) && !isLoading\" src=\"{{noViewImg}}\">\n        <mat-progress-spinner *ngIf=\"isLoading\" [color]=\"'accent'\" [diameter]=\"detailHeight < detailWidth ? detailHeight / 2 : detailWidth / 2\" [mode]=\"'indeterminate'\"></mat-progress-spinner>\n      </div>\n\n      <button mat-icon-button class=\"viewer_actions-infos navigate-button previous\" *ngIf=\"gridTile.urlImages && gridTile.urlImages.length > 1\" matTooltip=\"{{'Previous image' | translate}}\" (click)=\"onPrevious()\">\n        <mat-icon>keyboard_arrow_left</mat-icon>\n      </button>\n      <div class=\"viewer_actions-infos description\" *ngIf=\"gridTile.descriptions\">{{ gridTile.descriptions[currentImageIndex] }}</div>\n      <button mat-icon-button class=\"viewer_actions-infos navigate-button next\" *ngIf=\"gridTile.urlImages && gridTile.urlImages.length > 1\" matTooltip=\"{{'Next image' | translate}}\" (click)=\"onNext()\">\n        <mat-icon>keyboard_arrow_right</mat-icon>\n      </button>\n\n      <div class=\"resultgrid__info-button\">\n        <button [disabled]=\"!gridTile.imageEnabled || isLoading\" id=\"view_image_gridmode_btn\" matTooltip=\"{{VIEW_IMAGE | translate}}\"\n          class=\"resultgrid__info-view-button\" mat-mini-fab (click)=\"showOverlay()\">\n          <mat-icon class=\"resultgrid__info_outline\">fit_screen</mat-icon>\n        </button>\n        <button id=\"show_details_gridmode_btn\" matTooltip=\"{{SHOW_DETAILS | translate}}\" class=\"resultgrid__info-show-button\" mat-mini-fab color=\"primary\" (click)=\"showHideDetailedData()\">\n          <mat-icon class=\"resultgrid__info_outline\">info_outline</mat-icon>\n        </button>\n        <button id=\"close_details_gridmode_btn\" matTooltip=\"{{CLOSE_DETAILS | translate}}\" class=\"resultgrid__info-close-button\" mat-mini-fab color=\"primary\" (click)=\"closeDetailedData()\">\n            <mat-icon class=\"resultgrid__close\">close</mat-icon>\n        </button>\n      </div>\n    </div>\n\n    <div [hidden]=\"!isDetailedDataShowed\">\n      <div class=\"resultgrid__info-button\">\n        <button id=\"show_image_gridmode_btn\" matTooltip=\"{{SHOW_IMAGE | translate}}\" class=\"resultgrid__info-show-button\" mat-mini-fab color=\"primary\" (click)=\"showHideDetailedData()\">\n          <mat-icon class=\"resultgrid__image\">image</mat-icon>\n        </button>\n        <button id=\"close_details_gridmode_btn\" matTooltip=\"{{CLOSE_DETAILS | translate}}\" class=\"resultgrid__info-close-button\" mat-mini-fab color=\"primary\" (click)=\"closeDetailedData()\">\n          <mat-icon class=\"resultgrid__close\">close</mat-icon>\n        </button>\n      </div>\n      <div arlas-result-detailed-item class=\"resultgrid--detailed-item\"\n        [rowItem]=\"gridTile\" [containerType]=\"'grid'\" [idFieldName]=\"idFieldName\"\n        [detailedDataRetriever]=\"detailedDataRetriever\"\n        [activatedActionsPerItem]=\"activatedActionsPerItem\"\n        [style.width.px]=\"detailWidth\" [style.height.px]=\"detailHeight\"\n        [showEmptyGroup]= \"showEmptyGroup\" (actionOnItemEvent)=\"triggerActionOnItem($event)\">\n      </div>\n    </div>\n  </div>\n</div>\n","/*\n * Licensed to Gisaïa under one or more contributor\n * license agreements. See the NOTICE.txt file distributed with\n * this work for additional information regarding copyright\n * ownership. Gisaïa licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport { Component, Input, OnChanges, OnInit, Output, SimpleChanges } from '@angular/core';\nimport { MatSelectChange } from '@angular/material/select';\nimport { Subject } from 'rxjs';\nimport { Column } from '../model/column';\nimport { ItemDataType } from '../utils/results.utils';\n\n@Component({\n  selector: '[arlas-result-filter]',\n  templateUrl: './result-filter.component.html',\n  styleUrls: ['./result-filter.component.css']\n})\nexport class ResultFilterComponent implements OnInit, OnChanges {\n\n  /**\n   * @Input\n   * @description The column to which the filter is applied.\n   */\n  @Input() public column: Column;\n  /**\n   * @Input\n   * @description A map of columns to filter : key = column (or field) name & value = field value.\n   * This components sets directly this map.\n   */\n  @Input() public filtersMap: Map<string, ItemDataType> = new Map();\n  /**\n   * @Input\n   * @description The filter value.\n   */\n  @Input() public inputValue: string;\n  /**\n   * @Input\n   * @description The values of dropdown list.\n   */\n  @Input() public dropdownValues: Array<string> = new Array<string>();\n  /**\n   * @Output\n   * @description Emits the map of filtered columns and the filters values (fieldName-fieldValue map).\n   */\n  @Output() public setFiltersEvent: Subject<Map<string, ItemDataType>> = new Subject();\n\n  /**\n   * @Output\n   * @description Emits the column on change to notify the main component.\n   */\n  @Output() public columnChanged: Subject<Column> = new Subject<Column>();\n\n  public selected: Array<any> = new Array<any>();\n\n  public constructor() { }\n\n  public ngOnInit() {\n  }\n  public ngOnChanges(changes: SimpleChanges): void {\n    if (changes['filtersMap'] !== undefined) {\n      if (changes['filtersMap'].currentValue !== undefined) {\n        if (changes['filtersMap'].currentValue !== changes['filtersMap'].previousValue) {\n          if (changes['filtersMap'].currentValue.get(this.column.fieldName) !== undefined) {\n            if (this.inputValue !== changes['filtersMap'].currentValue.get(this.column.fieldName)) {\n              this.inputValue = changes['filtersMap'].currentValue.get(this.column.fieldName);\n              this.selected = new Array<any>();\n              this.inputValue.split(',').forEach(v => this.selected.push(v));\n            }\n          } else {\n            this.inputValue = '';\n            this.selected = new Array<any>();\n          }\n        }\n      }\n    }\n  }\n\n  public setFilterOnKeyEnter(event) {\n    event.target.blur();\n  }\n\n\n\n  // Update the map of the filtered fields. If a filter is empty, the correspondant field is removed from the map\n  public setFilter() {\n    if (this.inputValue === undefined || this.inputValue === '' || this.inputValue === null) {\n      if (this.filtersMap.has(this.column.fieldName)) {\n        this.filtersMap.delete(this.column.fieldName);\n        this.setFiltersEvent.next(this.filtersMap);\n        this.columnChanged.next(this.column);\n      }\n    } else {\n      this.filtersMap.set(this.column.fieldName, this.inputValue);\n      this.setFiltersEvent.next(this.filtersMap);\n      this.columnChanged.next(this.column);\n    }\n  }\n\n  public selectionChange(event: MatSelectChange) {\n    if (event.value.length > 0) {\n      this.filtersMap.set(event.source.id, event.value.join(','));\n      this.setFiltersEvent.next(this.filtersMap);\n      this.columnChanged.next(this.column);\n    } else {\n      if (this.filtersMap.has(event.source.id)) {\n        this.filtersMap.delete(event.source.id);\n        this.setFiltersEvent.next(this.filtersMap);\n        this.columnChanged.next(this.column);\n      }\n    }\n  }\n}\n","<input *ngIf=\"!column?.isIdField&&(dropdownValues?.length==0||dropdownValues==null)\" type=\"text\" class=\"form-control resultlist__header--filters resultlist__header--filters__{{column?.fieldName}}\" (blur)=\"setFilter()\" (keyup.enter)=\"setFilterOnKeyEnter($event)\"\n    [(ngModel)]=\"inputValue\">\n\n<mat-form-field *ngIf=\"!column?.isIdField&&dropdownValues?.length>0\" \n    class=\"form-control resultlist__header--filters resultlist__header--filters--dropdown resultlist__header--filters__{{column?.fieldName}}\" \n    [style.width.px]=\"column?.width-10\">\n    <mat-select [id]=\"column?.fieldName\" placeholder=\"\"  multiple class=\"resultlist__dropdown-select\" [style.width.px]=\"column?.width-20\" (selectionChange)=\"selectionChange($event)\" [value]=\"selected\">\n        <mat-option  class=\"resultlist__dropdown-option\" *ngFor=\"let value of dropdownValues\"  [value]=\"value\">{{value}}</mat-option>\n    </mat-select>\n</mat-form-field>\n","/*\n * Licensed to Gisaïa under one or more contributor\n * license agreements. See the NOTICE.txt file distributed with\n * this work for additional information regarding copyright\n * ownership. Gisaïa licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport { Directive, ElementRef, HostListener, Input, OnChanges, Output, SimpleChanges } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { Item } from '../model/item';\nimport { ModeEnum } from '../utils/enumerations/modeEnum';\nimport { ItemDataType } from '../utils/results.utils';\n\n@Directive({\n  selector: '[arlasResultScroll]',\n})\n\nexport class ResultScrollDirective implements OnChanges {\n  @Input() public items: Array<Item>;\n  @Input() public nbLinesBeforeFetch: number;\n  @Input() public nbGridColumns: number;\n  @Input() public resultMode: ModeEnum;\n  @Input() public fetchState: { endListUp: true; endListDown: false; };\n  @Input() public scrollOptions: { maintainScrollUpPosition: boolean; maintainScrollDownPosition: boolean; nbLines: number; };\n\n  @Output() public nextDataEvent: Subject<Map<string, ItemDataType>> = new Subject();\n  @Output() public previousDataEvent: Subject<Map<string, ItemDataType>> = new Subject();\n  @Output() public visibleItems: Subject<Array<Item>> = new Subject<Array<Item>>();\n\n  private lastScrollTop = 0;\n  private previousFirstId: string = null;\n  private previousLastId: string = null;\n  private tbodyHeight;\n  private scrolledProgramatically = false;\n  private nbScrolledLines;\n  private top;\n  private height;\n  public constructor(private el: ElementRef) { }\n\n  public ngOnChanges(changes: SimpleChanges) {\n    if (changes['items']) {\n      /** New data is loaded : we reset all the variables */\n      this.lastScrollTop = 0;\n      this.previousFirstId = null;\n      this.previousLastId = null;\n      /** Repositioning the scroll bar to the top*/\n      this.el.nativeElement.scrollTop = 0;\n    }\n    if (changes['resultMode']) {\n      this.adjustScrollToMode();\n    }\n\n    if (changes['scrollOptions']) {\n      if (this.scrollOptions.maintainScrollUpPosition === true && this.items) {\n        /**\n         * Maintains the scroll position after loading rows in the top of the list\n         */\n        this.el.nativeElement.scrollTop = this.el.nativeElement.scrollHeight * this.scrollOptions.nbLines / this.items.length;\n      }\n      if (this.scrollOptions.maintainScrollDownPosition === true && this.items) {\n        /**\n         * Maintains the scroll position after loading rows in the bottom of the list\n         */\n        this.el.nativeElement.scrollTop = this.el.nativeElement.scrollHeight -\n        this.el.nativeElement.scrollHeight * this.scrollOptions.nbLines / this.items.length - this.tbodyHeight / 2;\n      }\n    }\n  }\n\n  /** This method allows to stay around the same items when switching the mode grid/list */\n  public adjustScrollToMode() {\n    if (this.items) {\n      if (this.resultMode === ModeEnum.grid) {\n        this.nbScrolledLines = Math.round(this.top / this.height * this.items.length);\n        if (this.nbScrolledLines % this.nbGridColumns !== 0) {\n          this.nbScrolledLines = Math.max(this.nbScrolledLines - this.nbScrolledLines % this.nbGridColumns, 0);\n        }\n      } else {\n        this.nbScrolledLines = Math.round(this.top / this.height * this.items.length);\n      }\n      this.triggerScrollEvent();\n    }\n  }\n\n  // When scrolling, the position of the scroll bar is calculated\n  // Loading the previous/next data is triggered when [nbEndScrollItems] items are left while scrolling up/down respectively\n  @HostListener('scroll', ['$event'])\n  public onScroll(event) {\n    this.tbodyHeight = this.el.nativeElement.offsetHeight;\n    const scrollTop = this.el.nativeElement.scrollTop;\n    const scrollHeight = this.el.nativeElement.scrollHeight;\n\n    const nLastLines = this.nbLinesBeforeFetch / ((this.nbGridColumns - 1) * this.resultMode + 1);\n    const dataLength = this.items.length / ((this.nbGridColumns - 1) * this.resultMode + 1);\n    const downPositionTrigger = scrollHeight * (1 - nLastLines / dataLength - this.tbodyHeight / scrollHeight);\n    const upPositionTrigger = scrollHeight * nLastLines / dataLength;\n    if (this.scrolledProgramatically) {\n      this.el.nativeElement.scrollTop = scrollHeight * this.nbScrolledLines / this.items.length;\n      this.scrolledProgramatically = false;\n    }\n    this.top = scrollTop;\n    this.height = scrollHeight;\n    if (this.previousFirstId) {\n      if (this.previousFirstId !== this.items[0].identifier || (this.fetchState && this.fetchState.endListDown)) {\n        this.previousFirstId = null;\n      }\n    }\n    if (this.previousLastId) {\n      if (this.previousLastId !== this.items[this.items.length - 1].identifier || (this.fetchState && this.fetchState.endListUp)) {\n        this.previousLastId = null;\n      }\n    }\n    if (scrollTop >= downPositionTrigger && this.isScrollingDown(scrollTop)) {\n      /** The following condition answers the question : when should I stop emitting `nextDataEvent` even if i reach the end of the scroll?\n       * The answer is: when `nextDataEvent` is emitted and there is no new items loaded.\n       * In other words if `downPositionTrigger` is reached and the last identifier we remember\n       * from the previous scoll is different from the actual last identifer,\n       * it means `nextDataEvent` still can be emitted\n      **/\n      if (this.items.length > 0 && this.items[this.items.length - 1].identifier !== this.previousLastId && this.fetchState\n         && !this.fetchState.endListDown) {\n        this.previousLastId = this.items[this.items.length - 1].identifier;\n        this.previousFirstId = this.items[0].identifier;\n        this.nextDataEvent.next(this.items[this.items.length - 1].itemData);\n      }\n    }\n    if (scrollTop <= upPositionTrigger && this.isScrollingUp(scrollTop)) {\n      /** Same logic as the condition above but on the top of the list this time. */\n      if (this.items.length > 0 && this.items[0].identifier !== this.previousFirstId && this.fetchState && !this.fetchState.endListUp) {\n        this.previousFirstId = this.items[0].identifier;\n        this.previousLastId = this.items[this.items.length - 1].identifier;\n        this.previousDataEvent.next(this.items[0].itemData);\n      }\n    }\n    this.lastScrollTop = this.el.nativeElement.scrollTop;\n    this.visibleItems.next(this.items.filter(i => this.isElementInViewport(document.getElementById(i.identifier))));\n  }\n\n  private isElementInViewport(el) {\n    const rect = el.getBoundingClientRect();\n    return (\n      rect.top >= 0 &&\n          rect.left >= 0 &&\n          rect.bottom <= (window.innerHeight || document.documentElement.clientHeight) &&\n          rect.right <= (window.innerWidth || document.documentElement.clientWidth)\n    );\n  }\n\n  private isScrollingDown(scrollTop) {\n    if (scrollTop > this.lastScrollTop) {\n      return true;\n    }\n  }\n  private isScrollingUp(scrollTop) {\n    if (scrollTop < this.lastScrollTop) {\n      return true;\n    }\n  }\n\n  private triggerScrollEvent() {\n    this.scrolledProgramatically = true;\n    this.el.nativeElement.scrollTop = 0;\n  }\n}\n","/*\n * Licensed to Gisaïa under one or more contributor\n * license agreements. See the NOTICE.txt file distributed with\n * this work for additional information regarding copyright\n * ownership. Gisaïa licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport {\n  AfterViewInit, ChangeDetectorRef, Component, DoCheck, ElementRef, EventEmitter, HostListener, Input,\n  IterableDiffers, SimpleChanges, ViewEncapsulation\n} from '@angular/core';\nimport { OnChanges, OnInit, Output } from '@angular/core';\nimport { MatButtonToggleChange } from '@angular/material/button-toggle';\nimport { MatSelectChange } from '@angular/material/select';\nimport { TranslateService } from '@ngx-translate/core';\nimport { ngxLoadingAnimationTypes } from 'ngx-loading-reloaded';\nimport { fromEvent, Observable, Subject } from 'rxjs';\nimport { debounceTime } from 'rxjs/operators';\nimport { ArlasColorService } from '../../../services/color.generator.service';\nimport { Column } from '../model/column';\nimport { Item } from '../model/item';\nimport { DetailedDataRetriever } from '../utils/detailed-data-retriever';\nimport { CellBackgroundStyleEnum } from '../utils/enumerations/cellBackgroundStyleEnum';\nimport { ModeEnum } from '../utils/enumerations/modeEnum';\nimport { PageEnum } from '../utils/enumerations/pageEnum';\nimport { SortEnum } from '../utils/enumerations/sortEnum';\nimport { ThumbnailFitEnum } from '../utils/enumerations/thumbnailFitEnum';\nimport { Action, ElementIdentifier, FieldsConfiguration, ItemDataType,\n  PageQuery, ResultListOptions, matchAndReplace } from '../utils/results.utils';\nimport { marker } from '@colsen1991/ngx-translate-extract-marker';\nimport { ResultlistNotifierService } from '../../../services/resultlist.notifier.service';\n\n/**\n * ResultList component allows to structure data in a filterable and sortable table.\n * Items can be represented as rows or grids and are multi-selectable.\n * For both list and grid modes, each item has detailed data that can be displayed in a togglable space.\n */\n@Component({\n  selector: 'arlas-result-list',\n  templateUrl: './result-list.component.html',\n  styleUrls: ['./result-list.component.scss'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class ResultListComponent implements OnInit, DoCheck, OnChanges, AfterViewInit {\n\n  /**\n   * @constant\n   */\n  public GEO_DISTANCE = 'geodistance';\n\n  /**\n   * @constant\n   */\n  public FILTER_ON = marker('Filter on');\n\n  /**\n   * @constant\n   */\n  public GLOBAL_ACTIONS = marker('Global actions');\n  /**\n   * @constant\n   */\n  public GEOSORT_ACTION = marker('Geo sort action');\n  /**\n   * @constant\n   */\n  public GRID_MODE = marker('Grid mode');\n  /**\n   * @constant\n   */\n  public LIST_MODE = marker('List mode');\n\n  /**\n   * @constant\n   */\n  public CONTAIN_FIT = marker('Fit the whole thumbnail to the tile');\n\n  /**\n   * @constant\n   */\n  public WIDTH_FIT = marker('Fit the thumbnail\\'s width to the tile');\n\n  /**\n   * @constant\n   */\n  public HEIGHT_FIT = marker('Fit the thumbnail\\'s height to the tile');\n\n  /**\n   * @constant\n   */\n  public GEOSORT_BUTTON = marker('Geo-sort');\n\n  /**\n   * @constant\n   */\n  public COLUMN_ACTIONS_HEIGHT = 52;\n\n  /**\n   * @constant\n   */\n  public COLUMN_NAME_HEIGHT = 27;\n\n  /**\n   * @constant\n   */\n  public FILTERS_HEIGHT = 50;\n\n  /**\n   * @constant\n   */\n  public TAIL_HEIGHT = 30;\n\n\n  public loadAnimationConfig = {\n    animationType: ngxLoadingAnimationTypes.threeBounce, backdropBackgroundColour: 'rgba(100,100,100,0.5)',\n    backdropBorderRadius: '0', primaryColour: '#ffffff', secondaryColour: '#ffffff', tertiaryColour: '#ffffff'\n  };\n\n  public scrollOptions = { maintainScrollUpPosition: true, maintainScrollDownPosition: true, nbLines: 0 };\n\n  /**\n   * @Input : Angular\n   * @description An input to customize the resultlist\n   */\n  @Input() public options: ResultListOptions;\n\n  @Input() public fetchState = { endListUp: true, endListDown: false };\n  /**\n   * @Input : Angular\n   * @description List of the fields displayed in the table (including the id field)\n   * - fieldName : Name/path of the field to add to list\n   * - columnName : Name of the field that will be displayed on the list column\n   * - dataType : Unit of the field values if it exists (degree, percentage, etc)\n   * - useColorService : Whether to colorize values on cells of the list with a color generated from the field value\n   * NOTE : This list should include the ID field. It will be the id of each item\n   */\n  @Input() public fieldsList: Array<{\n    fieldName: string;\n    columnName: string;\n    dataType: string;\n    useColorService?: boolean;\n  }>;\n\n  /**\n   * @Input : Angular\n   * @description List of fieldName-fieldValue map. Each map corresponds to a row/grid.\n   * @note In order to apply `selectInBetween` method properly, this list must be ascendingly sorted on the item identifier.\n   */\n  @Input() public rowItemList: Array<Map<string, ItemDataType>>;\n\n  /**\n   * @Input : Angular\n   * @description A configuration object that sets id field, title field and urls\n   * to images && thumbnails\n   */\n  @Input() public fieldsConfiguration: FieldsConfiguration;\n\n  /**\n   * @Input : Angular\n   * @description The table width. If not specified, the tableWidth value is\n   * equal to container width.\n   */\n  @Input() public tableWidth: number = null;\n\n  /**\n   * @Input : Angular\n   * @description The number of items left on the list/grid when scrolling up or down upon which loading new data is triggered.\n   * When scrolling up or down, once there is `nLastLines` items left at the top or bottom of the list, previous/next data is loaded.\n   * @deprecated nLastLines is deprecated and used only if `nbLinesBeforeFetch` is not set\n  */\n  @Input() public nLastLines: number;\n\n  /**\n   * @Input : Angular\n   * @description The number of items left on the list/grid when scrolling up or down upon which loading new data is triggered.\n   * When scrolling up or down, once there is `nbLinesBeforeFetch` items left at the top or bottom of the list, previous/next\n   * data is loaded.\n  */\n  @Input() public nbLinesBeforeFetch = 5;\n\n  /**\n   * @Input : Angular\n   * @description Height of the detail grid div (Grid Mode).\n   */\n  @Input() public detailedGridHeight = 300;\n\n  /**\n   * @Input : Angular\n   * @description Number of grid columns (Grid Mode).\n   */\n  @Input() public nbGridColumns = 4;\n\n  /**\n   * @Input : Angular\n   * @description List of actions to apply on the selected items.\n   */\n  @Input() public globalActionsList = new Array<Action>();\n\n  /**\n   * @Input : Angular\n   * @description A detailed-data-retriever object that implements\n   * DetailedDataRetriever interface.\n   */\n  @Input() public detailedDataRetriever: DetailedDataRetriever = null;\n\n  /**\n   * @Input : Angular\n   * @description List of items ids that are in a indeterminated status.\n   */\n  @Input() public indeterminatedItems: Set<string> = new Set<string>();\n\n  /**\n   * @Input : Angular\n   * @description List of items ids that are in a selected status.\n  */\n  @Input() public selectedItems: Set<string> = new Set<string>();\n\n  /**\n   * @Input : Angular\n   * @description Map <itemId, Set<actionIds>> : for each item, gives the list of activated actions.\n  */\n  @Input() public activatedActionsPerItem: Map<string, Set<string>> = new Map<string, Set<string>>();\n\n  /**\n   * @Input : Angular\n   * @description List of items ids to be highlighted.\n   */\n  @Input() public highlightItems: Set<string> = new Set<string>();\n\n  /**\n   * @Input : Angular\n   * @description Mode of representation : `list` or `grid`.\n   */\n  @Input() public defautMode: ModeEnum;\n\n  /**\n * @Input : Angular\n * @description Whether the body table is hidden or not.\n */\n  @Input() public isBodyHidden: boolean;\n  /**\n   * @Input : Angular\n   * @description Whether filters on list are displayed.\n   */\n  @Input() public displayFilters = true;\n\n  /**\n   * @Input : Angular\n   * @description Whether the sort on the geometry is enabled.\n   */\n  @Input() public isGeoSortEnabled = false;\n\n  /**\n   * @Input : Angular\n   * @description Whether the sort on the geometry is activated\n   */\n  @Input() public isGeoSortActivated = false;\n\n  /**\n   * @Input : Angular\n   * @description The column that is currently sorted on\n   */\n  @Input() public currentSortedColumn: Column;\n\n  /**\n   * @Input : Angular\n   * @description A fieldName-fieldValue map of fields to filter.\n   */\n\n  @Input() public filtersMap: Map<string, ItemDataType>;\n\n  /**\n   * @Input : Angular\n   * @description A  map of fieldName- Observable of array value for dropdown filter\n   */\n\n  @Input() public dropDownMapValues: Map<string, Observable<Array<string>>>;\n  /**\n   * @Input : Angular\n   * @description A  boolean to show or hide thead of table\n   */\n  @Input() public displayThead = true;\n\n  /**\n   * @Input : Angular\n   * @description List of [key, color] couples that associates a hex color to each key\n   */\n  @Input() public keysToColors: Array<[string, string]>;\n\n  /**\n   * @Input : Angular\n   * @description Knowing that saturation scale is [0, 1], `colorsSaturationWeight` is a\n   * factor (between 0 and 1) that tightens this scale to [(1-colorsSaturationWeight), 1].\n   * Therefore saturation of generated colors will be within this tightened scale..\n   */\n  @Input() public colorsSaturationWeight = 1 / 2;\n\n  /**\n   * @Input : Angular\n   * @description Whether to allow colorizing cells and the grid tile of the list.\n   */\n  @Input() public useColorService = false;\n\n  /**\n   * @Input : Angular\n    * @description The way the cell will be colorized: filled or outlined\n   */\n  @Input() public cellBackgroundStyle: CellBackgroundStyleEnum = CellBackgroundStyleEnum.filled;\n  /**\n   * @Input : Angular\n   * @description A  item to show detail\n   */\n  @Input() public selectedGridItem: Item;\n  /**\n   * @Input\n   * @description Whether display group with no detail.\n   */\n  @Input() public showEmptyGroup = false;\n  /**\n   * @Input\n   * @description Whether display the detailled part in grid mode.\n   */\n  @Input() public isDetailledGridOpen = false;\n\n  /**\n   * @Input\n   * @description How to fit the thumbnail to the tile:\n   * - `height` fit the height of the thumbnail.\n   * - `width` fit the width of the thumbnail.\n   * - `contain` fit the wholethumbnail.\n   */\n  @Input() public thumbnailFit: ThumbnailFitEnum = ThumbnailFitEnum.contain;\n\n  /**\n   * @Output : Angular\n   * @description Emits the event of sorting data on the specified column.\n   */\n  @Output() public sortColumnEvent: Subject<{ fieldName: string; sortDirection: SortEnum; }> =\n    new Subject<{ fieldName: string; sortDirection: SortEnum; }>();\n\n  /**\n   * @Output : Angular\n   * @description Emits the event of geo-sorting data.\n   */\n  @Output() public geoSortEvent: Subject<string> = new Subject<string>();\n\n  /**\n   * @Output : Angular\n   * @description Emits the event of geo-sorting data.\n   */\n  @Output() public geoAutoSortEvent: Subject<boolean> = new Subject<boolean>();\n\n  /**\n   * @Output : Angular\n   * @description Emits the list of items identifiers whose checkboxes are selected.\n   */\n  @Output() public selectedItemsEvent: Subject<Array<string>> = new Subject<Array<string>>();\n\n  /**\n   * @Output : Angular\n   * @description Emits one item identifier that is hovered..\n   */\n  @Output() public consultedItemEvent: Subject<ElementIdentifier> = new Subject<ElementIdentifier>();\n\n  /**\n   * @Output : Angular\n   * @description Emits the item that is clicked on.\n   */\n  @Output() public clickOnItemEvent = new Subject<ElementIdentifier>();\n\n  /**\n   * @Output : Angular\n   * @description Emits the filtred fields map (fieldName-fieldValue map).\n   */\n  @Output() public setFiltersEvent: Subject<Map<string, ItemDataType>> = new Subject();\n\n  /**\n   * @Output : Angular\n   * @description Emits the request of more data to load. The emitted number is the number of times this event has been emitted.\n   * @deprecated moreDataEvent can be replaced by `paginationEvent`\n   */\n  @Output() public moreDataEvent: Subject<number> = new Subject<number>();\n\n  /**\n   * @Output : Angular\n   * @description Emits the request of a new page to load.\n   * The emitted PageQuery contains the reference item from which the new page is loaded\n   * and whether it is the previous or the next page.\n   */\n  @Output() public paginationEvent: Subject<PageQuery> = new Subject<PageQuery>();\n\n  /**\n   * @Output : Angular\n   * @description Emits the event of applying the specified action on the specified item.\n   */\n  @Output() public actionOnItemEvent: Subject<{ action: Action; elementidentifier: ElementIdentifier; }> =\n    new Subject<{ action: Action; elementidentifier: ElementIdentifier; }>();\n\n  /**\n   * @Output : Angular\n   * @description Emits the event of applying the specified globalb action on the selected items.\n   */\n  @Output() public globalActionEvent: Subject<Action> = new Subject<Action>();\n\n  /**\n   * @Output : Angular\n   * @description Emits the event of applying the specified global action on the selected items.\n   */\n  @Output() public columnFilterChanged: Subject<Column> = new Subject<Column>();\n\n  /**\n   * @Output : Angular\n   * @description Emits the event of clicking on a grid tile.\n   */\n  @Output() public clickOnTile: Subject<Item> = new Subject<Item>();\n\n  /**\n   * @Output : Angular\n   * @description Emits the event of clicking on the switch mode button. Emits the new mode (grid or list).\n   */\n  @Output() public changeResultMode: Subject<ModeEnum> = new Subject<ModeEnum>();\n\n  /**\n   * @Output : Angular\n   * @description Emits the current visible items in the viewport.\n   */\n  @Output() public visibleItems: Subject<Array<Item>> = new Subject<Array<Item>>();\n\n  /**\n  * @Output : Angular\n  * @description Emits on changes rowItemList current value.\n  */\n  @Output() public onChangeItems: Subject<Array<any>> = new Subject<Array<any>>();\n\n  /**\n   * @Output : Angular\n   * @description Emits when changing how thumbnails fit in their div.\n   */\n  @Output() public thumbnailFitEvent: Subject<ThumbnailFitEnum> = new Subject();\n\n  /**\n   * @Output : Angular\n   * @description Emits when result list is updated.\n   */\n  @Output() public onResultListUpdate: EventEmitter<boolean> = new EventEmitter<boolean>();\n\n  /**\n   * @Output : Angular\n   * @description Emits when the list is ready.\n   */\n  @Output() public onListLoaded = new EventEmitter<boolean>();\n\n  public columns: Array<Column>;\n  public items: Array<Item> = new Array<Item>();\n  public sortedColumn: { columnName: string; fieldName: string; sortDirection: SortEnum; }\n    = { columnName: '', fieldName: '', sortDirection: SortEnum.asc };\n\n  // Heights of table elements\n  public tbodyHeight: number = null;\n  public theadHeight: number = null;\n\n  public ModeEnum = ModeEnum;\n  public ThumbnailFitEnum = ThumbnailFitEnum;\n  public PageEnum = PageEnum;\n  public SortEnum = SortEnum;\n\n  private iterableRowsDiffer;\n  private iterableColumnsDiffer;\n\n  public isNextPageRequested = false;\n  public isPreviousPageRequested = false;\n  public hasGridMode = false;\n  public resultMode: ModeEnum;\n  public allItemsChecked = false;\n\n  public borderStyle = 'solid';\n  public displayListGrid = 'inline';\n  public isShiftDown = false;\n\n  private debouncer = new Subject<ElementIdentifier>();\n  private scrollDebouncer = new Subject<any>();\n  private emitVisibleItemsDebouncer = new Subject<any>();\n\n\n  public constructor(iterableRowsDiffer: IterableDiffers, iterableColumnsDiffer: IterableDiffers, private el: ElementRef,\n    private colorService: ArlasColorService, public translate: TranslateService, private notifier: ResultlistNotifierService,\n    private cdr: ChangeDetectorRef) {\n    this.iterableRowsDiffer = iterableRowsDiffer.find([]).create(null);\n    this.iterableColumnsDiffer = iterableColumnsDiffer.find([]).create(null);\n    // Resize the table height on window resize\n    fromEvent(window, 'resize')\n      .pipe(debounceTime(500))\n      .subscribe((event: Event) => {\n        this.setTableHeight();\n      });\n    // Add debounce on hover item list\n    this.debouncer.pipe(debounceTime(500)).subscribe(elementidentifier => this.consultedItemEvent.next(elementidentifier));\n    this.scrollDebouncer.pipe(debounceTime(1000)).subscribe(page => this.paginationEvent.next(page));\n    this.emitVisibleItemsDebouncer.pipe(debounceTime(1000)).subscribe(event => this.visibleItems.next(event));\n  }\n\n  @HostListener('document:keydown.shift', ['$event'])\n  public shiftDown(_) {\n    this.isShiftDown = true;\n  }\n\n  @HostListener('document:keyup.shift', ['$event'])\n  public shiftUp(event: KeyboardEvent) {\n    this.isShiftDown = false;\n  }\n\n  public ngOnInit() {\n    this.resultMode = (this.defautMode && (this.defautMode.toString() === 'grid' ||\n      this.defautMode.toString() === ModeEnum.grid.toString())) ? ModeEnum.grid : ModeEnum.list;\n    this.options = Object.assign(new ResultListOptions(), this.options);\n    if (!!this.fieldsConfiguration) {\n      if (this.fieldsConfiguration.urlThumbnailTemplate !== undefined) {\n        this.hasGridMode = true;\n      }\n    }\n  }\n\n  public ngAfterViewInit(): void {\n    this.onListLoaded.next(true);\n    this.setTableWidth();\n    this.setTableHeight();\n  }\n\n  public emitThumbnailsFitStatus(fitChange: MatButtonToggleChange): void {\n    this.thumbnailFit = ThumbnailFitEnum[fitChange.value as string];\n    this.thumbnailFitEvent.next(this.thumbnailFit);\n  }\n\n  public ngOnChanges(changes: SimpleChanges): void {\n    if (changes['defautMode'] !== undefined) {\n      if (this.defautMode.toString() === 'grid' || this.defautMode.toString() === ModeEnum.grid.toString()) {\n        this.resultMode = ModeEnum.grid;\n        this.displayListGrid = 'block';\n      } else {\n        this.resultMode = ModeEnum.list;\n        this.displayListGrid = 'inline';\n      }\n      this.setTableHeight();\n    }\n\n    if (changes['rowItemList'] !== undefined) {\n      this.items = [];\n      // Reset selected items when data change (ie a filter is applied/removed or pagination occur)\n      this.selectedItems = new Set<string>();\n      this.isPreviousPageRequested = false;\n\n      // If the selected item is not in the current list of items, close the detail\n      const selectedItemInData = !!this.selectedGridItem && this.rowItemList\n        .map(item => <string>item.get(this.fieldsConfiguration.idFieldName))\n        .includes(this.selectedGridItem.identifier);\n      if (!(!!changes['rowItemList'].currentValue && selectedItemInData)) {\n        this.closeDetail(true);\n      }\n\n      this.onChangeItems.next(changes['rowItemList'].currentValue);\n    }\n    if (changes['isDetailledGridOpen'] !== undefined) {\n      this.isDetailledGridOpen = changes['isDetailledGridOpen'].currentValue;\n    }\n    if (changes['indeterminatedItems'] !== undefined) {\n      this.items.forEach(item => {\n        item.isindeterminated = false;\n        this.indeterminatedItems.forEach(id => {\n          if (item.identifier === id && !this.selectedItems.has(id)) {\n            item.isindeterminated = true;\n          }\n        });\n      });\n    }\n    if (changes['selectedItems'] !== undefined) {\n      this.items.forEach(item => {\n        item.isChecked = false;\n        this.selectedItems.forEach(id => {\n          if (item.identifier === id) {\n            item.isChecked = true;\n          }\n        });\n      });\n      this.setSelectedItems(this.selectedItems);\n    }\n    if (changes['highlightItems'] !== undefined) {\n      if (this.highlightItems.size > 0) {\n        this.items.forEach(item => {\n          if (this.highlightItems.has(item.identifier)) {\n            item.ishighLight = true;\n          } else {\n            item.ishighLight = false;\n          }\n        });\n      } else {\n        this.items.forEach(item => {\n          item.ishighLight = undefined;\n        });\n      }\n    }\n    if (changes['fetchState'] !== undefined) {\n      if (this.fetchState && this.fetchState.endListUp) {\n        this.isPreviousPageRequested = false;\n      }\n      if (this.fetchState && this.fetchState.endListDown) {\n        this.isNextPageRequested = false;\n      }\n    }\n    if (changes['currentSortedColumn'] !== undefined && changes['currentSortedColumn'].currentValue) {\n      this.sortedColumn = {\n        columnName: changes['currentSortedColumn'].currentValue.columnName,\n        fieldName: changes['currentSortedColumn'].currentValue.fieldName,\n        sortDirection: changes['currentSortedColumn'].currentValue.sortDirection\n      };\n    }\n  }\n\n  public ngDoCheck() {\n    const columnChanges = this.iterableColumnsDiffer.diff(this.fieldsList);\n    const itemChanges = this.iterableRowsDiffer.diff(this.rowItemList);\n    if (columnChanges) {\n      this.setColumns();\n    }\n    if (itemChanges) {\n      let itemIndex = 0;\n      itemChanges.forEachAddedItem(i => {\n        this.onAddItems(i.item, this.isPreviousPageRequested, itemIndex);\n        itemIndex++;\n      });\n      itemChanges.forEachRemovedItem(i => {\n        if (this.isNextPageRequested) {\n          this.items.splice(0, 1);\n        } else if (this.isPreviousPageRequested) {\n          this.items.splice(this.items.length - 1, 1);\n        }\n      });\n      /**\n       * This variable notifies the ResultScrollDirective whether the end of list is reached at top or bottom\n       */\n      if (this.isPreviousPageRequested) {\n        /**\n         * This variable is set and given as an input to the `ResultScrollDirective`.\n         * The objective of this input is to inform `ResultScrollDirective` that it should\n         * maintain the Scroll Position when Adding Content to the top of the list\n         */\n        this.scrollOptions = { maintainScrollUpPosition: true, maintainScrollDownPosition: false, nbLines: itemIndex };\n      }\n      if (this.isNextPageRequested) {\n        /**\n         * This variable is set and given as an input to the `ResultScrollDirective`.\n         * The objective of this input is to inform `ResultScrollDirective` that it should\n         * maintain the Scroll Position when Adding Content to the bottom of the list\n         */\n        this.scrollOptions = { maintainScrollUpPosition: false, maintainScrollDownPosition: true, nbLines: itemIndex };\n      }\n      this.setSelectedItems(this.selectedItems);\n      this.isNextPageRequested = false;\n      this.isPreviousPageRequested = false;\n      this.onResultListUpdate.emit(true);\n    }\n  }\n\n  public emitVisibleItems(items: Array<Item>) {\n    this.emitVisibleItemsDebouncer.next(items);\n  }\n\n  /**\n   * @description Emits the event of asking for next or previous page of items\n   * @param referenceIdentifier : item identifier used as reference to fetch the next/previous page\n   * @param whichPage : Whether to fetch the `next` or `previous` page\n   */\n  public paginate(itemData: Map<string, ItemDataType>, whichPage: PageEnum) {\n    this.isNextPageRequested = whichPage === PageEnum.next;\n    this.isPreviousPageRequested = whichPage === PageEnum.previous;\n    this.scrollDebouncer.next({ reference: itemData, whichPage: whichPage });\n\n  }\n\n  /**\n   * @description Emits which action to apply on which item/product\n   */\n  public triggerActionOnItem(actionOnItem: { action: Action; elementidentifier: ElementIdentifier; }): void {\n    this.actionOnItemEvent.next(actionOnItem);\n  }\n\n  /**\n   * @description Sets and emits the action to apply to all selected items\n   */\n  public setGlobalAction(action: Action) {\n    this.globalActionEvent.next(action);\n  }\n\n  public setGeoSortAction() {\n    if (!this.isGeoSortActivated) {\n      this.geoSort();\n    }\n    this.isGeoSortActivated = !this.isGeoSortActivated;\n    this.geoAutoSortEvent.next(this.isGeoSortActivated);\n  }\n\n  /**\n   * @description Sets and emits the [fieldName, filterValue] map of filtered fields\n   */\n  // Emits a map of only filtered fields\n  public setFilters(filtersMap: Map<string, ItemDataType>): void {\n    this.filtersMap = filtersMap;\n    this.setFiltersEvent.next(this.filtersMap);\n  }\n\n  /**\n   * @description Sets and emits the identifiers list of selected items\n   */\n  public setSelectedItems(selectedItems: Set<string>, stopPropagation?: boolean) {\n    // remove all text selection on current document\n    // SB : Sometime blinking append, need to be deepened\n    document.getSelection().removeAllRanges();\n\n    this.selectedItems = selectedItems;\n    if (selectedItems.size < this.items.length) {\n      this.allItemsChecked = false;\n    } else if (this.items.length !== 0) {\n      this.allItemsChecked = this.items.filter(i => i.isChecked).length === this.items.length;\n    }\n    this.selectedItemsEvent.next(Array.from(this.selectedItems));\n    if (this.isShiftDown && this.selectedItems.size > 1 && !stopPropagation) {\n      this.selectInBetween();\n    }\n  }\n\n  /**\n   * @description Emits the column to sort on and the sort direction\n   */\n  public sort(paramSortedColumn: Column): void {\n    this.isGeoSortActivated = false;\n    paramSortedColumn.sortDirection = this.sortedColumn.sortDirection;\n    this.columns.forEach(column => {\n      if (column.fieldName !== paramSortedColumn.fieldName) {\n        column.sortDirection = SortEnum.none;\n      }\n    });\n    this.sortColumnEvent.next(paramSortedColumn);\n    // Reset direction to ASC after a clean\n    if (this.sortedColumn.sortDirection === SortEnum.none) {\n      this.sortedColumn.sortDirection = SortEnum.asc;\n    }\n  }\n\n  public setDirection(event: PointerEvent) {\n    event.stopPropagation();\n    if (this.sortedColumn.sortDirection === SortEnum.asc) {\n      this.sortedColumn.sortDirection = SortEnum.desc;\n    } else {\n      this.sortedColumn.sortDirection = SortEnum.asc;\n    }\n    this.sort(this.sortedColumn as any);\n  }\n\n  public setSortedColumn(event: MatSelectChange) {\n    if (event.value) {\n      this.sortedColumn = {\n        columnName: event.value.columnName,\n        fieldName: event.value.fieldName,\n        sortDirection: this.sortedColumn?.sortDirection ?? SortEnum.none\n      };\n    } else {\n      this.sortedColumn = {\n        columnName: '',\n        fieldName: '',\n        sortDirection: SortEnum.none\n      };\n    }\n    this.sort(this.sortedColumn as any);\n  }\n\n  /**\n   * @description Emits the request event of geo-sorting\n   */\n  public geoSort(): void {\n    this.columns.forEach(column => {\n      if (!column.isIdField) {\n        column.sortDirection = SortEnum.none;\n      }\n    });\n    // Reset column filter when geo sort request\n    this.sortedColumn = null;\n    this.currentSortedColumn = null;\n\n    this.geoSortEvent.next(this.GEO_DISTANCE);\n  }\n\n  /**\n   * @description Sets and emits the hovered item's identifier\n   */\n  public setConsultedItem(identifier: string) {\n    const elementidentifier: ElementIdentifier = {\n      idFieldName: this.fieldsConfiguration.idFieldName,\n      idValue: identifier\n    };\n    this.debouncer.next(elementidentifier);\n  }\n\n  /**\n   * @description called on hovering an item : its sets the items actions + emits the item's identifier\n   * @param item hovered item\n   */\n  public onEnterItem(item: Item): void {\n    this.setConsultedItem(item.identifier);\n    this.notifier.notifyItemHover(item);\n  }\n\n  /**\n   * @description called on leaving an item : emits the item's identifier\n   * @param item item previously hovered\n   */\n  public onLeaveItem(item: Item): void {\n    this.setConsultedItem('leave-' + item.identifier);\n  }\n\n  /**\n   * @description Called when item is clicked. It is instant compared to other events\n   * @param item Item clicked on\n   */\n  public onClickItem(item: Item): void {\n    const elementidentifier: ElementIdentifier = {\n      idFieldName: this.fieldsConfiguration.idFieldName,\n      idValue: item.identifier\n    };\n    this.clickOnItemEvent.next(elementidentifier);\n  }\n\n  /**\n   * @description Sets the border style of rows\n   */\n  public setBorderStyle(borderStyle): void {\n    this.borderStyle = borderStyle;\n  }\n\n  /**\n   * @description Sets the selected grid item\n   */\n  public setSelectedGridItem(item: Item) {\n    this.selectedGridItem = item;\n    this.isDetailledGridOpen = true;\n    this.setTableHeight();\n    this.clickOnTile.next(item);\n  }\n\n  public closeDetail(isClosed: boolean) {\n    if (isClosed) {\n      this.isDetailledGridOpen = false;\n      this.setTableHeight();\n    }\n  }\n\n  /**\n   * @description Sets the display style according to the mode\n   */\n  public whichMode(toggleChangeEvent: MatButtonToggleChange) {\n    if (toggleChangeEvent.value === ModeEnum.grid.toString()) {\n      this.resultMode = ModeEnum.grid;\n      this.displayListGrid = 'block';\n    } else {\n      this.resultMode = ModeEnum.list;\n      this.displayListGrid = 'inline';\n    }\n    this.changeResultMode.next(this.resultMode);\n    this.setTableHeight();\n  }\n\n  /**\n   * @description Selects all the items\n   */\n  public selectAllItems() {\n    this.allItemsChecked = !this.allItemsChecked;\n    this.selectedItems = new Set<string>();\n    this.items.forEach(item => {\n      item.isChecked = this.allItemsChecked;\n      item.isindeterminated = false;\n      if (this.allItemsChecked) {\n        this.selectedItems.add(item.identifier);\n      }\n    });\n    this.setSelectedItems(this.selectedItems);\n  }\n\n  /**\n   * @description Selects all the items between the farest and nearest selected items\n   */\n  public selectInBetween() {\n    const selectedItemsList = new Array();\n    this.items.forEach(i => {\n      if (this.selectedItems.has(i.identifier)) {\n        selectedItemsList.push(i);\n      }\n    });\n    if (selectedItemsList.length > 0) {\n      const firstItem = selectedItemsList[0];\n      const lastItem = selectedItemsList[selectedItemsList.length - 1];\n      let inBetween = false;\n      this.items.forEach(item => {\n        if (item === firstItem) {\n          inBetween = true;\n        }\n        if (item === lastItem) {\n          inBetween = false;\n        }\n        if (inBetween) {\n          item.isChecked = true;\n          item.isindeterminated = false;\n          this.selectedItems.add(item.identifier);\n        }\n      });\n      this.setSelectedItems(this.selectedItems, true);\n    }\n  }\n\n  /**\n   * @description Emits the column when a filter is addedd\n   */\n  public columnChanged(colum: Column) {\n    this.columnFilterChanged.next(colum);\n  }\n\n  /**\n   * @description Clear set of selection\n   */\n  public clearSelection() {\n    this.setSelectedItems(new Set());\n    this.items.forEach(item => {\n      item.isChecked = false;\n      item.isindeterminated = false;\n    });\n  }\n\n\n  public byFieldName(item1: Column, item2: Column) {\n    return item1 && item2 ? item1.fieldName === item2.fieldName : item1 === item2;\n  }\n\n  // Build the table's columns\n  private setColumns() {\n    this.columns = new Array<Column>();\n    const checkboxColumnWidth = 25;\n    const toggleColumnWidth = 35;\n    // id column is the first one and has a pre fixed width\n    // It is the column where checkboxes are put\n    const idColumn = new Column('', this.fieldsConfiguration.idFieldName, '');\n    idColumn.isIdField = true;\n    idColumn.width = checkboxColumnWidth;\n    this.columns.unshift(idColumn);\n    this.fieldsList.forEach(field => {\n      const column = new Column(field.columnName, field.fieldName, field.dataType);\n      column.width = (this.tableWidth - checkboxColumnWidth - toggleColumnWidth) / this.fieldsList.length;\n      column.useColorService = field.useColorService ? field.useColorService : false;\n      this.columns.push(column);\n    });\n    // add a column for toggle icon\n    const toggleColumn = new Column('', 'toggle', '');\n    toggleColumn.isToggleField = true;\n    toggleColumn.width = toggleColumnWidth;\n    this.columns.push(toggleColumn);\n  }\n\n  private onAddItems(itemData: Map<string, ItemDataType>, addOnTop: boolean, index: number) {\n    const item = new Item(this.columns, itemData);\n    item.identifier = <string>itemData.get(this.fieldsConfiguration.idFieldName);\n    if (this.fieldsConfiguration.titleFieldNames) {\n      item.title = this.fieldsConfiguration.titleFieldNames\n        .map(field => <string>itemData.get(field.fieldPath + '_title'))\n        .join(' ');\n      if (item.title) {\n        item.title = item.title.trim();\n      }\n    }\n    if (this.useColorService && this.fieldsConfiguration.iconColorFieldName) {\n      const colorFieldValue = <string>itemData.get(this.fieldsConfiguration.iconColorFieldName + '_title');\n      if (colorFieldValue) {\n        item.color = this.colorService.getColor(colorFieldValue, this.keysToColors, this.colorsSaturationWeight);\n      }\n    }\n    if (this.fieldsConfiguration.tooltipFieldNames) {\n      item.tooltip = this.fieldsConfiguration.tooltipFieldNames\n        .map(field => <string>itemData.get(field.fieldPath + '_tooltip'))\n        .join(' ');\n      if (item.tooltip) {\n        item.tooltip = item.tooltip.trim();\n      }\n    }\n\n    if (this.fieldsConfiguration.icon) {\n      item.icon = this.fieldsConfiguration.icon;\n    }\n    if (this.fieldsConfiguration.iconCssClass) {\n      item.iconCssClass = <string>itemData.get(this.fieldsConfiguration.iconCssClass);\n      if (item.iconCssClass) {\n        item.iconCssClass = item.iconCssClass.trim();\n      }\n    }\n    item.imageEnabled = itemData.get('imageEnabled') === 'true';\n    item.thumbnailEnabled = itemData.get('thumbnailEnabled') === 'true';\n    item.detailsTitleEnabled = itemData.get('detailsTitleEnabled') === 'true';\n\n    /** Retro-compatibility code */\n    if (item.imageEnabled && this.fieldsConfiguration.urlImageTemplate) {\n      item.urlImages = new Array<string>();\n      item.urlImages.push(matchAndReplace(itemData, this.fieldsConfiguration.urlImageTemplate));\n    }\n    /** End of retro-compatibility code */\n\n    if (item.imageEnabled && this.fieldsConfiguration.urlImageTemplates && this.fieldsConfiguration.urlImageTemplates.length > 0) {\n      item.urlImages = new Array<string>();\n      item.descriptions = new Array<string>();\n      this.fieldsConfiguration.urlImageTemplates.forEach(descUrl => {\n        let condition = !descUrl.filter;\n        if (descUrl.filter) {\n          const data = itemData.get(descUrl.filter.field);\n          if (Array.isArray(data)) {\n            condition = data.some(v => descUrl.filter.values.includes(v));\n          } else if (data) {\n            condition = descUrl.filter.values.includes(data.toString());\n          } else {\n            condition = false;\n          }\n        }\n        if (condition) {\n          item.urlImages.push(matchAndReplace(itemData, descUrl.url));\n          item.descriptions.push(matchAndReplace(itemData, descUrl.description));\n        }\n      });\n    }\n    if (item.thumbnailEnabled && this.fieldsConfiguration.urlThumbnailTemplate) {\n      item.urlThumbnail = matchAndReplace(itemData, this.fieldsConfiguration.urlThumbnailTemplate);\n    }\n\n    if (item.detailsTitleEnabled && this.fieldsConfiguration.detailsTitleTemplate) {\n      item.detailsTitle = matchAndReplace(itemData, this.fieldsConfiguration.detailsTitleTemplate);\n    }\n\n    item.position = this.items.length + 1;\n    item.ishighLight = undefined;\n    // When new data is loaded, check the one that were already checked +\n    // remove the no longuer existing data from selectedItems (thanks to actualSelectedItems)\n    if (this.allItemsChecked && (this.isNextPageRequested || this.isPreviousPageRequested)) {\n      item.isChecked = true;\n      this.selectedItems.add(item.identifier);\n    } else {\n      if (this.selectedItems.has(item.identifier)) {\n        item.isChecked = true;\n      }\n      if (this.indeterminatedItems.has(item.identifier)) {\n        item.isindeterminated = true;\n      } else {\n        item.isindeterminated = false;\n      }\n    }\n    if (addOnTop) {\n      this.items.splice(index, 0, item);\n    } else {\n      this.items.push(item);\n    }\n  }\n\n  private setTableWidth() {\n    if (this.tableWidth === null) {\n      const nativeElement = this.el.nativeElement;\n      if (nativeElement.childNodes && nativeElement.childNodes.length > 0 && nativeElement.childNodes[0]) {\n        this.tableWidth = this.el.nativeElement.childNodes[0].offsetWidth;\n      }\n    }\n  }\n\n  /**\n   * @description Sets the table head and body height\n   */\n  private setTableHeight(nbTrials = 0) {\n    const tableElement = this.el.nativeElement.parentElement as HTMLElement;\n    if (!!tableElement && tableElement.getBoundingClientRect().height !== 0) {\n      this.theadHeight = this.COLUMN_ACTIONS_HEIGHT +\n        // Only in list mode\n        this.COLUMN_NAME_HEIGHT * (this.resultMode === ModeEnum.list ? 1 : 0) +\n        // Only if filters are present\n        this.FILTERS_HEIGHT * (this.displayFilters ? 1 : 0);\n      this.tbodyHeight = tableElement.getBoundingClientRect().height - this.theadHeight -\n        // Only if the list is in grid mode\n        this.TAIL_HEIGHT * (this.resultMode === ModeEnum.grid ? 1 : 0) -\n        // Only if the list is in grid mode and has an element selected\n        this.detailedGridHeight * (this.resultMode === ModeEnum.grid ? 1 : 0) * (this.isDetailledGridOpen ? 1 : 0);\n      this.cdr.detectChanges();\n    } else {\n      // If the container has no height then try again for up to 10 times\n      // Because of an issue with the DOM not loading properly the parent container, its height can be detected to be 0,\n      // even with a preset height. Multiple tiemout values were tested, but they don't have an impact on this behavior.\n      if (nbTrials < 10) {\n        setTimeout(() => this.setTableHeight(nbTrials + 1), 0);\n      } else {\n        console.error('Failed to load the result list\\'s height in less than 10 trials.' +\n          'Try to limit the element visibility to when it is really on screen to avoid this issue.');\n      }\n    }\n  }\n}\n","<table [style.width.px]=\"tableWidth\" class=\"resultlist\">\n  <thead *ngIf=\"displayThead\">\n    <tr class=\"resultlist__filter resultlist__thead__tr\" *ngIf=\"this.displayFilters\">\n      <ng-container *ngFor=\"let column of columns\">\n        <td [style.width.px]=\"column.width\" *ngIf=\"column.isIdField\">\n          <span class=\"resultlist__header--columns--hidden\"></span>\n        </td>\n        <td arlas-result-filter class=\"resultlist__filter__{{column.columnName}}\"\n          *ngIf=\"!column.isIdField && !column.isToggleField\"\n          matTooltip=\"{{FILTER_ON | translate}} {{column.columnName  | translate}}\" [style.width.px]=\"column.width\"\n          [column]=\"column\" [dropdownValues]=\"dropDownMapValues?.get(column.fieldName)|async\" [filtersMap]=\"filtersMap\"\n          (columnChanged)=\"columnChanged($event)\" (setFiltersEvent)=\"setFilters($event)\">\n        </td>\n        <td *ngIf=\"column.isToggleField\" [style.width.px]=\"column.width\">\n          <span class=\"resultlist__header--columns--hidden\"></span>\n        </td>\n      </ng-container>\n    </tr>\n    <tr class=\"resultlist__tools resultlist__thead__tr\">\n      <td [style.width.px]=\"tableWidth\" class=\"resultlist__tools__td\">\n        <div class=\"resultlist__tools--select\">\n          <div class=\"resultgrid--checkbox\">\n            <mat-checkbox (change)=\"selectAllItems()\" [checked]=\"allItemsChecked\"\n              [indeterminate]=\"!allItemsChecked && selectedItems.size > 0\"></mat-checkbox>\n            <div class=\"resultgrid--checkbox__count\">\n              {{selectedItems.size}}\n            </div>\n          </div>\n          <div class=\"resultlist__tools--menu\">\n              <mat-icon id=\"global_actions_btn\" matTooltip=\"{{GLOBAL_ACTIONS | translate}}\" mat-icon-button [matMenuTriggerFor]=\"menu\" *ngIf=\"globalActionsList.length > 0\">more_vert</mat-icon>\n              <mat-menu #menu=\"matMenu\">\n                <button id=\"{{action.label + '_btn'}}'\" *ngFor=\"let action of globalActionsList\"  [disabled]=\"!action.alwaysEnabled && selectedItems.size===0\" mat-menu-item (click)=\"setGlobalAction(action)\">\n                  {{action.label | translate}}\n                </button>\n              </mat-menu>\n          </div>\n        </div>\n        <div class=\"resultlist__tools--separator\">|</div>\n        <div class=\"resultlist__tools--sort-container\" id=\"resultlist_sort\">\n          <mat-slide-toggle *ngIf=\"isGeoSortEnabled\" class=\"resultlist__tools--geosort\"\n            [disableRipple]=\"true\" [checked]=\"isGeoSortActivated\" [labelPosition]=\"'before'\"\n            matTooltip=\"{{GEOSORT_ACTION | translate}}\" (change)=\"setGeoSortAction()\" [hideIcon]=\"true\">\n            {{GEOSORT_BUTTON | translate}}</mat-slide-toggle>\n          <mat-select class=\"resultlist__tools--sort\" [panelClass]=\"'resultlist__tools--sort'\"\n            [compareWith]=\"byFieldName\" (selectionChange)=\"setSortedColumn($event)\"\n            [ngModel]=\"sortedColumn\" placeholder=\"{{'Sort on' | translate}}\">\n              <mat-select-trigger>\n                @if (sortedColumn?.fieldName) {\n                  <span>\n                    {{sortedColumn.columnName | translate}}\n                  </span>\n                }\n              </mat-select-trigger>\n              <mat-option [value]=\"\" class=\"resultlist__tools--sort-option\"> - - </mat-option>\n              @for (column of columns; track column.fieldName) {\n                @if (!column.isIdField && !column.isToggleField) {\n                  <mat-option [value]=\"column\" class=\"resultlist__tools--sort-option\">\n                    {{column.columnName | translate}}\n                  </mat-option>\n                }\n              }\n          </mat-select>\n          @if (sortedColumn?.fieldName) {\n            <mat-button mat-icon-button class=\"resultlist__tools--sort-direction\" (click)=\"setDirection($event)\"\n                (keydown)=\"setDirection($event)\" [matTooltip]=\"'Change sort direction' | translate\">\n              <mat-icon [class.reversed]=\"sortedColumn.sortDirection === SortEnum.asc\">trending_flat</mat-icon>\n            </mat-button>\n          }\n        </div>\n        <ng-container *ngIf=\"hasGridMode\">\n          <div class=\"resultlist__tools--separator\">|</div>\n          <div class=\"resultlist__tools--mode\" id=\"resultlist_mode\">\n            <mat-button-toggle-group [name]=\"'modeGroup'\" (change)=\"whichMode($event)\" [hideSingleSelectionIndicator]=\"true\">\n              <mat-button-toggle id=\"list_mode_btn\" matTooltip=\"{{LIST_MODE | translate}}\" value=\"{{ModeEnum.list}}\"\n                [checked]=\"resultMode==ModeEnum.list\">\n                <mat-icon>list</mat-icon>\n              </mat-button-toggle>\n              <mat-button-toggle id=\"grid_mode_btn\" matTooltip=\"{{GRID_MODE | translate}}\" value=\"{{ModeEnum.grid}}\"\n                [checked]=\"resultMode==ModeEnum.grid\">\n                <mat-icon>grid_view</mat-icon>\n              </mat-button-toggle>\n            </mat-button-toggle-group>\n          </div>\n        </ng-container>\n      </td>\n    </tr>\n    <tr class=\"resultlist__header resultlist__thead__tr\" *ngIf=\"resultMode !== ModeEnum.grid\">\n      <ng-container *ngFor=\"let column of columns\">\n        <th *ngIf=\"column.isIdField\" [style.max-width.px]=\"column.width\" [style.min-width.px]=\"column.width\"\n          class=\"resultlist__header--columns\">\n          <span class=\"resultlist__header--columns--hidden\"></span>\n        </th>\n        <th *ngIf=\"!column.isIdField && !column.isToggleField\" [style.max-width.px]=\"column.width\"\n          [style.min-width.px]=\"column.width\" class=\"resultlist__header--columns\"\n          [matTooltip]=\"(column.columnName | translate) + (!!column.dataType ? '(' + column.dataType + ')' : '')\">\n          <span>\n            {{column.columnName | translate}}{{column.dataType ? ' (' + column.dataType + ')': ''}}\n          </span>\n        </th>\n        <th *ngIf=\"column.isToggleField\" class=\"resultlist__header--columns\" [style.max-width.px]=\"column.width\"\n          [style.min-width.px]=\"column.width\">\n          <span class=\"resultlist__header--columns--hidden\">\n          </span>\n        </th>\n      </ng-container>\n    </tr>\n    <tr class=\"resultlist__grid-detail resultlist__thead__tr\"\n      *ngIf=\"selectedGridItem !== null && resultMode === ModeEnum.grid && isDetailledGridOpen\">\n      <td class=\"resultlist__grid-detail--td\" [colSpan]=\"columns?.length\">\n        <arlas-result-detailed-grid [gridTile]=\"selectedGridItem\" [detailWidth]=\"tableWidth\"\n          [activatedActionsPerItem]=\"activatedActionsPerItem\"\n          [detailHeight]=\"detailedGridHeight\" [idFieldName]=\"fieldsConfiguration.idFieldName\"\n          [isDetailShowed]=\"isDetailledGridOpen\" (actionOnItemEvent)=\"triggerActionOnItem($event)\"\n          [showEmptyGroup]=\"showEmptyGroup\" [useHttp]=\"fieldsConfiguration.useHttpQuicklooks\"\n          (closeDetail)=\"closeDetail($event)\">\n        </arlas-result-detailed-grid>\n      </td>\n    </tr>\n  </thead>\n  <div *ngIf=\"isPreviousPageRequested\" class=\"resultlist__loading resultlist__top_loading\"\n    [style.width.px]=\"tableWidth\">\n    <ngx-loading [show]=\"isPreviousPageRequested\" [config]=\"loadAnimationConfig\"></ngx-loading>\n  </div>\n  <tbody class=\"resultlist__tbody\" arlasResultScroll *ngIf=\"!isBodyHidden\" [style.overflow-anchor]=\"'none'\"\n    [style.height.px]=\"tbodyHeight\" [scrollOptions]=\"scrollOptions\" [items]=\"items\" [style.position]=\"'relative'\"\n    [nbGridColumns]=\"nbGridColumns\"\n    [nbLinesBeforeFetch]=\"(nbLinesBeforeFetch !== undefined) ? nbLinesBeforeFetch:nLastLines\" [fetchState]=\"fetchState\"\n    [resultMode]=\"resultMode\" (visibleItems)=\"emitVisibleItems($event)\"\n    (nextDataEvent)=\"paginate($event, PageEnum.next)\" (previousDataEvent)=\"paginate($event, PageEnum.previous)\">\n    <mat-grid-list cols=\"{{nbGridColumns}}\" rowHeight=\"1:1\" [style.display]=\"displayListGrid\">\n      <ng-container *ngFor=\"let rowItem of items; index as i\">\n        <ng-container *ngIf=\"resultMode === ModeEnum.list; else grid_mode\">\n          <tr arlas-result-item [activatedActionsPerItem]=\"activatedActionsPerItem\" id=\"{{rowItem.identifier}}\" class=\"resultlist__body--item-hover-{{rowItem.ishighLight}}\"\n            [options]=\"options\" (mouseenter)=\"onEnterItem(rowItem)\" (mouseleave)=\"onLeaveItem(rowItem)\"\n            (click)=\"onClickItem(rowItem)\" [idFieldName]=\"fieldsConfiguration.idFieldName\" [tableWidth]=\"tableWidth\"\n            [rowItem]=\"rowItem\" [useColorService]=\"useColorService\" [cellBackgroundStyle]=\"cellBackgroundStyle\"\n            [keysToColors]=\"keysToColors\" [colorsSaturationWeight]=\"colorsSaturationWeight\"\n            [detailedDataRetriever]=\"detailedDataRetriever\" [selectedItems]=\"selectedItems\"\n            (selectedItemsEvent)=\"setSelectedItems($event)\" (borderStyleEvent)=\"setBorderStyle($event)\"\n            [style.border-bottom-style]=\"borderStyle\" (actionOnItemEvent)=\"triggerActionOnItem($event)\"\n           >\n          </tr>\n          <tr arlas-result-detailed-item *ngIf=\"rowItem.isDetailToggled\" class=\"resultlist__body--detailed-item\"\n            (mouseenter)=\"onEnterItem(rowItem)\" (mouseleave)=\"onLeaveItem(rowItem)\"\n            [detailedDataRetriever]=\"detailedDataRetriever\"\n            [activatedActionsPerItem]=\"activatedActionsPerItem\"\n            [detailColspan]=\"rowItem.columns.length\" [rowItem]=\"rowItem\" [showEmptyGroup]=showEmptyGroup\n            [idFieldName]=\"fieldsConfiguration.idFieldName\" (actionOnItemEvent)=\"triggerActionOnItem($event)\">\n          </tr>\n\n        </ng-container>\n        <ng-template #grid_mode>\n          <div class=\"div-grid-tile\" (mouseenter)=\"onEnterItem(rowItem)\" (mouseleave)=\"onLeaveItem(rowItem)\" >\n            <mat-grid-tile *ngIf=\"resultMode === ModeEnum.grid\" class=\"resultlist__md-grid-tile\">\n              <arlas-result-grid-tile\n                [activatedActionsPerItem]=\"activatedActionsPerItem\"\n                [displayInfoIcon]=\"rowItem.identifier === selectedGridItem?.identifier && isDetailledGridOpen\"\n                [thumbnailFit]=\"thumbnailFit\"\n                id=\"{{rowItem.identifier}}\" class=\"resultlist__grid-tile\" [options]=\"options\" [gridTile]=\"rowItem\"\n                [selectedItems]=\"selectedItems\" [detailedDataRetriever]=\"detailedDataRetriever\"\n                (selectedItemsEvent)=\"setSelectedItems($event)\" (clickedOnItemEvent)=\"setSelectedGridItem($event)\"\n                [idFieldName]=\"fieldsConfiguration.idFieldName\" (actionOnItemEvent)=\"triggerActionOnItem($event)\">\n              </arlas-result-grid-tile>\n            </mat-grid-tile>\n          </div>\n        </ng-template>\n      </ng-container>\n    </mat-grid-list>\n  </tbody>\n  <div *ngIf=\"resultMode === ModeEnum.grid\" class=\"resultlist-thumbnails-fit\">\n    <mat-button-toggle-group [name]=\"'thumbnailFitGroup'\" (change)=\"emitThumbnailsFitStatus($event)\"\n        class=\"fit-group\" [hideSingleSelectionIndicator]=\"true\">\n      <mat-button-toggle matTooltip=\"{{WIDTH_FIT | translate}}\" value=\"{{ThumbnailFitEnum.width}}\"\n        [checked]=\"thumbnailFit==ThumbnailFitEnum.width\">\n        <mat-icon style=\"transform: rotate(-90deg)\" class=\"fit-icon\">expand</mat-icon>\n      </mat-button-toggle>\n      <mat-button-toggle matTooltip=\"{{CONTAIN_FIT | translate}}\" value=\"{{ThumbnailFitEnum.contain}}\"\n        [checked]=\"thumbnailFit==ThumbnailFitEnum.contain\" class=\"contain-icon-wrapper\">\n        <mat-icon class=\"contain-icon fit-icon\">expand</mat-icon>\n        <mat-icon class=\"fit-icon\">expand</mat-icon>\n      </mat-button-toggle>\n      <mat-button-toggle matTooltip=\"{{HEIGHT_FIT | translate}}\" value=\"{{ThumbnailFitEnum.height}}\"\n        [checked]=\"thumbnailFit==ThumbnailFitEnum.height\">\n        <mat-icon class=\"fit-icon\">expand</mat-icon>\n      </mat-button-toggle>\n    </mat-button-toggle-group>\n  </div>\n  <div *ngIf=\"isNextPageRequested\" class=\"resultlist__loading resultlist__bottom_loading\" [style.width.px]=\"tableWidth\">\n    <ngx-loading [show]=\"isNextPageRequested\" [config]=\"loadAnimationConfig\"></ngx-loading>\n  </div>\n</table>\n","/*\n * Licensed to Gisaïa under one or more contributor\n * license agreements. See the NOTICE.txt file distributed with\n * this work for additional information regarding copyright\n * ownership. Gisaïa licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport { NgModule, Provider, ModuleWithProviders } from '@angular/core';\nimport { ArlasColorService } from './color.generator.service';\nimport { ColorGeneratorLoader, AwcColorGeneratorLoader } from '../components/componentsUtils';\n\nexport interface ColorGeneratorModuleConfig {\n  loader?: Provider;\n}\n\n@NgModule({\n\n})\nexport class ColorGeneratorModule {\n  /**\n   * Use this method in your root module to provide the ColorGeneratorLoader\n   */\n  public static forRoot(config: ColorGeneratorModuleConfig = {}): ModuleWithProviders<ColorGeneratorModule> {\n    return {\n      ngModule: ColorGeneratorModule,\n      providers: [\n        config.loader || {provide: ColorGeneratorLoader, useClass: AwcColorGeneratorLoader}\n      ]\n    };\n  }\n\n  public static forChild(config: ColorGeneratorModuleConfig = {}): ModuleWithProviders<ColorGeneratorModule> {\n    return {\n      ngModule: ColorGeneratorModule,\n      providers: [\n        config.loader || {provide: ColorGeneratorLoader, useClass: AwcColorGeneratorLoader}\n      ]\n    };\n  }\n\n}\n","/*\n * Licensed to Gisaïa under one or more contributor\n * license agreements. See the NOTICE.txt file distributed with\n * this work for additional information regarding copyright\n * ownership. Gisaïa licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { FormatNumberPipe } from './format-number.pipe';\nimport { NgModule } from '@angular/core';\n\n@NgModule({\n  imports: [\n  ],\n  declarations: [\n    FormatNumberPipe\n  ],\n  exports: [\n    FormatNumberPipe\n  ]\n})\nexport class FormatNumberModule {}\n","/*\n * Licensed to Gisaïa under one or more contributor\n * license agreements. See the NOTICE.txt file distributed with\n * this work for additional information regarding copyright\n * ownership. Gisaïa licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport { NgModule } from '@angular/core';\nimport { ReplacePipe } from './replace.pipe';\n\n@NgModule({\n  imports: [\n  ],\n  declarations: [\n    ReplacePipe\n  ],\n  exports: [\n    ReplacePipe\n  ]\n})\nexport class ReplaceModule { }\n","/*\n * Licensed to Gisaïa under one or more contributor\n * license agreements. See the NOTICE.txt file distributed with\n * this work for additional information regarding copyright\n * ownership. Gisaïa licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport { NgModule } from '@angular/core';\nimport { GetAttachmentUrlPipe } from './get-attachment-url.pipe';\n\n@NgModule({\n  imports: [\n  ],\n  declarations: [\n    GetAttachmentUrlPipe\n  ],\n  exports: [\n    GetAttachmentUrlPipe\n  ]\n})\nexport class GetAttachmentUrlModule { }\n","/*\n * Licensed to Gisaïa under one or more contributor\n * license agreements. See the NOTICE.txt file distributed with\n * this work for additional information regarding copyright\n * ownership. Gisaïa licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatGridListModule } from '@angular/material/grid-list';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { LazyLoadImageModule } from 'ng-lazyload-image';\nimport { NgxLoadingModule } from 'ngx-loading-reloaded';\nimport { ColorGeneratorModule } from '../../services/color.generator.module';\nimport { ResultDetailedGridComponent } from './result-detailed-grid/result-detailed-grid.component';\nimport { ResultDetailedItemComponent } from './result-detailed-item/result-detailed-item.component';\nimport { ResultScrollDirective } from './result-directive/result-scroll.directive';\nimport { ResultFilterComponent } from './result-filter/result-filter.component';\nimport { ResultGridTileComponent } from './result-grid-tile/result-grid-tile.component';\nimport { ResultItemComponent } from './result-item/result-item.component';\nimport { ResultListComponent } from './result-list/result-list.component';\nimport { FormatNumberModule } from '../../pipes/format-number/format-number.module';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { ReplaceModule } from '../../pipes/replace/replace.module';\nimport { GetAttachmentUrlModule } from '../../pipes/get-attachment-url/get-attachment-url.module';\nimport { ResultActionsComponent } from './result-actions/result-actions.component';\nimport { ActionDisplayerPipe } from './result-actions/result-actions.pipe';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ColorGeneratorModule.forRoot(),\n    MatIconModule,\n    MatChipsModule,\n    MatButtonToggleModule,\n    MatButtonModule,\n    MatGridListModule,\n    MatCheckboxModule,\n    MatMenuModule,\n    MatSelectModule,\n    MatSlideToggleModule,\n    MatTooltipModule,\n    MatRadioModule,\n    MatProgressSpinnerModule,\n    FormsModule,\n    LazyLoadImageModule,\n    NgxLoadingModule,\n    TranslateModule,\n    FormatNumberModule,\n    ReplaceModule,\n    GetAttachmentUrlModule\n  ],\n  declarations: [ResultListComponent, ResultGridTileComponent,\n    ResultItemComponent, ResultDetailedItemComponent, ResultDetailedGridComponent,\n    ResultFilterComponent, ResultScrollDirective, ResultActionsComponent, ActionDisplayerPipe],\n  exports: [ResultListComponent, ResultGridTileComponent,\n    ResultItemComponent, ResultDetailedItemComponent, ResultDetailedGridComponent,\n    ResultFilterComponent, ResultScrollDirective, ResultActionsComponent, ActionDisplayerPipe],\n\n})\nexport class ResultsModule { }\n","/*\n * Licensed to Gisaïa under one or more contributor\n * license agreements. See the NOTICE.txt file distributed with\n * this work for additional information regarding copyright\n * ownership. Gisaïa licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport { NgModule, Provider, ModuleWithProviders } from '@angular/core';\nimport { AwcCollectionService, BaseCollectionService } from './collection.service';\n\nexport interface CollectionModuleConfig {\n  loader?: Provider;\n}\n\n@NgModule({\n\n})\nexport class CollectionModule {\n  /**\n   * Use this method in your root module to provide the ColorGeneratorLoader\n   */\n  public static forRoot(config: CollectionModuleConfig = {}): ModuleWithProviders<CollectionModule> {\n    return {\n      ngModule: CollectionModule,\n      providers: [\n        config.loader || {provide: BaseCollectionService, useClass: AwcCollectionService}\n      ]\n    };\n  }\n\n  public static forChild(config: CollectionModuleConfig = {}): ModuleWithProviders<CollectionModule> {\n    return {\n      ngModule: CollectionModule,\n      providers: [\n        config.loader || {provide: BaseCollectionService, useClass: AwcCollectionService}\n      ]\n    };\n  }\n\n}\n","/*\n * Licensed to Gisaïa under one or more contributor\n * license agreements. See the NOTICE.txt file distributed with\n * this work for additional information regarding copyright\n * ownership. Gisaïa licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport { Component, Input, OnChanges, OnInit, SimpleChanges } from '@angular/core';\nimport { NUMBER_FORMAT_CHAR, numberToShortValue } from '../componentsUtils';\nimport * as metricJsonSchema from './metric.schema.json';\n\n\n@Component({\n  selector: 'arlas-metric',\n  templateUrl: './metric.component.html',\n  styleUrls: ['./metric.component.scss']\n})\n/**\n * This component will contain a phrase composed of 3 parts\n * - beforeValue = `Speed average : `\n * - value = `25`\n * - afterValue = ` km/h`.\n * The phrase that will be represented in this card is : **Speed average : 25 km/h**\n *\n */\nexport class MetricComponent implements OnInit, OnChanges {\n\n\n  @Input() public beforeValue = '';\n  @Input() public value: number;\n  @Input() public afterValue = '';\n  @Input() public customizedCssClass: string;\n  @Input() public valuePrecision = 2;\n  /**\n   * Whether to shorten the metric value\n   */\n  @Input() public shortValue = false;\n  /**\n   * Whether to display a '~' before the metric value\n   */\n  @Input() public approximateValue = false;\n\n  /**\n   * @Input : Angular\n   * @description Chart's width. If not specified, the chart takes the component's container width.\n   */\n  @Input() public chartWidth = null;\n\n  public displayedValue: string | number = '0';\n  public NUMBER_FORMAT_CHAR = NUMBER_FORMAT_CHAR;\n\n  public constructor() { }\n\n  public ngOnInit() {\n    if (this.value) {\n      this.setDisplayedValue();\n    }\n  }\n\n  public ngOnChanges(changes: SimpleChanges): void {\n    if (changes['value']) {\n      if (this.value !== undefined && !Number.isNaN(this.value)) {\n        this.setDisplayedValue();\n      } else {\n        /** '-' will be set when `value` is undefined or not a number */\n        this.displayedValue = '-';\n      }\n    }\n  }\n\n  /**\n   * @returns Json schema of the donut component for configuration\n   */\n  public static getMetricJsonSchema(): Object {\n    return metricJsonSchema;\n  }\n\n  public static round(value: number, precision: number): number {\n    if (precision === 0 || precision === undefined) {\n      return Math.round(value);\n    } else {\n      const multiplier = Math.pow(10, precision * 10 || 0);\n      return +(Math.round(value * multiplier) / multiplier).toFixed(precision);\n    }\n  }\n\n  /**\n   * Sets the value displayed in html\n   */\n  private setDisplayedValue(): void {\n    if (this.shortValue) {\n      this.displayedValue = numberToShortValue(this.value, this.valuePrecision);\n    } else {\n      this.displayedValue = MetricComponent.round(this.value, this.valuePrecision);\n    }\n  }\n}\n","<div [style.width.px]=\"!!chartWidth ? chartWidth : 'unset'\" class=\"arlas-metric\" [ngClass]=\"customizedCssClass\" >\n  <div class=\"arlas-metric__title\">\n    {{beforeValue | translate}}\n  </div>\n  <div class=\"arlas-metric__value\">\n    <span class=\"arlas-metric__value--approximmate\" *ngIf=\"approximateValue\"> ~ </span>\n    {{this.displayedValue | formatNumber:NUMBER_FORMAT_CHAR}}\n  </div>\n  <div class=\"arlas-metric__description\">\n    {{afterValue | translate}}\n  </div>\n</div>\n","/*\n * Licensed to Gisaïa under one or more contributor\n * license agreements. See the NOTICE.txt file distributed with\n * this work for additional information regarding copyright\n * ownership. Gisaïa licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport { NgModule} from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MetricComponent } from './metric.component';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { FormatNumberModule } from '../../pipes/format-number/format-number.module';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormatNumberModule,\n    TranslateModule\n  ],\n  declarations: [MetricComponent],\n  exports: [MetricComponent]\n})\nexport class MetricModule { }\n","/*\n * Licensed to Gisaïa under one or more contributor\n * license agreements. See the NOTICE.txt file distributed with\n * this work for additional information regarding copyright\n * ownership. Gisaïa licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport { Injectable, Pipe, PipeTransform } from '@angular/core';\nimport { DEFAULT_SHORTENING_PRECISION, numberToShortValue } from '../../components/componentsUtils';\n\n\n@Pipe({\n  name: 'shortenNumber'\n})\n@Injectable()\nexport class ShortenNumberPipe implements PipeTransform {\n\n  public constructor() {}\n\n  public transform(number: number, precision: number = DEFAULT_SHORTENING_PRECISION): any {\n    return numberToShortValue(number, precision);\n  }\n}\n","/*\n * Licensed to Gisaïa under one or more contributor\n * license agreements. See the NOTICE.txt file distributed with\n * this work for additional information regarding copyright\n * ownership. Gisaïa licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { DEFAULT_SHORTENING_PRECISION, NUMBER_FORMAT_CHAR } from '../../componentsUtils';\nimport { PowerBar } from '../model/powerbar';\n\n@Component({\n    selector: 'arlas-powerbar',\n    templateUrl: './powerbar.component.html',\n    styleUrls: ['./powerbar.component.scss']\n})\nexport class PowerbarComponent {\n\n    @Input() public powerbar: PowerBar;\n    /**\n     * @Input : Angular\n     * @description Precision when rounding numbers (ie the count next to the progress bar).\n     * Default is 2.\n     */\n    @Input() public numberShorteningPrecision = DEFAULT_SHORTENING_PRECISION;\n    /**\n     * @Input : Angular\n     * @description Unit the a powerbar represents\n     */\n    @Input() public unit = '';\n    /**\n     * @Input : Angular\n     * @description Whether to allow colorizing the bar according to its term or not using keysToColors\n     */\n    @Input() public useColorService = false;\n    /**\n     * @Input : Angular\n     * @description Whether to allow colorizing the bar according to its term or not using a field of the data\n     */\n    @Input() public useColorFromData = false;\n\n    /**\n     * @Input : Angular\n     * @description Hide selected powerbar\n     */\n    @Input() public hideSelected = true;\n\n    /**\n     * @Input : Angular\n     * @description Whether to have the option to select the powerbar using checkboxes.\n     */\n    @Input() public selectWithCheckbox = false;\n\n    @Output() public onCheckEvent: EventEmitter<boolean> = new EventEmitter();\n\n    @Output() public onClickEvent = new EventEmitter<boolean>();\n\n    public NUMBER_FORMAT_CHAR = NUMBER_FORMAT_CHAR;\n\n    public onCheck() {\n        this.onCheckEvent.emit(true);\n    }\n\n    public onSelect() {\n        this.onClickEvent.emit(true);\n    }\n}\n","<ng-container *ngIf=\"!!powerbar\">\n    <ng-container *ngIf=\"!powerbar.isSelected || (powerbar.isSelected && !hideSelected)\">\n        <div class=\"container\" (click)=\"onSelect()\"> <!-- //NOSONAR -->\n            <section *ngIf=\"selectWithCheckbox\" class=\"checkbox checkbox-{{powerbar.classSuffix}}\">\n                <mat-checkbox [checked]=\"powerbar.isSelected\" (change)=\"onCheck()\" (click)=\"$event.stopPropagation()\"></mat-checkbox> <!-- //NOSONAR -->\n            </section>\n            <section style=\"width: 100%;\">\n                <div class=\"powerbars__powerbar powerbars__powerbar--{{powerbar.classSuffix}}\"\n                    matTooltip=\"{{(powerbar.count | formatNumber:NUMBER_FORMAT_CHAR) + ' ' + (unit | translate)}}\"\n                    [matTooltipPosition]=\"'after'\">\n                    <div class=\"powerbars__powerbar--top-group\">\n                        <div [class.powerbars__powerbar--selected]=\"powerbar.isSelected\" class=\"powerbars__powerbar--term powerbars__powerbar--term-{{powerbar.classSuffix}} powerbars__powerbar--term--{{powerbar.term}}\">\n                            {{powerbar.term | translate}}\n                        </div>\n\n                        <div [class.powerbars__powerbar--selected]=\"powerbar.isSelected\" class=\"powerbars__powerbar--count powerbars__powerbar--term-{{powerbar.classSuffix}} powerbars__powerbar--term--{{powerbar.term}}\">\n                            {{powerbar.count | shortenNumber:numberShorteningPrecision}}\n                        </div>\n                    </div>\n\n                    <div *ngIf=\"!useColorService && !useColorFromData\" class=\"powerbars__powerbar--progression-default-colour\"\n                        [style.width.%]=\"powerbar.progression\"></div>\n                    <div *ngIf=\"useColorService || useColorFromData\" [style.background-color]=\"powerbar.color\"\n                        [style.border-color]=\"powerbar.color\" [style.width.%]=\"powerbar.progression\" class=\"powerbars__powerbar--progression\"></div>\n                </div>\n            </section>\n        </div>\n    </ng-container>\n</ng-container>","/*\n * Licensed to Gisaïa under one or more contributor\n * license agreements. See the NOTICE.txt file distributed with\n * this work for additional information regarding copyright\n * ownership. Gisaïa licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport { AfterViewInit, Component, EventEmitter, Input, OnChanges, OnInit, Output, SimpleChanges } from '@angular/core';\nimport { SimpleNode, TreeNode } from 'arlas-d3';\nimport { Subject, takeUntil } from 'rxjs';\nimport tinycolor from 'tinycolor2';\nimport { DEFAULT_SHORTENING_PRECISION } from '../../components/componentsUtils';\nimport { ArlasColorService } from '../../services/color.generator.service';\nimport { FilterOperator } from '../../tools/models/term-filters';\nimport { NUMBER_FORMAT_CHAR } from '../componentsUtils';\nimport { PowerBar } from './model/powerbar';\nimport * as powerbarsJsonSchema from './powerbars.schema.json';\n\n/**\n * Powerbars component transforms a [term, occurence_count] map to a descreasingly sorted list of multiselectable bars.\n * A bar progression represents the term's occurence count.\n */\n\n@Component({\n  selector: 'arlas-powerbars',\n  templateUrl: './powerbars.component.html',\n  styleUrls: ['./powerbars.component.scss']\n})\n\nexport class PowerbarsComponent implements OnInit, OnChanges, AfterViewInit {\n  /**\n   * @Input : Angular\n   * @description Data formated as a tree to be plotted as powerbars\n   */\n  @Input() public inputData: TreeNode;\n\n  /**\n   * @Input : Angular\n   * @description Which level of the tree inputData to plot as powerbars\n   */\n  @Input() public level = 1;\n\n  /**\n   * @Input : Angular\n   * @description Powerbar title\n   */\n  @Input() public powerbarTitle = '';\n\n  /**\n   * @Input : Angular\n   * @description Unit the a powerbar represents\n   */\n  @Input() public unit = '';\n\n  /**\n   * @Input : Angular\n   * @description Css class name to use to customize a specific powerbar's style.\n   */\n  @Input() public customizedCssClass: string;\n  /**\n   * @Input : Angular\n   * @description List of selected paths in `inputData` from which the powerbars to select\n   * are determined\n   */\n  @Input() public selectedPaths: Array<Array<SimpleNode>> = new Array<Array<SimpleNode>>();\n\n  /**\n   * @Input : Angular\n   * @description Whether text input, to filter powerbars, is displayed\n   */\n  @Input() public displayFilterField = false;\n\n  /**\n   * @Input : Angular\n   * @description List of [key, color] couples that associates a hex color to each key\n   */\n  @Input() public keysToColors: Array<[string, string]>;\n\n  /**\n   * @Input : Angular\n   * @description Knowing that saturation scale is [0, 1], `colorsSaturationWeight` is a\n   * factor (between 0 and 1) that tightens this scale to [(1-colorsSaturationWeight), 1].\n   * Therefore saturation of generated colors will be within this tightened scale.\n   */\n  @Input() public colorsSaturationWeight: number;\n\n  /**\n   * @Input : Angular\n   * @description Whether to allow colorizing the bar according to its term or not using keysToColors\n   */\n  @Input() public useColorService = false;\n  /**\n   * @Input : Angular\n   * @description Whether to allow colorizing the bar according to its term or not using a field of the data\n   */\n  @Input() public useColorFromData = false;\n  /**\n   * @Input : Angular\n   * @description Chart's width. If not specified, the chart takes the component's container width.\n   */\n  @Input() public chartWidth = null;\n  /**\n     * @Input : Angular\n     * @description Whether the powerbar is scrollable or fully displayed\n     */\n  @Input() public scrollable = false;\n\n  /**\n     * @Input : Angular\n     * @description Options about how to apply filters on powerbars\n     * - value : The default value.\n     *           if 'Eq', the selected powerbar is included in the ARLAS filter.\n     *           if 'Neq', the selected powerbar is excluded in the ARLAS filter.\n     * - display: Whether to display a switcher between 'Eq' and 'Neq' or keep the default operator all the time\n     */\n  @Input() public filterOperator: FilterOperator = {\n    value: 'Eq',\n    display: true\n  };\n\n  @Input() public missingLeafEvent: Subject<any[]>;\n\n  /**\n   * @Input : Angular\n   * @description Precision when rounding numbers (ie the count next to the progress bar).\n   * Default is 2.\n   */\n  @Input() public numberShorteningPrecision = DEFAULT_SHORTENING_PRECISION;\n\n  /**\n   * @Input : Angular\n   * @description Whether to group the selected powerbars in a dedicated list or not.\n   */\n  @Input() public groupSelections = true;\n\n  /**\n   * @Input : Angular\n   * @description Whether to have the option to select the powerbar using checkboxes.\n   */\n  @Input() public selectWithCheckbox = false;\n\n\n  /**\n   * @Output : Angular\n   * @description Emits the filter operator\n   */\n  @Output() public filterOperatorEvent: EventEmitter<'Neq' | 'Eq'> = new EventEmitter();\n\n  /**\n   * @Output : Angular\n   * @description Emits the list of selected paths in the tree inputData\n   */\n  @Output() public selectedPowerBarEvent = new Subject<Array<Array<SimpleNode>>>();\n\n  /**\n   * @Output : Angular\n   * @description Emits searched term\n   */\n  @Output() public searchedTerm = new Subject<string>();\n\n  public powerBarsList: Array<PowerBar>;\n  public selectedPowerbarsSet = new Set<PowerBar>();\n  public selectedPowerbarsTerms = new Set<string>();\n\n  /**\n   * @constant\n   */\n  public SELECTED_BAR = 'selected-bar';\n  /**\n   * @constant\n   */\n  public UNSELECTED_BAR = 'unselected-bar';\n  /**\n   * @constant\n   */\n  public NEUTRAL_STATE = 'neutral-state';\n  /**\n   * @constant\n   */\n  public SELECTED_NO_MOUNTED_BAR = 'selected-no-mounted-bar';\n\n  public NUMBER_FORMAT_CHAR = NUMBER_FORMAT_CHAR;\n\n  private readonly _onDestroy$ = new Subject<boolean>();\n\n  public constructor(private readonly colorService: ArlasColorService) {\n    this.colorService.changekeysToColors$\n      .pipe(takeUntil(this._onDestroy$))\n      .subscribe(() => {\n        this.powerBarsList.forEach(p => {\n          if (this.useColorService) {\n            const rgbaColor = tinycolor(this.colorService.getColor(p.term, this.keysToColors,\n              this.colorsSaturationWeight)).toRgb();\n            p.color = this.getPowerbarColor(rgbaColor);\n          }\n        });\n    });\n  }\n\n  public static getPowerbarsJsonSchema(): Object {\n    return powerbarsJsonSchema;\n  }\n\n  public ngOnInit() {\n    if (this.missingLeafEvent) {\n      this.missingLeafEvent\n        .pipe(takeUntil(this._onDestroy$))\n        .subscribe(data => {\n          if (this.selectedPaths !== undefined && this.selectedPaths !== null) {\n            this.setSelectedPowerbars(this.selectedPaths);\n            data.filter(d => !!d.value).forEach(d => {\n              const value = d.value;\n              const key = d.key;\n              const missingLeaf = Array.from(this.selectedPowerbarsSet).filter(pw => pw.term === key)[0];\n              const missingLeafToUpdate = {...missingLeaf};\n              missingLeafToUpdate.count = value;\n              missingLeafToUpdate.isSelected = true;\n              missingLeafToUpdate.classSuffix = this.SELECTED_BAR;\n              if (this.useColorService) {\n                const rgbaColor = tinycolor(this.colorService.getColor(missingLeafToUpdate.term, this.keysToColors,\n                  this.colorsSaturationWeight)).toRgb();\n                missingLeafToUpdate.color = this.getPowerbarColor(rgbaColor);\n              }\n              this.selectedPowerbarsSet.delete(missingLeaf);\n              this.selectedPowerbarsSet.add(missingLeafToUpdate);\n            });\n          }\n        });\n    }\n\n    if (this.level > 1) {\n      throw new Error('Not implemented : Only level 1 is supported');\n    }\n    if (!this.unit) {\n      this.unit = '';\n    }\n\n    if (this.groupSelections === undefined) {\n      this.groupSelections = true;\n    }\n  }\n\n  public ngAfterViewInit(): void {\n    if (!this.filterOperator) {\n      this.filterOperator = {\n        value: 'Eq',\n        display: true\n      };\n    }\n  }\n\n  public ngOnChanges(changes: SimpleChanges): void {\n    if (changes.inputData) {\n      if (this.inputData !== undefined && this.inputData !== null) {\n        this.populatePowerbars();\n        this.populateSelectedPowerbars();\n        this.calculateAllPowerBarsProgression();\n      } else {\n        this.inputData = { id: 'root', fieldName: 'root', fieldValue: 'root', isOther: false, children: [] };\n        this.powerBarsList = [];\n      }\n    }\n\n    if (changes.selectedPaths && this.selectedPaths !== undefined && this.selectedPaths !== null) {\n      this.setSelectedPowerbars(this.selectedPaths);\n    }\n  }\n\n  public ngOnDestroy() {\n    this._onDestroy$.next(true);\n    this._onDestroy$.complete();\n  }\n\n  /**\n   * @description Select or deselect a PowerBar and emits the terms list of selected bars\n   */\n  // Select or deselect a PowerBar from the view\n  public clickOnPowerbar(powerBar: PowerBar): void {\n    const selectedPaths = new Array();\n    if (this.selectedPowerbarsTerms.has(powerBar.term)) {\n      powerBar.isSelected = false;\n      this.selectedPowerbarsTerms.delete(powerBar.term);\n      this.selectedPowerbarsSet.delete(powerBar);\n      if (this.selectedPowerbarsTerms.size === 0) {\n        this.clearSelection();\n      } else {\n        powerBar.classSuffix = this.UNSELECTED_BAR;\n      }\n    } else {\n      if (this.selectedPaths) {\n        Object.assign(selectedPaths, this.selectedPaths);\n      }\n      powerBar.isSelected = true;\n      powerBar.classSuffix = this.SELECTED_BAR;\n      this.selectedPowerbarsTerms.add(powerBar.term);\n      this.addSelectedPowerbarToList(powerBar, this.selectedPowerbarsSet);\n      this.unselectAllButNotSelectedBars();\n    }\n    this.selectedPowerbarsSet.forEach(pb => {\n      selectedPaths.push(pb.path);\n    });\n    this.selectedPowerbarsSet = this.sortSelectedPowerBars(this.selectedPowerbarsSet);\n    this.selectedPowerBarEvent.next(selectedPaths);\n  }\n\n  /**\n   * @description Set selected powerbars from outside of the component\n   * @param selectedPaths selects the powerbars whose terms are in the selected paths\n   */\n  public setSelectedPowerbars(selectedPaths: Array<Array<{ fieldName: string; fieldValue: string; }>>) {\n    const selectedPowerbarsTerms = new Set<string>();\n    const selectedPowerbarsList = new Set<PowerBar>();\n    selectedPaths.forEach(path => {\n      const currentPath = path.length <= this.level ? path : path.slice(path.length - this.level);\n      let powerBar = currentPath.length > 1 ? this.getPowerbar(currentPath[0].fieldValue, currentPath[1].fieldValue) :\n        this.getPowerbar(currentPath[0].fieldValue, 'root');\n      if (powerBar !== null) {\n        powerBar.isSelected = true;\n        powerBar.classSuffix = this.SELECTED_BAR;\n        if (this.useColorService) {\n          const rgbaColor = tinycolor(this.colorService.getColor(powerBar.term, this.keysToColors,\n            this.colorsSaturationWeight)).toRgb();\n          powerBar.color = this.getPowerbarColor(rgbaColor);\n        }\n      } else {\n        powerBar = currentPath.length > 1 ? new PowerBar(currentPath[0].fieldValue, currentPath[1].fieldValue, 0) :\n          new PowerBar(currentPath[0].fieldValue, 'root', 0);\n        powerBar.path = currentPath;\n        powerBar.progression = 0;\n        powerBar.isSelected = true;\n        powerBar.classSuffix = this.SELECTED_NO_MOUNTED_BAR;\n      }\n      selectedPowerbarsTerms.add(powerBar.term);\n      this.addSelectedPowerbarToList(powerBar, selectedPowerbarsList);\n    });\n    this.selectedPowerbarsTerms = selectedPowerbarsTerms;\n    this.selectedPowerbarsSet = this.sortSelectedPowerBars(selectedPowerbarsList);\n    this.unselectAllButNotSelectedBars();\n  }\n\n  public onKeyUp(searchText: any) {\n    this.searchedTerm.next(searchText);\n  }\n\n  public setOperator(op: 'Eq' | 'Neq'): void {\n    if (this.filterOperator.value !== op) {\n      this.filterOperator.value = op;\n      this.filterOperatorEvent.next(op);\n    }\n  }\n\n  private clearSelection(): void {\n    this.powerBarsList.forEach(powerBar => {\n      powerBar.classSuffix = this.NEUTRAL_STATE;\n      powerBar.isSelected = false;\n    });\n  }\n\n  private addSelectedPowerbarToList(powerBar: PowerBar, selectedPowerbarsList: Set<PowerBar>): void {\n    // add powerbar to selectedPowerbarsList\n    this.removePowerbarFromSelectedOnes(powerBar, selectedPowerbarsList);\n    selectedPowerbarsList.add(powerBar);\n  }\n\n  private populatePowerbars(): void {\n    this.powerBarsList = this.fetchPowerbarsList(this.level, this.inputData);\n  }\n\n  private fetchPowerbarsList(level: number, data: TreeNode, powerBarsList?: Array<PowerBar>, recursivityCount?: number, path?: any) {\n    if (recursivityCount === undefined) {\n      recursivityCount = 0;\n    }\n    if (!powerBarsList) {\n      powerBarsList = new Array<PowerBar>();\n    }\n    // Each powerbar has a path attribute to the parrent node\n    if (!path) {\n      path = new Array();\n    }\n    if (recursivityCount < level - 1) {\n      data.children.forEach(child => {\n        const currentPath = [];\n        Object.assign(currentPath, path);\n        currentPath.push({ fieldName: child.fieldName, fieldValue: child.fieldValue });\n        this.fetchPowerbarsList(level, child, powerBarsList, ++recursivityCount, currentPath);\n      });\n    } else {\n      data.children.forEach(child => {\n        const currentPath = [];\n        Object.assign(currentPath, path);\n        currentPath.push({ fieldName: child.fieldName, fieldValue: child.fieldValue });\n        if (!child.isOther) {\n          const powerBar = new PowerBar(child.fieldValue, data.fieldValue, child.metricValue);\n          currentPath.reverse();\n          powerBar.path = currentPath;\n          if (this.useColorService) {\n            const rgbaColor = tinycolor(this.colorService.getColor(powerBar.term, this.keysToColors,\n              this.colorsSaturationWeight)).toRgb();\n            powerBar.color = this.getPowerbarColor(rgbaColor);\n          }\n          if (this.useColorFromData) {\n            powerBar.color = child.color.toString().startsWith('#') ? child.color.toString() : '#'.concat(child.color.toString());\n          }\n          powerBarsList.push(powerBar);\n        }\n      });\n      return powerBarsList;\n    }\n  }\n\n  private populateSelectedPowerbars() {\n    if (this.selectedPowerbarsTerms !== undefined && this.selectedPowerbarsTerms.size > 0) {\n      this.setSelectedPowerbars(this.selectedPaths);\n    }\n  }\n\n  private calculateAllPowerBarsProgression() {\n    // TODO : Manage correctly when count == NaN\n    let sum = 0;\n    // calculate the sum\n    this.powerBarsList.forEach(powerBar => {\n      if (powerBar.count.toString() === 'NaN') {\n        powerBar.count = 0;\n      }\n      sum += powerBar.count;\n    });\n    this.selectedPowerbarsSet.forEach(selectedPowerBar => {\n      if (selectedPowerBar.count.toString() === 'NaN') {\n        selectedPowerBar.count = 0;\n      }\n      if (this.getPowerbar(selectedPowerBar.term, selectedPowerBar.parentTerm) === null) {\n        sum += selectedPowerBar.count;\n      }\n    });\n\n\n    // calculate progression\n    this.powerBarsList.forEach(powerBar => {\n      powerBar.progression = powerBar.count / sum * 100;\n      if (powerBar.progression !== 0 && powerBar.progression !== 100) {\n        powerBar.progression += 1;\n      }\n      powerBar.progression = Math.min(powerBar.progression, 100);\n    });\n    this.selectedPowerbarsSet.forEach(selectedPowerBar => {\n      selectedPowerBar.progression = selectedPowerBar.count / sum * 100;\n      if (selectedPowerBar.progression !== 0 && selectedPowerBar.progression !== 100) {\n        selectedPowerBar.progression += 1;\n      }\n      selectedPowerBar.progression = Math.min(selectedPowerBar.progression, 100);\n    });\n  }\n\n  private unselectAllButNotSelectedBars() {\n    if (this.selectedPowerbarsTerms.size === 0) {\n      this.selectedPowerbarsSet = new Set<PowerBar>();\n      this.clearSelection();\n    } else {\n      this.powerBarsList.forEach(powerBar => {\n        if (!this.selectedPowerbarsTerms.has(powerBar.term)) {\n          powerBar.classSuffix = this.UNSELECTED_BAR;\n          powerBar.isSelected = false;\n        }\n      });\n    }\n  }\n\n  // Sort the selected PowerBars decreasingly. And recalculate the progression of the bars in this array.\n  private sortSelectedPowerBars(selectedPowerbarsList: Set<PowerBar>): Set<PowerBar> {\n    const selectedPowerbarsArray = Array.from(selectedPowerbarsList);\n    const sortedSelectedPowerbarsList = new Set<PowerBar>();\n    selectedPowerbarsArray.forEach(powerBar => {\n      sortedSelectedPowerbarsList.add(powerBar);\n    });\n    return sortedSelectedPowerbarsList;\n  }\n\n  // removes the powerbar that has the same term in selectedPowerbarsList but not the same instance\n  private removePowerbarFromSelectedOnes(powerBar: PowerBar, selectedPowerbarsList: Set<PowerBar>) {\n    let powerbarToRemove;\n    selectedPowerbarsList.forEach(selectedPowerbar => {\n      if (selectedPowerbar.term === powerBar.term) {\n        powerbarToRemove = selectedPowerbar;\n      }\n    });\n    selectedPowerbarsList.delete(powerbarToRemove);\n  }\n\n  /**\n   * @description Gets the powerbar by its term and the term of it's parent node\n   *\n   */\n  private getPowerbar(powerbarTerm: string, powerbarParentTerm: string): PowerBar {\n    let foundPowerbar = null;\n    this.powerBarsList.forEach(powerbar => {\n      if (powerbar.term === powerbarTerm && powerbar.parentTerm === powerbarParentTerm) {\n        foundPowerbar = powerbar;\n      }\n    });\n    return foundPowerbar;\n  }\n\n  private getPowerbarColor(rgbaColor: tinycolor.ColorFormats.RGBA): string{\n    return 'rgba(' + [rgbaColor.r, rgbaColor.g, rgbaColor.b, 0.7].join(',') + ')';\n  }\n}\n","<div [style.width.px]=\"!!chartWidth ? chartWidth : 'unset'\">\n  <div class=\"tools\">\n    <div *ngIf=\"!displayFilterField\" class=\"powerbars--title\">{{powerbarTitle | translate}}</div>\n    <div class=\"powerbars--search\" *ngIf=\"displayFilterField\">\n      <form (keydown.enter)=\"$event.preventDefault()\">\n        <mat-form-field class=\"powerbars--search-field\">\n          <input #searchText type=\"text\" autocomplete=\"off\" placeholder=\"{{powerbarTitle | translate}}\" matInput\n            class=\"powerbars--search-input\" (keyup)=\"onKeyUp(searchText.value)\" name=\"search\">\n        </mat-form-field>\n      </form>\n    </div>\n    <ng-container *ngIf=\"filterOperator\">\n      <div *ngIf=\"filterOperator?.display\" class=\"include_exclude\">\n        <div class=\"operation\" [class.operation--selected]=\"filterOperator?.value === 'Eq'\" (click)=\"setOperator('Eq')\">{{'include' | translate}}</div> <!-- //NOSONAR -->\n        <div class=\"operation\" [class.operation--selected]=\"filterOperator?.value === 'Neq'\" (click)=\"setOperator('Neq')\">{{'exclude' | translate}}</div> <!-- //NOSONAR -->\n      </div>\n      <div *ngIf=\"!filterOperator?.display && filterOperator?.value === 'Neq'\" class=\"include_exclude\">\n        <div class=\"operation exclude\">{{'exclude' | translate}}</div>\n      </div>\n    </ng-container>\n  </div>\n\n  <div class=\"powerbars--container\" [class.powerbars--container__scrollable]=\"scrollable\" [ngClass]=\"customizedCssClass\">\n    <ng-container *ngIf=\"groupSelections\">\n      <div *ngIf=\"selectedPowerbarsSet.size !== 0\" [class.powerbar-selected-scrollable]=\"scrollable\"\n        [style.min-height.px]=\"selectedPowerbarsSet.size > 5 ? 131 : selectedPowerbarsSet.size * 26\">\n        <div *ngFor=\"let selectedPowerbar of selectedPowerbarsSet\">\n          <arlas-powerbar\n            [unit]=\"unit\"\n            [powerbar]=\"selectedPowerbar\"\n            [useColorFromData]=\"useColorFromData\"\n            [useColorService]=\"useColorService\"\n            [hideSelected]=\"false\"\n            [selectWithCheckbox]=\"selectWithCheckbox\"\n            [numberShorteningPrecision]=\"numberShorteningPrecision\"\n            (onCheckEvent)=\"clickOnPowerbar(selectedPowerbar)\"\n            (onClickEvent)=\"clickOnPowerbar(selectedPowerbar)\"\n          ></arlas-powerbar>\n        </div>\n      </div>\n    </ng-container>\n\n    <div [class.powerbar-list-scrollable]=\"scrollable\">\n      <div *ngFor=\"let powerbar of powerBarsList\">\n        <arlas-powerbar\n          [unit]=\"unit\"\n          [powerbar]=\"powerbar\"\n          [useColorFromData]=\"useColorFromData\"\n          [useColorService]=\"useColorService\"\n          [numberShorteningPrecision]=\"numberShorteningPrecision\"\n          [selectWithCheckbox]=\"selectWithCheckbox\"\n          [hideSelected]=\"groupSelections\"\n          (onCheckEvent)=\"clickOnPowerbar(powerbar)\"\n          (onClickEvent)=\"clickOnPowerbar(powerbar)\"\n        ></arlas-powerbar>\n      </div>\n    </div>\n  </div>\n</div>","/*\n * Licensed to Gisaïa under one or more contributor\n * license agreements. See the NOTICE.txt file distributed with\n * this work for additional information regarding copyright\n * ownership. Gisaïa licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { ShortenNumberPipe } from './shorten-number.pipe';\nimport { NgModule } from '@angular/core';\n\n@NgModule({\n  imports: [\n  ],\n  declarations: [\n    ShortenNumberPipe\n  ],\n  exports: [\n    ShortenNumberPipe\n  ]\n})\nexport class ShortenNumberModule {}\n","/*\n * Licensed to Gisaïa under one or more contributor\n * license agreements. See the NOTICE.txt file distributed with\n * this work for additional information regarding copyright\n * ownership. Gisaïa licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport { NgModule } from '@angular/core';\nimport { PowerbarComponent } from './powerbar.component';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { FormatNumberModule } from '../../../pipes/format-number/format-number.module';\nimport { ShortenNumberModule } from '../../../pipes/shorten-number/shorten-number.module';\nimport { CommonModule } from '@angular/common';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        MatTooltipModule,\n        MatCheckboxModule,\n        TranslateModule,\n        ShortenNumberModule,\n        FormatNumberModule\n    ],\n    declarations: [PowerbarComponent],\n    exports: [PowerbarComponent]\n})\nexport class PowerbarModule {\n\n}\n","/*\n * Licensed to Gisaïa under one or more contributor\n * license agreements. See the NOTICE.txt file distributed with\n * this work for additional information regarding copyright\n * ownership. Gisaïa licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { ColorGeneratorModule } from '../../services/color.generator.module';\nimport { FormatNumberModule } from '../../pipes/format-number/format-number.module';\nimport { PowerbarsComponent } from './powerbars.component';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\nimport { PowerbarModule } from './powerbar/powerbar.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    MatCardModule,\n    MatIconModule,\n    MatTooltipModule,\n    MatMenuModule,\n    MatInputModule,\n    MatButtonModule,\n    MatButtonToggleModule,\n    ColorGeneratorModule.forRoot(),\n    TranslateModule,\n    PowerbarModule,\n    FormatNumberModule\n  ],\n  declarations: [PowerbarsComponent],\n  exports: [PowerbarsComponent]\n})\nexport class PowerbarsModule { }\n","/*\n * Licensed to Gisaïa under one or more contributor\n * license agreements. See the NOTICE.txt file distributed with\n * this work for additional information regarding copyright\n * ownership. Gisaïa licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { PowerBar } from '../../powerbars/model/powerbar';\nimport { MetricsTableRow } from '../model/metrics-table';\n\n\n@Component({\n  selector: 'arlas-multi-bars-row',\n  templateUrl: './metrics-table-row.component.html',\n  styleUrls: ['./metrics-table-row.component.scss']\n})\nexport class MetricsTableRowComponent {\n  @Input() public displayCheckBox: boolean;\n  @Input() public hideSelection: boolean;\n  @Input() public metricsTableRow: MetricsTableRow;\n  @Input() public useColorService = false;\n  @Input() public useColorFromData = false;\n  @Input() public colors: string[];\n  @Input() public selected: boolean; // trigger change detection\n  @Input() public pendingMode = false;\n  @Input() public powerBars: PowerBar[] = [];\n  @Output() public rowSelected = new EventEmitter();\n\n\n  public constructor() { }\n\n  public selectRow() {\n    this.updateRowState();\n  }\n\n\n  public onCheck() {\n    this.updateRowState();\n  }\n\n  public updateRowState(){\n    this.metricsTableRow.selected = !this.metricsTableRow.selected;\n    this.rowSelected.emit(this.metricsTableRow.term);\n  }\n\n  /** TODO : the selection state should be saved an propagated to the parent component.\n   */\n}\n","<tr *ngIf=\"!metricsTableRow?.selected || !hideSelection\" [ngClass]=\"{\n'multi-bar-row--unselected': !metricsTableRow?.selected,\n'multi-bar-row--selected': metricsTableRow?.selected,\n'multi-bar-row--pending': !metricsTableRow?.selected && pendingMode\n}\" (click)=\"selectRow()\" class=\"multi-bar-row\">\n  <th class=\"terms-head\" scope=\"row\" class=\"multi-bar-row__header\">\n    <div class=\"header\">\n      <section *ngIf=\"displayCheckBox\"  (click)=\"$event.stopPropagation()\">\n        <mat-checkbox [checked]=\"metricsTableRow?.selected\" (change)=\"onCheck()\"></mat-checkbox>\n      </section>\n      <span class=\"header-title\" [matTooltip]=\"metricsTableRow?.term\">\n           {{metricsTableRow?.term | uppercase}}\n      </span>\n    </div>\n  </th>\n  <td  class=\"column-head\" class=\"multi-bar-row__data\" *ngFor=\"let powerBar of powerBars\">\n    <div>\n    <arlas-powerbar [useColorFromData]=\"useColorFromData\"\n                      [useColorService]=\"useColorService\"\n                      *ngIf=\"powerBar.count !== null && powerBar.count !== undefined; else noData\"\n                      [powerbar]=\"powerBar\"></arlas-powerbar>\n      <ng-template #noData>\n        <div class=\"empty-cell\">\n          <span class=\"empty\"></span>\n          <span class=\"empty\"></span>\n        </div>\n      </ng-template>\n    </div>\n  </td>\n</tr>\n","/*\n * Licensed to Gisaïa under one or more contributor\n * license agreements. See the NOTICE.txt file distributed with\n * this work for additional information regarding copyright\n * ownership. Gisaïa licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { Pipe, PipeTransform } from '@angular/core';\nimport { CollectionService } from '../../services/collection.service';\n@Pipe({\n  name: 'getCollectionDisplayName'\n})\nexport class GetCollectionDisplayNamePipe implements PipeTransform {\n\n  public constructor(private collectionService: CollectionService) {\n  }\n\n  public transform(value: string, ...args: unknown[]): string {\n    if(!value) {\n      return  '';\n    }\n    return this.collectionService.getDisplayName(value);\n  }\n\n}\n","/*\n * Licensed to Gisaïa under one or more contributor\n * license agreements. See the NOTICE.txt file distributed with\n * this work for additional information regarding copyright\n * ownership. Gisaïa licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { Pipe, PipeTransform } from '@angular/core';\nimport { CollectionService } from '../../services/collection.service';\n@Pipe({\n  name: 'getFieldDisplayName'\n})\nexport class GetFieldDisplayNamePipe implements PipeTransform {\n\n  public constructor(private collectionService: CollectionService) {\n  }\n\n  public transform(value: string): string {\n    if(!value) {\n      return  '';\n    }\n    return this.collectionService.getDisplayFieldName(value);\n  }\n\n}\n","/*\n * Licensed to Gisaïa under one or more contributor\n * license agreements. See the NOTICE.txt file distributed with\n * this work for additional information regarding copyright\n * ownership. Gisaïa licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport {\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  EventEmitter,\n  Input,\n  OnChanges,\n  OnInit,\n  Output,\n  SimpleChanges,\n  ViewChild\n} from '@angular/core';\nimport { KeyValue } from '@angular/common';\nimport { PowerBar } from '../powerbars/model/powerbar';\nimport * as tinycolor from 'tinycolor2';\nimport { ArlasColorService } from '../../services/color.generator.service';\nimport * as metricTableJsonSchema from './metrics-table.schema.json';\nimport { FilterOperator } from '../../tools/models/term-filters';\nimport { MetricsTable, MetricsTableHeader, MetricsTableRow } from './model/metrics-table';\n\n\n@Component({\n  selector: 'arlas-metrics-table',\n  templateUrl: './metrics-table.component.html',\n  styleUrls: ['./metrics-table.component.scss']\n})\nexport class MetricsTableComponent implements OnInit, OnChanges {\n  /**\n   * @Input : Angular\n   * @description Data to build the table.\n   */\n  @Input() public metricsTable: MetricsTable;\n\n  /**\n     * @Input : Angular\n     * @description Options about how to apply filters on metrics table\n     * - value : The default value.\n     *           if 'Eq', the selected line is included in the ARLAS filter.\n     *           if 'Neq', the selected line is excluded in the ARLAS filter.\n     * - display: Whether to display a switcher between 'Eq' and 'Neq' or keep the default operator all the time\n     */\n  @Input() public filterOperator: FilterOperator = {\n    value: 'Eq',\n    display: true\n  };\n  /**\n   * @Output : Angular\n   * @description Emits the filter operator\n   */\n  @Output() public filterOperatorEvent: EventEmitter<'Neq' | 'Eq'> = new EventEmitter();\n\n  /**\n   * @Input : Angular\n   * @description selected terms list.\n   */\n  @Input() public selectedTerms: string[];\n\n  /**\n   * @Input : Angular\n   * @description List of [key, color] couples that associates a hex color to each key\n   */\n  @Input() public keysToColors: Array<[string, string]>;\n\n\n  /**\n   * @Input : Angular\n   * @description Whether to allow colorizing the bar according to its term or not using keysToColors\n   */\n  @Input() public useColorService = false;\n\n  /**\n   * @Input : Angular\n   * @description Choose how to apply colors to the table. By column : all the bars in same column will have the same color.\n   * By row : all the bars in the same row, will have the same color.\n   */\n  @Input() public applyColorTo: 'column' | 'row' = 'column';\n\n  /**\n   * @Input : Angular\n   * @description Knowing that saturation scale is [0, 1], `colorsSaturationWeight` is a\n   * factor (between 0 and 1) that tightens this scale to [(1-colorsSaturationWeight), 1].\n   * Therefore saturation of generated colors will be within this tightened scale.\n   */\n  @Input() public colorsSaturationWeight;\n\n  /**\n   * @description Allow to select a row by a checkbox\n   */\n  @Input() public selectWithCheckbox = true;\n\n  /**\n   * @description Allow to select display mode for headers.\n   */\n  @Input() public headerDisplayMode: 'chip' | 'title' | 'full' = 'chip';\n\n  /**\n   * @description Normalise bars progression based on the maximum value of each column OR of the whole table\n   */\n  @Input() public normaliseBy: 'column' | 'table' = 'table';\n  @Input() public showRowField = true;\n\n  @Output() public onSelect = new EventEmitter<Set<string>>();\n\n  @ViewChild('tableHeader') protected header: ElementRef;\n\n\n  // keep it time complexity o(1) with get.\n  /** Map of <term-list.of.powerbars.corresponding.to.this.term.> */\n  protected powerBarsMap: Map<string, PowerBar[]> = new Map();\n  protected selectedKeys: Set<string> = new Set();\n  protected selectedRows: Map<string, MetricsTableRow> = new Map();\n  protected pendingMode = false;\n  protected titleAreDifferent = true;\n  protected uniqueTitles: MetricsTableHeader[];\n\n\n  public constructor(private readonly colorService: ArlasColorService, private readonly cdr: ChangeDetectorRef) {\n    this.colorService.changekeysToColors$.subscribe(() => {\n      this.powerBarsMap.forEach(powerbarsRow => {\n        powerbarsRow.forEach(p => {\n          if (this.useColorService) {\n            this.defineColor(p.term);\n          }\n        });\n      });\n    });\n  }\n\n  public ngOnInit(): void {\n    if (this.metricsTable) {\n      this.updateSelectedTermWithDefaultValue();\n      this.buildPowerBars();\n      this.buildHeaders();\n    }\n  }\n\n  public ngOnChanges(changes: SimpleChanges): void {\n    if (changes.metricsTable) {\n      if (this.metricsTable !== undefined && this.metricsTable !== null) {\n        this.ngOnInit();\n      }\n    }\n    if (changes.selectedTerms) {\n      this.updateSelection(this.selectedTerms);\n    }\n  }\n\n  public buildHeaders() {\n    this.uniqueTitles = [];\n    let previousId = '';\n    let nextIndex = 0;\n    this.metricsTable.header.forEach((header, i) => {\n      header.color = this.defineColor(header.title);\n      const currentId = header.title + header.rowfield;\n      if (currentId !== previousId) {\n        header.span = 1;\n        this.uniqueTitles.push(header);\n        nextIndex++;\n        previousId = currentId;\n      } else {\n        this.uniqueTitles[nextIndex - 1].span++;\n      }\n    });\n    this.titleAreDifferent = this.uniqueTitles.length === this.metricsTable?.data[0]?.data.length;\n\n  }\n\n  private updateSelectedTermWithDefaultValue() {\n    if (this.selectedTerms && this.selectedTerms.length > 0) {\n      this.selectedTerms.forEach(selectedTerm => {\n        this.selectedKeys.add(selectedTerm);\n      });\n    }\n    this.togglePendingMode();\n  }\n\n  public buildPowerBars() {\n    this.powerBarsMap.clear();\n    this.clearAll();\n    this.metricsTable.data?.forEach((merticsRow, rowIndex) => {\n      this.powerBarsMap.set(merticsRow.term, []);\n      merticsRow.data.forEach((item, i) => {\n        let powerBar: PowerBar;\n        if (this.applyColorTo === 'row') {\n          powerBar = new PowerBar(merticsRow.term, merticsRow.term, item?.value);\n        } else {\n          const header = this.metricsTable.header[i];\n          powerBar = new PowerBar(header.title, header.title, item?.value);\n        }\n        if (item) {\n          let maxValue;\n          if (this.normaliseBy === 'table') {\n            maxValue = item.maxTableValue;\n          } else {\n            maxValue = item.maxColumnValue;\n          }\n          powerBar.progression = (item.value / maxValue) * 100;\n        }\n        if (this.useColorService) {\n          powerBar.color = this.defineColor(powerBar.term);\n        }\n        if (this.selectedKeys.has(merticsRow.term)) {\n          merticsRow.selected = true;\n          this.selectedRows.set(merticsRow.term, merticsRow);\n        }\n        this.powerBarsMap.get(merticsRow.term).push(powerBar);\n      });\n    });\n  }\n\n  public updateSelection(keys: string[]) {\n    this.selectedKeys = new Set(keys);\n    this.clearAll();\n    keys.forEach(key => this.updateSelectedRow(key));\n    this.togglePendingMode();\n  }\n\n  public clearAll() {\n    this.metricsTable?.data?.forEach(row => row.selected = false);\n    this.selectedRows.clear();\n  }\n  public addTermToSelectedList(key: string) {\n    this.updateSelectedRow(key);\n    this.updateSelectedTerm(key);\n    this.togglePendingMode();\n  }\n\n  public updateSelectedTerm(key: string) {\n    if (this.selectedKeys.has(key)) {\n      this.selectedKeys.delete(key);\n    } else {\n      this.selectedKeys.add(key);\n    }\n    this.onSelect.emit(this.selectedKeys);\n  }\n\n\n  public updateSelectedRow(key: string) {\n    const row = this.metricsTable.data.find(row => row.term === key);\n    if (this.selectedRows.has(key)) {\n      row.selected = false;\n      this.selectedRows.delete(key);\n    } else if (row) {\n        row.selected = true;\n        this.selectedRows.set(key, row);\n      } else {\n        /** If we select a row that does not exists, it means we data is not  */\n      }\n  }\n\n  public togglePendingMode() {\n    this.pendingMode = this.selectedKeys.size !== 0;\n  }\n\n  public trackByFn(index, item) {\n    return item.term; // Use the 'id' property as the unique identifier\n  }\n\n  // preserve order of insertion\n  public originalOrder = (a: KeyValue<string, MetricsTableRow>, b: KeyValue<string, MetricsTableRow>): number => 0;\n\n  private defineColor(key: string) {\n    const rgbaColor = tinycolor.default(this.colorService.getColor(key, this.keysToColors,\n      this.colorsSaturationWeight)).toRgb();\n    return this.getPowerbarColor(rgbaColor);\n  }\n\n  private getPowerbarColor(rgbaColor: tinycolor.ColorFormats.RGBA): string {\n    return 'rgba(' + [rgbaColor.r, rgbaColor.g, rgbaColor.b, 0.7].join(',') + ')';\n  }\n\n  public static getJsonSchema(): Object {\n    return metricTableJsonSchema;\n  }\n\n  public setOperator(op: 'Eq' | 'Neq'): void {\n    if (this.filterOperator.value !== op) {\n      this.filterOperator.value = op;\n      this.filterOperatorEvent.next(op);\n    }\n  }\n}\n","<div class=\"tools\">\n  <div *ngIf=\"filterOperator && filterOperator?.display\" class=\"include_exclude\">\n    <div class=\"operation\" [class.selected_operation]=\"filterOperator?.value === 'Eq'\" (click)=\"setOperator('Eq')\">\n      {{'include' | translate}}</div>\n    <div class=\"operation\" [class.selected_operation]=\"filterOperator?.value === 'Neq'\" (click)=\"setOperator('Neq')\">\n      {{'exclude' | translate}}</div>\n  </div>\n  <div *ngIf=\"filterOperator && !filterOperator?.display && filterOperator?.value === 'Neq'\" class=\"include_exclude\">\n    <div class=\"operation\" [class.exclude]=\"filterOperator?.value === 'Neq'\">{{'exclude' | translate}}</div>\n  </div>\n</div>\n<div class=\"table-overflow-wrapper\">\n  <table class=\"multi-bar\">\n    <thead #tableHeader>\n      <!-- Title area -->\n      <tr>\n        <th class=\"terms-head\"></th>\n        <ng-container *ngIf=\"titleAreDifferent; else displayOneTitle\">\n          <th class=\"multi-bar__header-indicator\" *ngFor=\"let header of metricsTable?.header; let i = index\">\n            <div>\n              <div class=\"container\">\n                <div *ngIf=\"headerDisplayMode === 'chip' || headerDisplayMode === 'full'\" class=\"header-indicator\"\n                  [style]=\"{'background': header.color}\" [matTooltip]=\"header.title | getCollectionDisplayName |  translate\"></div>\n                <div class=\"separator\" *ngIf=\"headerDisplayMode === 'full'\"></div>\n                <div class=\"multi-bar__header-title-with-indicator\" [matTooltip]=\"header.title | getCollectionDisplayName |  translate\"\n                  *ngIf=\"headerDisplayMode === 'title' || headerDisplayMode === 'full'\">{{ header.title | getCollectionDisplayName | translate }}\n                </div>\n              </div>\n              <div class=\"multi-bar__header-rowfield\" [matTooltip]=\"header.rowfield | translate\" *ngIf=\"showRowField\">{{\n                header.rowfield | getFieldDisplayName | translate }}</div>\n\n            </div>\n          </th>\n        </ng-container>\n        <ng-template #displayOneTitle>\n          <th *ngFor=\"let header of uniqueTitles\" class=\"multi-bar__header-indicator\"\n            [style.width.px]=\"header.span * 70\" [attr.colspan]=\"header.span\">\n            <div class=\"container\">\n              <div *ngIf=\"headerDisplayMode === 'chip' || headerDisplayMode === 'full'\" class=\"header-indicator\"\n                [style]=\"{'background': header.color}\" [matTooltip]=\"header.title | getCollectionDisplayName | translate\"></div>\n              <div class=\"separator\" *ngIf=\"headerDisplayMode === 'full'\"></div>\n              <div class=\"multi-bar__header-title-with-indicator\" [matTooltip]=\"header.title | getCollectionDisplayName | translate\"\n                *ngIf=\"headerDisplayMode === 'title' || headerDisplayMode === 'full'\">{{ header.title | getCollectionDisplayName | translate }}\n              </div>\n            </div>\n            <div class=\"multi-bar__header-rowfield\" [matTooltip]=\"header.rowfield | translate\" *ngIf=\"showRowField\">\n              {{header.rowfield | getFieldDisplayName | translate}}</div>\n          </th>\n        </ng-template>\n      </tr>\n      <!-- Sub Title area -->\n      <tr>\n        <th class=\"terms-head\"></th>\n        <th class=\"column-head multi-bar__header\" *ngFor=\"let header of metricsTable?.header; let i = index\">\n          <div *ngIf=\"header.metric !== 'count'\"\n            [matTooltip]=\"'METRIC_COLUMN_TITLE' | translate:  { metric: 'METRIC_COLUMN_' + header.metric | translate, field : header.subTitle | getFieldDisplayName | translate }\"\n            class=\"multi-bar__header-item multi-bar__header-item-title\">\n            {{'METRIC_COLUMN_TITLE' | translate: { metric: 'METRIC_COLUMN_' + header.metric | translate, field :\n            header.subTitle | getFieldDisplayName |\n            translate } }}\n          </div>\n          <div *ngIf=\"header.metric === 'count'\" [matTooltip]=\"'COUNT_COLUMN_TITLE' | translate\"\n            class=\"multi-bar__header-item multi-bar__header-item-title\">\n            {{'COUNT_COLUMN_TITLE' | translate }}\n          </div>\n        </th>\n      </tr>\n    </thead>\n    <ng-container *ngFor=\"let item of metricsTable?.data; let index = index;trackBy: trackByFn\">\n      <arlas-multi-bars-row *ngIf=\"item?.selected\" [metricsTableRow]=\"item\" [useColorFromData]=\"false\"\n        [hideSelection]=\"false\" [useColorService]=\"useColorService\" [powerBars]=\"powerBarsMap.get(item.term)\"\n        [displayCheckBox]=\"selectWithCheckbox\" (rowSelected)=\"addTermToSelectedList($event)\">\n      </arlas-multi-bars-row>\n    </ng-container>\n    <arlas-multi-bars-row *ngFor=\"let row of metricsTable?.data; let index = index;trackBy: trackByFn\"\n      [metricsTableRow]=\"row\" [selected]=\"row.selected\" [hideSelection]=\"true\" [useColorFromData]=\"false\"\n      [useColorService]=\"useColorService\" [powerBars]=\"powerBarsMap.get(row.term)\"\n      [displayCheckBox]=\"selectWithCheckbox\" [pendingMode]=\"pendingMode\" (rowSelected)=\"addTermToSelectedList($event)\">\n    </arlas-multi-bars-row>\n  </table>\n</div>","/*\n * Licensed to Gisaïa under one or more contributor\n * license agreements. See the NOTICE.txt file distributed with\n * this work for additional information regarding copyright\n * ownership. Gisaïa licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  standalone: true,\n  name: 'formatLongTitle'\n})\nexport class FormatLongTitlePipe implements PipeTransform {\n\n  public transform(value: string, maxLength: number): unknown {\n    if(!value){\n      return  '';\n    }\n\n    if(value.trim().length <= maxLength){\n      return  value;\n    }\n\n    return `${value.substring(0, maxLength - 3)}...`;\n  }\n\n}\n","/*\n * Licensed to Gisaïa under one or more contributor\n * license agreements. See the NOTICE.txt file distributed with\n * this work for additional information regarding copyright\n * ownership. Gisaïa licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport { CommonModule, NgClass, NgForOf, NgIf, UpperCasePipe } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { PowerbarModule } from '../../powerbars/powerbar/powerbar.module';\nimport { MetricsTableRowComponent } from './metrics-table-row.component';\n\n@NgModule({\n    imports: [\n        MatCheckboxModule,\n        NgClass,\n        PowerbarModule,\n        UpperCasePipe,\n        NgIf,\n        NgForOf\n    ],\n    declarations: [MetricsTableRowComponent],\n    exports: [MetricsTableRowComponent]\n})\nexport class MetricsTableRowModule { }\n","/*\n * Licensed to Gisaïa under one or more contributor\n * license agreements. See the NOTICE.txt file distributed with\n * this work for additional information regarding copyright\n * ownership. Gisaïa licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { NgModule } from '@angular/core';\nimport { GetCollectionDisplayNamePipe } from './get-collection-display-name.pipe';\n\n@NgModule({\n  imports: [\n  ],\n  declarations: [\n    GetCollectionDisplayNamePipe\n  ],\n  exports: [\n    GetCollectionDisplayNamePipe\n  ]\n})\nexport class GetCollectionDisplayModule {}\n","/*\n * Licensed to Gisaïa under one or more contributor\n * license agreements. See the NOTICE.txt file distributed with\n * this work for additional information regarding copyright\n * ownership. Gisaïa licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { NgModule } from '@angular/core';\nimport { GetFieldDisplayNamePipe } from './get-field-display-name.pipe';\n\n@NgModule({\n  imports: [\n  ],\n  declarations: [\n    GetFieldDisplayNamePipe\n  ],\n  exports: [\n    GetFieldDisplayNamePipe\n  ]\n})\nexport class GetFieldDisplayModule {}\n","/*\n * Licensed to Gisaïa under one or more contributor\n * license agreements. See the NOTICE.txt file distributed with\n * this work for additional information regarding copyright\n * ownership. Gisaïa licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport { AsyncPipe, KeyValuePipe, NgClass, NgForOf, NgIf, UpperCasePipe } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { MetricsTableComponent } from './metrics-table.component';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { PowerbarModule } from '../powerbars/powerbar/powerbar.module';\nimport { FormatLongTitlePipe } from '../../pipes/format-title/format-long-title.pipe';\nimport { MetricsTableRowModule } from './multi-bars-row/metrics-table-row.module';\nimport { GetCollectionDisplayModule } from '../../pipes/get-collection-display-name/get-collection-display.module';\nimport { GetFieldDisplayModule } from '../../pipes/get-field-display-name/get-field-display.module';\n@NgModule({\n    imports: [\n        PowerbarModule,\n        MatTooltipModule,\n        NgForOf,\n        NgClass,\n        NgIf,\n        UpperCasePipe,\n        MatCheckboxModule,\n        TranslateModule,\n        MetricsTableRowModule,\n        FormatLongTitlePipe,\n        AsyncPipe,\n        KeyValuePipe,\n        GetCollectionDisplayModule,\n        GetFieldDisplayModule\n    ],\n    declarations: [MetricsTableComponent],\n    exports: [MetricsTableComponent]\n})\nexport class MetricsTableModule { }\n","/*\n * Licensed to Gisaïa under one or more contributor\n * license agreements. See the NOTICE.txt file distributed with\n * this work for additional information regarding copyright\n * ownership. Gisaïa licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Component, Input, OnChanges, OnInit, Output, SimpleChanges } from '@angular/core';\nimport { UntypedFormControl, UntypedFormGroup } from '@angular/forms';\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\nimport moment from 'moment';\nimport { Observable, Subject } from 'rxjs';\nimport { retry, timeout } from 'rxjs/operators';\n\nexport interface GetTilesInfo {\n  url: string;\n  zoomMax: number;\n  zoomMin: number;\n  bbox: Array<number>;\n  md: Object;\n}\n\nexport interface Dimension {\n  identifier: string;\n  abstract: string;\n  values: Array<string>;\n  startDate?: Date;\n  endDate?: Date;\n}\n\nexport interface LayerParam {\n  styles: Array<string>;\n  dimensions?: Array<Dimension>;\n}\n\n\n@Component({\n  templateUrl: './wmts-layer-manager-dialog.component.html',\n  selector: 'arlas-wmts-layer-manager-dialog',\n  styleUrls: ['./wmts-layer-manager-dialog.component.css']\n})\nexport class WmtsLayerManagertDialogComponent implements OnInit {\n  public layer: string;\n  public style: string;\n  public formGroup: UntypedFormGroup;\n  public imageToShow: any;\n  public isImageLoading = false;\n  public showError = false;\n  public previewLoading = false;\n  public launchPreview = false;\n  @Input() public layers: Array<string>;\n  @Input() public styles: Array<string>;\n  @Input() public metadata: Map<string, string>;\n  @Input() public dimensions: Array<Dimension>;\n  @Input() public data: Map<string, LayerParam>;\n  @Input() public isDimension: boolean;\n  @Output() public clickTopreview = new Subject<any>();\n\n  public constructor(private dialogRef: MatDialogRef<WmtsLayerManagertDialogComponent>, private http: HttpClient) { }\n\n  public ngOnInit() {\n    const l = new Array();\n    this.data.forEach((value: LayerParam, key: string) => {\n      l.push(key);\n    });\n    this.layers = l;\n    this.formGroup = new UntypedFormGroup({\n      layer: new UntypedFormControl(),\n      style: new UntypedFormControl(),\n    });\n  }\n\n  public selectionChange(event) {\n    this.style = undefined;\n    this.styles = new Array();\n    this.styles = this.data.get(event.value).styles;\n    this.dimensions = this.data.get(event.value).dimensions;\n    this.dimensions.forEach(d => {\n      this.formGroup.addControl(d.identifier, new UntypedFormControl);\n    });\n  }\n  public clickOnPreview() {\n    this.previewLoading = true;\n    this.launchPreview = true;\n    this.clickTopreview.next(this.formGroup.value);\n  }\n\n  public previewUrl(url: string) {\n    this.isImageLoading = true;\n    this.getImage(url).subscribe(data => {\n      this.createImageFromBlob(data);\n      this.isImageLoading = false;\n    }, error => {\n      this.isImageLoading = false;\n      this.showError = true;\n    });\n  }\n\n  private getImage(imageUrl: string): Observable<Blob> {\n    return this.http.get(imageUrl, { responseType: 'blob' });\n  }\n\n  private createImageFromBlob(image: Blob) {\n    const reader = new FileReader();\n    reader.addEventListener('load', () => {\n      this.imageToShow = reader.result;\n    }, false);\n\n    if (image) {\n      reader.readAsDataURL(image);\n    }\n  }\n}\n\n@Component({\n  selector: 'arlas-wmts-layer-manager',\n  templateUrl: './wmts-layer-manager.component.html',\n  styleUrls: ['./wmts-layer-manager.component.css']\n})\nexport class WmtsLayerManagerComponent implements OnInit, OnChanges {\n  public dialogRef: MatDialogRef<WmtsLayerManagertDialogComponent>;\n  /**\n   * @Input : Angular\n   * @description Url to access  getCapabilities endpoint of WMTS service\n   */\n  @Input() public getCapaUrl: string;\n  /**\n   * @Input : Angular\n   * @description Metadata of product to display (optional)\n   */\n  @Input() public metadata: Map<string, string>;\n  /**\n   * @Input : Angular\n   * @description Base url to access getTiles endpoint of WMTS service\n   * If this input is  provided, we use it to build getTiles endpoint\n   * If this input is not provided, we try to find it in getCapabilities response\n   */\n  @Input() public getTilesBaseUrl: string;\n  /**\n  * @Input : Angular\n  * @description Version of WMTS service\n  * If this input is  provided, we use it to build getTiles endpoint\n  * If this input is not provided, we try to find it in getCapabilities response\n  */\n  @Input() public version: string;\n  /**\n  * @Input : Angular\n  * @description Format of getTile response\n  * If getCapabilities does not contains this format, we send an error\n   */\n  @Input() public format: string;\n  /**\n  * @Input : Angular\n  * @description Supported CRS code of WMTS service\n  */\n  @Input() public supportedCRSCode = new Array('3857', '900913');\n  /**\n* @Input : Angular\n* @description String date Format for time input\n*/\n  @Input() public dateFormat = 'YYYY-MM-DDT00:00:00';\n  /**\n  * @Input : Angular\n  * @description Value to use in TileMatrixSet\n  * If this input is  provided, we use it and we dont search TileMatrixSet in getCapabilities\n  */\n  @Input() public tileMatrixSetIdenttifier: string;\n  /**\n   * @Output : Angular\n   * @description Emit the information needed by a wmts client to view a product\n   */\n  @Output() public getTilesInfoBus = new Subject<GetTilesInfo>();\n  /**\n   * @Output : Angular\n   * @description Emit all errors of the component\n   */\n  @Output() public onError = new Subject<Error>();\n\n  public errorInRun = false;\n  public isGetCapaLoading = false;\n\n  public constructor(public dialog: MatDialog, private http: HttpClient) {\n\n  }\n\n  public ngOnInit() {\n  }\n\n  public ngOnChanges(changes: SimpleChanges) {\n    if (changes['getCapaUrl'] !== undefined) {\n      this.getCapaUrl = changes['getCapaUrl'].currentValue;\n    }\n  }\n\n\n  public run(header?: HttpHeaders, md = {}, timeoutDuration: number = 100000, numberOfRetry: number = 0) {\n    // Call the gatCapabilities services\n    this.errorInRun = false;\n    this.isGetCapaLoading = true;\n    const httpCall: Observable<string> = this.http.get(this.getCapaUrl, { headers: header, responseType: 'text' });\n    httpCall\n      .pipe(timeout(timeoutDuration),\n        retry(numberOfRetry))\n      .subscribe(\n        response => {\n          try {\n            const parser = new DOMParser();\n            const xmlDoc = parser.parseFromString(response, 'text/xml');\n            const data = this.geLayerToData(xmlDoc);\n            // if getCapa contains juste one layer and one style we just build the url and send it to the bus\n            const mapSize = data.size;\n            if (mapSize === 0) {\n              const nonDataError: Error = new Error('NoStyle-NoLayer');\n              this.errorInRun = true;\n              this.onError.next(nonDataError);\n            }\n            if (mapSize === 1 && data.values().next().value.styles.length === 1) {\n              // update layer and style\n              this.getTilesInfoBus.next(this.buildGetTileInfo(xmlDoc, data.keys().next().value, data.values().next().value.styles[0], md));\n            } else {\n              this.dialogRef = this.dialog.open(WmtsLayerManagertDialogComponent, { data: response });\n              this.isGetCapaLoading = false;\n              this.dialogRef.componentInstance.data = data;\n              this.dialogRef.componentInstance.metadata = this.metadata;\n              this.dialogRef.afterClosed().subscribe(formGroupValue => {\n                if (formGroupValue) {\n                  const getTileInfo = this.buildGetTileInfo(xmlDoc,\n                    formGroupValue.layer,\n                    formGroupValue.style, md,\n                    this.getDimensionsFromGroupValues(formGroupValue));\n                  if (!this.errorInRun) {\n                    this.getTilesInfoBus.next(getTileInfo);\n                  }\n                }\n              });\n              this.dialogRef.componentInstance.clickTopreview.subscribe(formGroupValue => {\n                const getTileInfo = this.buildGetTileInfo(xmlDoc,\n                  formGroupValue.layer,\n                  formGroupValue.style, md,\n                  this.getDimensionsFromGroupValues(formGroupValue));\n                if (!this.errorInRun) {\n                  // bounds[[west,south][east,north]]\n                  const bounds = getTileInfo.bbox;\n                  const previewURL = getTileInfo.url\n                    .replace('{x}', '0')\n                    .replace('{y}', '0')\n                    .replace('{z}', '0');\n                  this.dialogRef.componentInstance.previewUrl(previewURL);\n                }\n              });\n            }\n          } catch (e) {\n            this.onError.next(e);\n            this.isGetCapaLoading = false;\n          }\n        },\n        error => {\n          this.isGetCapaLoading = false;\n          this.onError.next(error);\n        });\n  }\n\n  public geLayerToData(xmlDoc: Document): Map<string, LayerParam> {\n    const layerToData: Map<string, LayerParam> = new Map<string, LayerParam>();\n    const layers = Array.from(xmlDoc.getElementsByTagName('Layer'));\n    layers.forEach(l => {\n      const identifier = l.getElementsByTagName('ows:Identifier')[0].textContent.replace(/\\n/g, '');\n      const styles = Array.from(l.getElementsByTagName('Style'))\n        .map(s => s.getElementsByTagName('ows:Identifier')[0].textContent.replace(/\\n/g, ''));\n      const data = {\n        styles: styles,\n        dimensions: this.getDimension(l)\n      };\n      layerToData.set(identifier, data);\n    });\n    return layerToData;\n  }\n\n  public getDimension(layerElement: Element): Array<Dimension> {\n    const dimensionElements = layerElement.getElementsByTagName('Dimension');\n    const allDimension: Array<Dimension> = Array.from(dimensionElements).map(e => {\n      const abstracts = e.getElementsByTagName('ows:Abstract');\n      let abstract;\n      if (abstracts && abstracts.length > 0) {\n        abstract = abstracts[0].textContent.replace(/\\n/g, '');\n      }\n      return {\n        identifier: e.getElementsByTagName('ows:Identifier')[0].textContent.replace(/\\n/g, ''),\n        abstract: abstract,\n        values: Array.from(e.getElementsByTagName('Value')).map(el => el.textContent.replace(/\\n/g, ''))\n      };\n    });\n    const timeDimension = allDimension.filter(r => r.identifier === 'time').map(r => {\n      let startDate = null;\n      let endDate = null;\n      if (r.abstract && r.abstract.indexOf('/') > 0) {\n        startDate = new Date(r.abstract.split('/')[0]);\n        endDate = new Date(r.abstract.split('/')[1]);\n        r.startDate = startDate;\n        r.endDate = endDate;\n      }\n      return r;\n    })[0];\n    const result = allDimension.filter(r => r.identifier !== 'time').concat(timeDimension);\n    return result.filter(data => data !== undefined);\n  }\n\n  public getFormat(xmlDoc: Document, layer: string): string {\n    const layerElement = Array.from(xmlDoc.getElementsByTagName('Layer'))\n      .filter(l => l.getElementsByTagName('ows:Identifier')[0].textContent.replace(/\\n/g, '') === layer)[0];\n    if (!this.format) {\n      const format = Array.from(layerElement.getElementsByTagName('Format'))\n        .map(e => e.textContent);\n      return format[0];\n    } else {\n      const format = Array.from(layerElement.getElementsByTagName('Format'))\n        .filter(f => f.textContent === this.format).map(e => e.textContent);\n      if (new Set(format).has(this.format)) {\n        return this.format;\n      } else {\n        const formatError = new Error(this.format.concat(' does not exist for layer ').concat(layer));\n        this.errorInRun = true;\n        this.onError.next(formatError);\n      }\n    }\n  }\n\n  public getVersion(xmlDoc): string {\n    if (this.version === undefined) {\n      try {\n        return xmlDoc.getElementsByTagName('ows:ServiceTypeVersion')[0].textContent;\n      } catch (e) {\n        this.onError.next(new Error(e));\n      }\n    } else {\n      return this.version;\n    }\n  }\n\n  public getKVPBaseUrl(xmlDoc: Document): string {\n    if (this.getTilesBaseUrl === undefined) {\n      try {\n        const getCapaOperationNode = Array.from(xmlDoc\n          .getElementsByTagName('ows:OperationsMetadata')[0]\n          .getElementsByTagName('ows:Operation'))\n          .filter(element => element.getAttribute('name') === 'GetCapabilities')[0];\n\n        const getKvpNode = Array.from(getCapaOperationNode.\n          getElementsByTagName('ows:Get'))\n          .filter(element => Array.from(element.getElementsByTagName('ows:Value'))\n            .filter(e => e.textContent === 'KVP').length > 0)[0];\n        return getKvpNode.getAttribute('xlink:href');\n      } catch (e) {\n        this.onError.next(e);\n      }\n    } else {\n      return this.getTilesBaseUrl;\n    }\n  }\n\n  public getTileMatrixSet(xmlDoc: Document, layer: string): string {\n    if (this.tileMatrixSetIdenttifier === undefined) {\n      const layerElement = Array.from(xmlDoc.getElementsByTagName('Layer'))\n        .filter(l => l.getElementsByTagName('ows:Identifier')[0].textContent.replace(/\\n/g, '') === layer)[0];\n      const tileMatrixSetForLayer = Array.from(layerElement\n        .getElementsByTagName('TileMatrixSetLink'))\n        .map(t => t.getElementsByTagName('TileMatrixSet'))\n        .map(t => t[0].textContent);\n      const tileMatrixSet = Array.from(xmlDoc.getElementsByTagName('TileMatrixSet'))\n        .filter(l => l.children.length > 0)\n        .filter(l => tileMatrixSetForLayer.indexOf(l.getElementsByTagName('ows:Identifier')[0].textContent.replace(/\\n/g, '')) >= 0)\n        .filter(l => {\n          const codeArray = [];\n          this.supportedCRSCode.forEach(code => {\n            if (l.getElementsByTagName('ows:SupportedCRS')[0].textContent.replace(/\\n/g, '').indexOf(code) >= 0) {\n              codeArray.push(code);\n            }\n          });\n          return codeArray.length > 0;\n        }).map(l => l.getElementsByTagName('ows:Identifier')[0].textContent.replace(/\\n/g, ''));\n      return tileMatrixSet[0];\n    } else {\n      return this.tileMatrixSetIdenttifier;\n    }\n  }\n\n  public getBbox(xmlDoc: Document, layer: string): Array<number> {\n    const layerElement = Array.from(xmlDoc.getElementsByTagName('Layer'))\n      .filter(l => l.getElementsByTagName('ows:Identifier')[0].textContent.replace(/\\n/g, '') === layer)[0];\n    const lowerCornerText = layerElement\n      .getElementsByTagName('ows:WGS84BoundingBox')[0]\n      .getElementsByTagName('ows:LowerCorner')[0]\n      .textContent;\n    const upperCornerText = layerElement\n      .getElementsByTagName('ows:WGS84BoundingBox')[0]\n      .getElementsByTagName('ows:UpperCorner')[0]\n      .textContent;\n    const bounds = new Array<number>();\n    // west\n    bounds.push(parseFloat(lowerCornerText.split(' ')[0]));\n    // south\n    bounds.push(parseFloat(lowerCornerText.split(' ')[1]));\n    // east\n    bounds.push(parseFloat(upperCornerText.split(' ')[0]));\n    // north\n    bounds.push(parseFloat(upperCornerText.split(' ')[1]));\n    return bounds;\n  }\n\n  public getZoomMinMax(xmlDoc: Document): Array<number> {\n    const numberOfTileMatrixSetTag = xmlDoc.getElementsByTagName('TileMatrixSet').length;\n    const numberOfTileMatrixTag = xmlDoc\n      .getElementsByTagName('TileMatrixSet')[numberOfTileMatrixSetTag - 1]\n      .getElementsByTagName('TileMatrix').length;\n    const maxZoom = xmlDoc\n      .getElementsByTagName('TileMatrixSet')[numberOfTileMatrixSetTag - 1]\n      .getElementsByTagName('TileMatrix')[numberOfTileMatrixTag - 1].children[0].textContent;\n    const minZoom = parseInt(maxZoom, 10) - numberOfTileMatrixTag + 1;\n    return [minZoom, parseInt(maxZoom, 10)];\n  }\n\n  public buildGetTileUrl(xmlDoc: Document, layer: string, style: string, dimensions?: Object): string {\n    let baseURL = this.getKVPBaseUrl(xmlDoc);\n    if (baseURL[baseURL.length - 1] === '?') {\n      baseURL = baseURL.substring(0, baseURL.length - 1);\n    }\n    const version = this.getVersion(xmlDoc);\n    const tileMatrixSet = this.getTileMatrixSet(xmlDoc, layer);\n    const format = this.getFormat(xmlDoc, layer);\n    let url = '';\n    url = url.concat(baseURL)\n      .concat('?')\n      .concat('SERVICE=WMTS&')\n      .concat('REQUEST=GetTile&')\n      .concat('VERSION=').concat(version).concat('&')\n      .concat('LAYER=').concat(layer).concat('&')\n      .concat('STYLE=').concat(style).concat('&')\n      .concat('FORMAT=').concat(format).concat('&')\n      .concat('TileMatrixSet=').concat(tileMatrixSet).concat('&')\n      .concat('TileMatrix=').concat('{z}').concat('&')\n      .concat('TileRow=').concat('{y}').concat('&')\n      .concat('TileCol=').concat('{x}');\n\n    if (dimensions) {\n      Object\n        .keys(dimensions)\n        .forEach(e => url = url.concat('&').concat(e).concat('=').concat(dimensions[e]));\n    }\n    return url;\n  }\n\n  public buildGetTileInfo(xmlDoc: Document, layer: string, style: string, md: Object, dimensions?: Object): GetTilesInfo {\n    const getTilesInfo = {\n      url: this.buildGetTileUrl(xmlDoc, layer, style, dimensions),\n      zoomMax: this.getZoomMinMax(xmlDoc)[1],\n      zoomMin: this.getZoomMinMax(xmlDoc)[0],\n      bbox: this.getBbox(xmlDoc, layer),\n      md: md\n    };\n    return getTilesInfo;\n  }\n\n  public getDimensionsFromGroupValues(formGroup: any): Object {\n    const dimensions = {};\n    Object.keys(formGroup).filter(e => e !== 'style').filter(e => e !== 'layer')\n      .forEach(e => dimensions[e] = formGroup[e]);\n    if (dimensions['time']) {\n      dimensions['time'] = moment(dimensions['time']).format(this.dateFormat);\n    }\n    return dimensions;\n  }\n}\n","<h2 mat-dialog-title class=\"wmts-layer-manager-title\">{{'Layers and style' | translate}}</h2>\n<mat-dialog-content class=\"wmts-layer-manager-content\">\n    <mat-card appearance=\"outlined\" class=\"wmts-layer-manager-metadata-card\" *ngIf=\"metadata\">\n        <div class=\"wmts-layer-manager-metadata\">\n            <mat-list>\n                <h3 mat-subheader>{{'Informations' | translate}}</h3>\n                <mat-list-item class=\"wmts-layer-manager-metadata-list\" *ngFor=\"let item of metadata | keyvalue\">\n                    <h4 mat-line class=\"wmts-layer-manager-metadata-title\">{{item.key}}</h4>\n                    <p mat-line class=\"wmts-layer-manager-metadata-value\"> {{item?.value}} </p>\n                </mat-list-item>\n            </mat-list>\n        </div>\n    </mat-card>\n    <form class=\"wmts-layer-manager-form\" [formGroup]=\"formGroup\">\n        <mat-form-field class=\"wmts-layer-manager-field\">\n            <mat-select [(value)]=\"layer\" placeholder=\"{{'Choose layer'| translate}}...\" (selectionChange)=\"selectionChange($event)\"\n                formControlName=\"layer\">\n                <mat-option *ngFor=\"let layer of layers\" [value]=\"layer\">\n                    {{layer}}\n                </mat-option>\n            </mat-select>\n        </mat-form-field>\n        <mat-form-field class=\"wmts-layer-manager-field\">\n            <mat-select placeholder=\"{{'Choose style'| translate}}...\" [(value)]=\"style\" formControlName=\"style\">\n                <mat-option *ngFor=\"let style of styles\" [value]=\"style\">\n                    {{style}}\n                </mat-option>\n            </mat-select>\n        </mat-form-field>\n        <div *ngFor=\"let dimension of dimensions\">\n            <div *ngIf=\"dimension.identifier==='time'\">\n                <mat-form-field class=\"wmts-layer-manager-field\">\n                    <input matInput autocomplete=\"off\" [matDatepicker]=\"picker\" placeholder=\"{{'Choose date'| translate}}\" formControlName={{dimension.identifier}}\n                        [max]=dimension.endDate [min]=dimension.startDate>\n                    <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n                    <mat-datepicker #picker></mat-datepicker>\n                </mat-form-field>\n            </div>\n            <div *ngIf=\"dimension.identifier !=='time'\">\n                <mat-form-field class=\"wmts-layer-manager-field\">\n                    <mat-select formControlName={{dimension.identifier}} placeholder=\"{{'Choose' | translate}} {{dimension.identifier}}\">\n                        <mat-option *ngFor=\"let v of dimension.values\" [value]=\"v\">\n                            {{v}}\n                        </mat-option>\n                    </mat-select>\n                </mat-form-field>\n            </div>\n        </div>\n    </form>\n    <div *ngIf=\"launchPreview\" class=\"wmts-layer-manager-preview\" style=\"height: 256px;\">\n        <img class=\"wmts-layer-manager-image\" [src]=\"imageToShow\" alt=\"Preview of WMTS service\" *ngIf=\"imageToShow&&!isImageLoading&&!showError\">\n        <mat-progress-spinner class=\"wmts-layer-manager-spinner\" *ngIf=\"isImageLoading\" [diameter]=\"128\" [strokeWidth]=\"2\" mode=\"indeterminate\"></mat-progress-spinner>\n    </div>\n    <div class=\"wmts-layer-manager-error\" *ngIf=\"launchPreview && showError\">\n        <span>{{'Unable to preview this style for this layer'| translate}}</span>\n    </div>\n</mat-dialog-content>\n\n<div mat-dialog-actions>\n    <button mat-raised-button class=\"wmts-layer-manager-preview-button\" [disabled]=\"style==undefined||layer==undefined\" (click)=\"clickOnPreview()\">{{'Preview'| translate}}</button>\n    <button mat-raised-button class=\"wmts-layer-manager-view-button\" [disabled]=\"style==undefined||layer==undefined\" [mat-dialog-close]=\"formGroup.value\"\n        cdkFocusInitial>{{'View' | translate}}</button>\n</div>","\n","/*\n * Licensed to Gisaïa under one or more contributor\n * license agreements. See the NOTICE.txt file distributed with\n * this work for additional information regarding copyright\n * ownership. Gisaïa licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatNativeDateModule } from '@angular/material/core';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatListModule } from '@angular/material/list';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatSelectModule } from '@angular/material/select';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { WmtsLayerManagerComponent, WmtsLayerManagertDialogComponent } from './wmts-layer-manager.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    MatDialogModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatSelectModule,\n    MatDatepickerModule,\n    MatNativeDateModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MatProgressSpinnerModule,\n    MatCardModule,\n    TranslateModule,\n    MatListModule\n  ],\n  declarations: [WmtsLayerManagerComponent, WmtsLayerManagertDialogComponent],\n  exports: [WmtsLayerManagerComponent, WmtsLayerManagertDialogComponent]\n})\nexport class WmtsLayerManagerModule { }\n","/*\n * Licensed to Gisaïa under one or more contributor\n * license agreements. See the NOTICE.txt file distributed with\n * this work for additional information regarding copyright\n * ownership. Gisaïa licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport { Component, Input, ElementRef, ViewChild, AfterViewInit, Output, OnChanges, SimpleChanges, OnDestroy } from '@angular/core';\nimport { Dimensions, Granularity, Margins, Timeline, TimelineData, TimelineTooltip } from 'arlas-d3';\nimport { debounceTime, fromEvent, Subject, takeUntil } from 'rxjs';\n\nexport enum TranslationDirection {\n  past = 'past',\n  future = 'future'\n}\n\n@Component({\n  selector: 'arlas-calendar-timeline',\n  templateUrl: './calendar-timeline.component.html',\n  styleUrls: ['./calendar-timeline.component.scss']\n})\n/**\n * todo : documentation of the component\n */\nexport class CalendarTimelineComponent implements AfterViewInit, OnChanges, OnDestroy {\n\n  @Input() public id: string;\n  @Input() public granularity: Granularity;\n  @Input() public climatological: boolean;\n  @Input() public boundDates: Date[] = [];\n  @Input() public data: TimelineData[] = [];\n  @Input() public cursorPosition: Date;\n  @Input() public hideLeftButton: boolean;\n  @Input() public hideRightButton: boolean;\n\n  @Output() public selectedData: Subject<TimelineData> = new Subject();\n  @Output() public hoveredData: Subject<TimelineTooltip> = new Subject();\n  @Output() public translate: Subject<TranslationDirection> = new Subject();\n\n  public width: number;\n  public height: number;\n\n  private timeline: Timeline;\n\n  private _onDestroy$ = new Subject<boolean>();\n\n  @ViewChild('timeline_container', { static: false }) private timelineContainer: ElementRef;\n\n  public constructor() {\n    fromEvent(window, 'resize')\n      .pipe(debounceTime(500), takeUntil(this._onDestroy$))\n      .subscribe((event: Event) => {\n        const element: HTMLElement = this.timelineContainer.nativeElement;\n        const margins = (new Margins()).setBottom(5).setTop(5).setRight(5).setLeft(5);\n        this.width = element.offsetWidth;\n        this.height = 90;\n        const dimensions = (new Dimensions(this.width, this.height)).setMargins(margins);\n        if (this.timeline) {\n          this.timeline.setDimensions(dimensions);\n          this.timeline.plot();\n        }\n      });\n  }\n\n  public ngOnChanges(changes: SimpleChanges): void {\n    if (changes.data && this.timeline) {\n      this.timeline.setData(this.data);\n      if (this.timeline.boundDates && this.timeline.boundDates.length === 2) {\n        this.timeline.plot(true);\n      }\n    }\n    if (changes.boundDates && this.timeline) {\n      this.timeline.setBoundDates(this.boundDates);\n      this.timeline.plot();\n    }\n    if (changes.granularity && this.timeline) {\n      this.timeline.setGranularity(this.granularity);\n    }\n    if (changes.climatological && this.timeline) {\n      this.timeline.setClimatological(this.climatological);\n    }\n    if (changes.cursorPosition && this.timeline) {\n      this.timeline.moveCursor(this.cursorPosition);\n    }\n  }\n\n  public ngAfterViewInit(): void {\n    const element: HTMLElement = this.timelineContainer.nativeElement;\n    const svg = element.querySelector('svg');\n    const margins = (new Margins()).setBottom(5).setTop(5).setRight(5).setLeft(5);\n    this.width = element.offsetWidth;\n    this.height = 90;\n    const dimensions = (new Dimensions(this.width, this.height)).setMargins(margins);\n    this.timeline = (new Timeline(svg));\n    this.timeline.setDimensions(dimensions);\n    this.timeline.setBoundDates(this.boundDates);\n\n    this.timeline.hoveredData\n      .pipe(takeUntil(this._onDestroy$))\n      .subscribe(r => {\n        this.hoveredData.next(r);\n      });\n    this.timeline.selectedData\n      .pipe(takeUntil(this._onDestroy$))\n      .subscribe(r => {\n        this.selectedData.next(r);\n      });\n  }\n\n  public ngOnDestroy() {\n    this._onDestroy$.next(true);\n    this._onDestroy$.complete();\n  }\n\n  public plot(): void {\n    if (this.timeline) {\n      this.timeline.plot();\n    }\n  }\n\n  public translateFuture(): void {\n    this.translate.next(TranslationDirection.future);\n  }\n\n  public translatePast(): void {\n    this.translate.next(TranslationDirection.past);\n  }\n}\n","<div id=\"{{id}}\" #calendar_timeline class=\"calendar-timeline\">\n    <div class=\"container\">\n        <div class=\"move_button past\" [class.hide_left_button]=\"hideLeftButton\" (click)=\"translatePast()\" *ngIf=\"!climatological\">\n            <mat-icon class=\"chevron\">chevron_left</mat-icon>\n        </div>\n        <div class=\"svg_container\" \n            [class.svg_container_buttons_hidden]=\"hideLeftButton && hideRightButton\"\n            [class.svg_container_one_button_hidden]=\"(hideLeftButton && !hideRightButton) || (!hideLeftButton && hideRightButton)\"\n\n             #timeline_container>\n            <svg id=\"calendar-svg\" [style.width.px]=\"width\" [style.height.px]=\"height\" ></svg>\n        </div>\n        <div class=\"move_button future\" [class.hide_right_button]=\"hideRightButton\" (click)=\"translateFuture()\" *ngIf=\"!climatological\">\n            <mat-icon class=\"chevron\">chevron_right</mat-icon>\n        </div>\n    </div>\n\n</div>","/*\n * Licensed to Gisaïa under one or more contributor\n * license agreements. See the NOTICE.txt file distributed with\n * this work for additional information regarding copyright\n * ownership. Gisaïa licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport { NgModule} from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { CalendarTimelineComponent } from './calendar-timeline.component';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { MatIconModule } from '@angular/material/icon';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    TranslateModule,\n    MatIconModule\n  ],\n  declarations: [CalendarTimelineComponent],\n  exports: [CalendarTimelineComponent]\n})\nexport class CalendarTimelineModule { }\n","/*\n * Licensed to Gisaïa under one or more contributor\n * license agreements. See the NOTICE.txt file distributed with\n * this work for additional information regarding copyright\n * ownership. Gisaïa licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport { Injectable, Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n    name: 'getValue'\n})\n@Injectable()\nexport class GetValuePipe implements PipeTransform {\n  public transform<K, V>(value: K, map?: Map<K, V>): V {\n    return !!map ? map.get(value) : undefined;\n  }\n}\n","/*\n * Licensed to Gisaïa under one or more contributor\n * license agreements. See the NOTICE.txt file distributed with\n * this work for additional information regarding copyright\n * ownership. Gisaïa licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { CommonModule } from '@angular/common';\nimport { GetValuePipe } from './get-value.pipe';\nimport { NgModule } from '@angular/core';\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  declarations: [\n    GetValuePipe\n  ],\n  exports: [\n    GetValuePipe\n  ]\n})\nexport class GetValueModule {}\n","/*\n * Licensed to Gisaïa under one or more contributor\n * license agreements. See the NOTICE.txt file distributed with\n * this work for additional information regarding copyright\n * ownership. Gisaïa licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport { Injectable, Pipe, PipeTransform } from '@angular/core';\nimport { ArlasColorService } from '../../services/color.generator.service';\n\n@Pipe({\n    name: 'getColor'\n})\n@Injectable()\nexport class GetColorPipe implements PipeTransform {\n  public constructor(\n    private colorService: ArlasColorService\n  ) {}\n\n  public transform(key: string): string {\n    return this.colorService.getColor(key);\n  }\n}\n","/*\n * Licensed to Gisaïa under one or more contributor\n * license agreements. See the NOTICE.txt file distributed with\n * this work for additional information regarding copyright\n * ownership. Gisaïa licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { NgModule } from '@angular/core';\nimport { GetColorPipe } from './get-color.pipe';\nimport { ColorGeneratorModule } from '../../services/color.generator.module';\n\n@NgModule({\n  imports: [\n    ColorGeneratorModule\n  ],\n  declarations: [\n    GetColorPipe\n  ],\n  exports: [\n    GetColorPipe\n  ]\n})\nexport class GetColorModule {}\n","/*\n * Licensed to Gisaïa under one or more contributor\n * license agreements. See the NOTICE.txt file distributed with\n * this work for additional information regarding copyright\n * ownership. Gisaïa licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\n/*\n * Public API Surface of arlas-web-components\n */\nexport { ChartType, DataType, HistogramTooltip, Position, SimpleNode, SwimlaneMode, TreeNode, TimelineData } from 'arlas-d3';\nexport { AwcColorGeneratorLoader, ColorGeneratorLoader, numberToShortValue } from './lib/components/componentsUtils';\nexport { DonutComponent } from './lib/components/donut/donut.component';\nexport { DonutModule } from './lib/components/donut/donut.module';\nexport { HistogramComponent } from './lib/components/histogram/histogram.component';\nexport { HistogramModule } from './lib/components/histogram/histogram.module';\nexport { FilterOperator } from './lib/tools/models/term-filters';\nexport { PowerBar } from './lib/components/powerbars/model/powerbar';\nexport { PageEnum } from './lib/components/results/utils/enumerations/pageEnum';\nexport { ThumbnailFitEnum } from './lib/components/results/utils/enumerations/thumbnailFitEnum';\nexport { CellBackgroundStyleEnum } from './lib/components/results/utils/enumerations/cellBackgroundStyleEnum';\nexport { DetailedDataRetriever } from './lib/components/results/utils/detailed-data-retriever';\nexport {\n  Action, ElementIdentifier, FieldsConfiguration, DescribedUrl, ResultListOptions,\n  Attachment, AdditionalInfo, Field, PageQuery, PROTECTED_IMAGE_HEADER, ActionHandler\n} from './lib/components/results/utils/results.utils';\nexport { Item, ItemDetailGroup } from './lib/components/results/model/item';\nexport { Column } from './lib/components/results/model/column';\nexport { ResultListComponent } from './lib/components/results/result-list/result-list.component';\nexport { ResultItemComponent } from './lib/components/results/result-item/result-item.component';\nexport { ResultActionsComponent } from './lib/components/results/result-actions/result-actions.component';\nexport { ActionDisplayerPipe } from './lib/components/results/result-actions/result-actions.pipe';\nexport { ResultDetailedItemComponent } from './lib/components/results/result-detailed-item/result-detailed-item.component';\nexport { ResultsModule } from './lib/components/results/results.module';\nexport { ColorGeneratorModule, ColorGeneratorModuleConfig } from './lib/services/color.generator.module';\nexport { ArlasColorService } from './lib/services/color.generator.service';\nexport { CollectionService, BaseCollectionService, AwcCollectionService } from './lib/services/collection.service';\nexport { CollectionModule, CollectionModuleConfig } from './lib/services/collection.module';\nexport { MetricComponent } from './lib/components/metric/metric.component';\nexport { MetricModule } from './lib/components/metric/metric.module';\nexport { PowerbarsComponent } from './lib/components/powerbars/powerbars.component';\nexport { PowerbarsModule } from './lib/components/powerbars/powerbars.module';\nexport { MetricsTableModule } from './lib/components/metrics-table/metrics-table.module';\nexport { MetricsTableComponent } from './lib/components/metrics-table/metrics-table.component';\nexport { PowerbarComponent } from './lib/components/powerbars/powerbar/powerbar.component';\nexport { PowerbarModule } from './lib/components/powerbars/powerbar/powerbar.module';\n\nexport { WmtsLayerManagerModule } from './lib/components/wmts-layer-manager/wmts-layer-manager.module';\nexport { WmtsLayerManagerComponent, GetTilesInfo, LayerParam, Dimension } from './lib/components/wmts-layer-manager/wmts-layer-manager.component';\nexport { WmtsLayerManagertDialogComponent } from './lib/components/wmts-layer-manager/wmts-layer-manager.component';\nexport { ResultDetailedGridComponent } from './lib/components/results/result-detailed-grid/result-detailed-grid.component';\nexport { ResultScrollDirective } from './lib/components/results/result-directive/result-scroll.directive';\nexport { ResultFilterComponent } from './lib/components/results/result-filter/result-filter.component';\nexport { ResultGridTileComponent } from './lib/components/results/result-grid-tile/result-grid-tile.component';\nexport { ModeEnum } from './lib/components/results/utils/enumerations/modeEnum';\nexport { SortEnum } from './lib/components/results/utils/enumerations/sortEnum';\nexport { FormatNumberModule } from './lib/pipes/format-number/format-number.module';\nexport { FormatNumberPipe } from './lib/pipes/format-number/format-number.pipe';\nexport { ShortenNumberModule } from './lib/pipes/shorten-number/shorten-number.module';\nexport { ShortenNumberPipe } from './lib/pipes/shorten-number/shorten-number.pipe';\nexport { CalendarTimelineComponent, TranslationDirection } from './lib/components/calendar-timeline/calendar-timeline.component';\nexport { CalendarTimelineModule } from './lib/components/calendar-timeline/calendar-timeline.module';\nexport { GetValueModule } from './lib/pipes/get-value/get-value.module';\nexport { GetValuePipe } from './lib/pipes/get-value/get-value.pipe';\nexport { GetCollectionDisplayNamePipe } from './lib/pipes/get-collection-display-name/get-collection-display-name.pipe';\nexport { GetCollectionDisplayModule } from './lib/pipes/get-collection-display-name/get-collection-display.module';\nexport { GetFieldDisplayModule } from './lib/pipes/get-field-display-name/get-field-display.module';\nexport { GetFieldDisplayNamePipe } from './lib/pipes/get-field-display-name/get-field-display-name.pipe';\nexport { GetCollectionUnitPipe } from './lib/pipes/get-collection-unit/get-collection-unit.pipe';\nexport { GetCollectionUnitModule } from './lib/pipes/get-collection-unit/get-collection-unit.module';\nexport { GetColorModule } from './lib/pipes/get-color/get-color.module';\nexport { GetColorPipe } from './lib/pipes/get-color/get-color.pipe';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["tinycolor","i1.ColorGeneratorLoader","i1.ArlasColorService","i3","i1.CollectionService","i4","i5.GetCollectionUnitPipe","i6.HistogramKeyPipe","takeUntil","i1.ResultlistNotifierService","i2","i6","i7.ActionDisplayerPipe","i1","i5.ResultActionsComponent","i6.ResultActionsComponent","i7.FormatNumberPipe","i6.FormatNumberPipe","i7.ReplacePipe","i8.GetAttachmentUrlPipe","i7.ResultDetailedItemComponent","i8","i5","i3.ResultlistNotifierService","i9","i11","i13","i14","i16.ResultGridTileComponent","i17.ResultItemComponent","i18.ResultDetailedItemComponent","i19.ResultDetailedGridComponent","i20.ResultFilterComponent","i21.ResultScrollDirective","i1.ColorGeneratorModule","i2.FormatNumberPipe","i5.ShortenNumberPipe","i5.PowerbarComponent","i3.PowerbarComponent","i4.MetricsTableRowComponent","i6.GetCollectionDisplayNamePipe","i7.GetFieldDisplayNamePipe","i7","i10","i12","debounceTime"],"mappings":"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"}
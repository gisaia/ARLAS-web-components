import { UntypedFormControl, UntypedFormGroup } from '@angular/forms';
import { MatDialog, MatDialogRef } from '@angular/material/dialog';
import { Subject } from 'rxjs';
import { ArlasColorService } from 'arlas-web-components';
import * as i0 from "@angular/core";
export interface GeometrySelectModel {
    path: string;
    selected?: boolean;
}
export interface OperationSelectModel {
    operation: GeoQueryOperator;
    selected?: boolean;
}
export interface GeoQuery {
    operation: string;
    geometry_path: string;
}
export declare enum GeoQueryOperator {
    WITHIN = "within",
    NOT_WITHIN = "notwithin",
    INTERSECTS = "intersects",
    NOT_INTERSECTS = "notintersects"
}
export declare class SelectFormControl extends UntypedFormControl {
    filteredOptions: Array<string>;
    syncOptions: Array<string>;
    constructor(formState: any, label: string, options: Array<string>);
    setSyncOptions(newOptions: Array<string>): void;
}
export interface MapSettingsService {
    getGeoQueries(): Map<string, [Array<GeometrySelectModel>, Array<OperationSelectModel>, string]>;
}
export declare class MapSettingsDialogComponent {
    private readonly dialogRef;
    private readonly colorGeneratorLoader;
    /**
     * @Output : Angular
     * Emits the geo-query to apply. A geo-query is defined by
     * - the operation ("within", "intersects", "notwithin", "notintersects")
     * - the geometry field to query
     */
    geoQueryEmitter: Subject<Map<string, GeoQuery>>;
    emittedGeoQueries: Map<string, GeoQuery>;
    /** Constants */
    GEO_QUERIES_DESCRIPTION: "Draw a bbox or a polygon that";
    geoQueriesFormGroups: UntypedFormGroup[];
    collectionsColors: string[];
    selectionsSnapshot: Map<string, string>;
    private readonly _onDestroy$;
    constructor(dialogRef: MatDialogRef<MapSettingsComponent>, colorGeneratorLoader: ArlasColorService);
    ngOnDestroy(): void;
    /** Emits the geo-query to apply */
    emitGeoFilter(): void;
    /** Closes the dialog */
    onClose(): void;
    createGeoQueryForm(collectionName: string, displayCollectionName: string, filterGeometries: Array<GeometrySelectModel>, operationsSelectModel: Array<OperationSelectModel>): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<MapSettingsDialogComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<MapSettingsDialogComponent, "arlas-map-settings-dialog", never, {}, { "geoQueryEmitter": "geoQueryEmitter"; }, never, never, false, never>;
}
export declare class MapSettingsComponent {
    dialog: MatDialog;
    /**
     * @Output : Angular
     * Emits the geo-query to apply. A geo-query is defined by
     * - the operation ("within", "intersects", "notwithin", "notintersects")
     * - the geometry field to query
     */
    geoQueryEmitter: Subject<Map<string, GeoQuery>>;
    dialogRef: MatDialogRef<MapSettingsDialogComponent>;
    constructor(dialog: MatDialog);
    openDialog(mapSettingsService: MapSettingsService): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<MapSettingsComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<MapSettingsComponent, "arlas-map-settings", never, {}, { "geoQueryEmitter": "geoQueryEmitter"; }, never, never, false, never>;
}

import { HistogramData } from 'arlas-d3/histograms/utils/HistogramUtils';
export interface LegendData {
    minValue?: string;
    maxValue?: string;
    keysColorsMap?: Map<string, string>;
}
export interface Legend {
    type?: PROPERTY_SELECTOR_SOURCE;
    title?: string;
    minValue?: string;
    maxValue?: string;
    fixValue?: string | number;
    interpolatedValues?: Array<string | number>;
    manualValues?: Map<string, string | number>;
    visible?: boolean;
    /** data to be plotted as histogram in the legend */
    histogram?: Array<HistogramData>;
}
export interface CircleLegend extends FillLegend {
    radius: Legend;
}
export interface FillLegend {
    color: Legend;
    colorPalette: string;
    strokeColor: Legend;
    strokeColorPalette: string;
}
export interface HeatmapLegend {
    color: Legend;
    colorPalette: string;
    radius: Legend;
}
export interface LabelLegend {
    color: Legend;
    colorPalette: string;
    size: Legend;
}
export interface LineLegend {
    color: Legend;
    colorPalette: string;
    dashes: Array<number>;
    width: Legend;
}
export declare enum PROPERTY_SELECTOR_SOURCE {
    fix = "Fix",
    provided = "Provided",
    generated = "Generated",
    manual = "Manual",
    interpolated = "Interpolated",
    metric_on_field = "Metric on field",
    heatmap_density = "Density"
}

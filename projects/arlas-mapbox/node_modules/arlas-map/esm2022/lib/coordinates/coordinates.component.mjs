/*
 * Licensed to Gisaïa under one or more contributor
 * license agreements. See the NOTICE.txt file distributed with
 * this work for additional information regarding copyright
 * ownership. Gisaïa licenses this file to you under
 * the Apache License, Version 2.0 (the "License"); you may
 * not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */
import { Component, EventEmitter, Input, Output } from '@angular/core';
import { Coordinate, PointFormGroup } from '../bbox-generator/coordinates.tools';
import { marker } from '@colsen1991/ngx-translate-extract-marker';
import * as i0 from "@angular/core";
import * as i1 from "@angular/common";
import * as i2 from "@angular/material/icon";
import * as i3 from "@angular/material/form-field";
import * as i4 from "@angular/forms";
import * as i5 from "@angular/material/tooltip";
import * as i6 from "@angular/material/input";
import * as i7 from "@ngx-translate/core";
import * as i8 from "./coordinates.pipe";
export class CoordinatesComponent {
    constructor() {
        /**
         * @constant
         */
        this.placeHolder = marker('1.1 or 1°6\'3"');
        this.moveToCoordinates$ = new EventEmitter();
        this.editionMode = false;
    }
    ngOnInit() {
        this.coordinatesForm = new PointFormGroup(this.currentLat, this.currentLng);
    }
    switchToEditionMode() {
        this.editionMode = true;
        this.coordinatesForm.latitude.setValue(this.currentLat);
        this.coordinatesForm.longitude.setValue(this.currentLng);
    }
    moveToCoordinates() {
        const lat = Coordinate.parse(this.coordinatesForm.latitude.value);
        const lng = Coordinate.parse(this.coordinatesForm.longitude.value);
        this.moveToCoordinates$.emit([lng, lat]);
        this.editionMode = false;
        this.currentLat = String(lat);
        this.currentLng = String(lng);
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "18.2.13", ngImport: i0, type: CoordinatesComponent, deps: [], target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "18.2.13", type: CoordinatesComponent, selector: "arlas-coordinates", inputs: { currentLat: "currentLat", currentLng: "currentLng" }, outputs: { moveToCoordinates$: "moveToCoordinates$" }, ngImport: i0, template: "<div class=\"current-coordinate\" (click)=\"switchToEditionMode()\" (keyDown)=\"switchToEditionMode()\" [matTooltip]=\"'Enter coordinates and centre the map' | translate\"\n  matTooltipPosition=\"above\" *ngIf=\"!editionMode; else editing\">\n  <span class=\"lat\"> {{ 'Lat:' | translate }} {{ currentLat | number:'1.5-5' }} </span>\n  <span class=\"lng\"> {{ 'Lng:' | translate }} {{ currentLng | number:'1.5-5' }} </span>\n</div>\n<ng-template #editing>\n  <div class=\"current-coordinate-edition\">\n    <div class=\"section\" [formGroup]=\"coordinatesForm\">\n      <mat-form-field appearance=\"outline\">\n        <mat-label>{{'Latitude' | translate}}</mat-label>\n        <input class=\"input\" matInput [formControl]=\"coordinatesForm.latitude\"\n          [placeholder]=\"placeHolder | translate\">\n        <mat-error *ngIf=\"coordinatesForm.latitude.invalid\">{{coordinatesForm.latitude | coordinatesFormError | translate}}\n        </mat-error>\n      </mat-form-field>\n      <div class=\"coordinate\">\n        <mat-form-field appearance=\"outline\">\n          <mat-label>{{'Longitude' | translate}}</mat-label>\n          <input class=\"input\" matInput [formControl]=\"coordinatesForm.longitude\"\n            [placeholder]=\"placeHolder | translate\">\n          <mat-error *ngIf=\"coordinatesForm.longitude.invalid\">{{coordinatesForm.longitude | coordinatesFormError |\n            translate}}</mat-error>\n        </mat-form-field>\n      </div>\n      <button class=\"move\" mat-stroked-button (click)=\"moveToCoordinates()\"\n        [disabled]=\"coordinatesForm.invalid\">\n        <span class=\"label\">{{'Move to' | translate}}</span>\n      </button>\n    </div>\n    <div class=\"exit\" (click)=\"editionMode = false\" (keyDown)=\"editionMode = false\">\n      <mat-icon>clear</mat-icon>\n    </div>\n  </div>\n</ng-template>", styles: ["@charset \"UTF-8\";.current-coordinate,.current-coordinate-edition{position:absolute;right:110px;bottom:10px}.current-coordinate{background-color:#fff;border:1px solid #a1a1a1;border-radius:4px;cursor:pointer;font-size:14px;padding:2.5px 5px;height:22px;display:flex;align-items:center;justify-content:space-around}.current-coordinate .lng,.current-coordinate .lat{width:110px}.current-coordinate .lat{margin-right:10px}.current-coordinate-edition{background-color:#fff;border:1px solid grey;border-radius:4px;padding:5px}.current-coordinate-edition .section{display:flex;align-items:center}.current-coordinate-edition .section .coordinate{padding:0 5px}.current-coordinate-edition .section ::ng-deep .mat-mdc-form-field-infix{padding-left:5px;padding-bottom:5px;padding-top:5px;font-size:14px;min-height:unset}.current-coordinate-edition .section ::ng-deep .mat-mdc-form-field{padding:7px 0;width:130px}.current-coordinate-edition .section ::ng-deep .mat-mdc-form-field-subscript-wrapper{display:none}.current-coordinate-edition .section .move .label{background-color:#fff}.current-coordinate-edition .exit{cursor:pointer;position:absolute;top:-10px;right:-10px;border-radius:10px;border:1px solid grey;display:flex;align-items:center;justify-content:center;width:20px;height:20px;background-color:#fff}.current-coordinate-edition .exit mat-icon{font-size:15px;height:15px;width:15px}\n"], dependencies: [{ kind: "directive", type: i1.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { kind: "component", type: i2.MatIcon, selector: "mat-icon", inputs: ["color", "inline", "svgIcon", "fontSet", "fontIcon"], exportAs: ["matIcon"] }, { kind: "component", type: i3.MatFormField, selector: "mat-form-field", inputs: ["hideRequiredMarker", "color", "floatLabel", "appearance", "subscriptSizing", "hintLabel"], exportAs: ["matFormField"] }, { kind: "directive", type: i3.MatLabel, selector: "mat-label" }, { kind: "directive", type: i3.MatError, selector: "mat-error, [matError]", inputs: ["id"] }, { kind: "directive", type: i4.DefaultValueAccessor, selector: "input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]" }, { kind: "directive", type: i4.NgControlStatus, selector: "[formControlName],[ngModel],[formControl]" }, { kind: "directive", type: i4.NgControlStatusGroup, selector: "[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]" }, { kind: "directive", type: i4.FormControlDirective, selector: "[formControl]", inputs: ["formControl", "disabled", "ngModel"], outputs: ["ngModelChange"], exportAs: ["ngForm"] }, { kind: "directive", type: i4.FormGroupDirective, selector: "[formGroup]", inputs: ["formGroup"], outputs: ["ngSubmit"], exportAs: ["ngForm"] }, { kind: "directive", type: i5.MatTooltip, selector: "[matTooltip]", inputs: ["matTooltipPosition", "matTooltipPositionAtOrigin", "matTooltipDisabled", "matTooltipShowDelay", "matTooltipHideDelay", "matTooltipTouchGestures", "matTooltip", "matTooltipClass"], exportAs: ["matTooltip"] }, { kind: "directive", type: i6.MatInput, selector: "input[matInput], textarea[matInput], select[matNativeControl],      input[matNativeControl], textarea[matNativeControl]", inputs: ["disabled", "id", "placeholder", "name", "required", "type", "errorStateMatcher", "aria-describedby", "value", "readonly"], exportAs: ["matInput"] }, { kind: "pipe", type: i1.DecimalPipe, name: "number" }, { kind: "pipe", type: i7.TranslatePipe, name: "translate" }, { kind: "pipe", type: i8.CoordinatesErrorPipe, name: "coordinatesFormError" }] }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "18.2.13", ngImport: i0, type: CoordinatesComponent, decorators: [{
            type: Component,
            args: [{ selector: 'arlas-coordinates', template: "<div class=\"current-coordinate\" (click)=\"switchToEditionMode()\" (keyDown)=\"switchToEditionMode()\" [matTooltip]=\"'Enter coordinates and centre the map' | translate\"\n  matTooltipPosition=\"above\" *ngIf=\"!editionMode; else editing\">\n  <span class=\"lat\"> {{ 'Lat:' | translate }} {{ currentLat | number:'1.5-5' }} </span>\n  <span class=\"lng\"> {{ 'Lng:' | translate }} {{ currentLng | number:'1.5-5' }} </span>\n</div>\n<ng-template #editing>\n  <div class=\"current-coordinate-edition\">\n    <div class=\"section\" [formGroup]=\"coordinatesForm\">\n      <mat-form-field appearance=\"outline\">\n        <mat-label>{{'Latitude' | translate}}</mat-label>\n        <input class=\"input\" matInput [formControl]=\"coordinatesForm.latitude\"\n          [placeholder]=\"placeHolder | translate\">\n        <mat-error *ngIf=\"coordinatesForm.latitude.invalid\">{{coordinatesForm.latitude | coordinatesFormError | translate}}\n        </mat-error>\n      </mat-form-field>\n      <div class=\"coordinate\">\n        <mat-form-field appearance=\"outline\">\n          <mat-label>{{'Longitude' | translate}}</mat-label>\n          <input class=\"input\" matInput [formControl]=\"coordinatesForm.longitude\"\n            [placeholder]=\"placeHolder | translate\">\n          <mat-error *ngIf=\"coordinatesForm.longitude.invalid\">{{coordinatesForm.longitude | coordinatesFormError |\n            translate}}</mat-error>\n        </mat-form-field>\n      </div>\n      <button class=\"move\" mat-stroked-button (click)=\"moveToCoordinates()\"\n        [disabled]=\"coordinatesForm.invalid\">\n        <span class=\"label\">{{'Move to' | translate}}</span>\n      </button>\n    </div>\n    <div class=\"exit\" (click)=\"editionMode = false\" (keyDown)=\"editionMode = false\">\n      <mat-icon>clear</mat-icon>\n    </div>\n  </div>\n</ng-template>", styles: ["@charset \"UTF-8\";.current-coordinate,.current-coordinate-edition{position:absolute;right:110px;bottom:10px}.current-coordinate{background-color:#fff;border:1px solid #a1a1a1;border-radius:4px;cursor:pointer;font-size:14px;padding:2.5px 5px;height:22px;display:flex;align-items:center;justify-content:space-around}.current-coordinate .lng,.current-coordinate .lat{width:110px}.current-coordinate .lat{margin-right:10px}.current-coordinate-edition{background-color:#fff;border:1px solid grey;border-radius:4px;padding:5px}.current-coordinate-edition .section{display:flex;align-items:center}.current-coordinate-edition .section .coordinate{padding:0 5px}.current-coordinate-edition .section ::ng-deep .mat-mdc-form-field-infix{padding-left:5px;padding-bottom:5px;padding-top:5px;font-size:14px;min-height:unset}.current-coordinate-edition .section ::ng-deep .mat-mdc-form-field{padding:7px 0;width:130px}.current-coordinate-edition .section ::ng-deep .mat-mdc-form-field-subscript-wrapper{display:none}.current-coordinate-edition .section .move .label{background-color:#fff}.current-coordinate-edition .exit{cursor:pointer;position:absolute;top:-10px;right:-10px;border-radius:10px;border:1px solid grey;display:flex;align-items:center;justify-content:center;width:20px;height:20px;background-color:#fff}.current-coordinate-edition .exit mat-icon{font-size:15px;height:15px;width:15px}\n"] }]
        }], propDecorators: { currentLat: [{
                type: Input
            }], currentLng: [{
                type: Input
            }], moveToCoordinates$: [{
                type: Output
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29vcmRpbmF0ZXMuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvYXJsYXMtbWFwL3NyYy9saWIvY29vcmRpbmF0ZXMvY29vcmRpbmF0ZXMuY29tcG9uZW50LnRzIiwiLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvYXJsYXMtbWFwL3NyYy9saWIvY29vcmRpbmF0ZXMvY29vcmRpbmF0ZXMuY29tcG9uZW50Lmh0bWwiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7Ozs7Ozs7Ozs7O0dBaUJHO0FBRUgsT0FBTyxFQUFFLFNBQVMsRUFBRSxZQUFZLEVBQUUsS0FBSyxFQUFVLE1BQU0sRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUMvRSxPQUFPLEVBQUUsVUFBVSxFQUFFLGNBQWMsRUFBRSxNQUFNLHFDQUFxQyxDQUFDO0FBRWpGLE9BQU8sRUFBRSxNQUFNLEVBQUUsTUFBTSwwQ0FBMEMsQ0FBQzs7Ozs7Ozs7OztBQU9sRSxNQUFNLE9BQU8sb0JBQW9CO0lBTGpDO1FBU0U7O1dBRUc7UUFDSSxnQkFBVyxHQUFHLE1BQU0sQ0FBQyxnQkFBZ0IsQ0FBQyxDQUFDO1FBRTdCLHVCQUFrQixHQUFtQyxJQUFJLFlBQVksRUFBRSxDQUFDO1FBRWxGLGdCQUFXLEdBQUcsS0FBSyxDQUFDO0tBcUI1QjtJQW5CUSxRQUFRO1FBQ2IsSUFBSSxDQUFDLGVBQWUsR0FBRyxJQUFJLGNBQWMsQ0FBQyxJQUFJLENBQUMsVUFBVSxFQUFFLElBQUksQ0FBQyxVQUFVLENBQUMsQ0FBQztJQUM5RSxDQUFDO0lBRU0sbUJBQW1CO1FBQ3hCLElBQUksQ0FBQyxXQUFXLEdBQUcsSUFBSSxDQUFDO1FBQ3hCLElBQUksQ0FBQyxlQUFlLENBQUMsUUFBUSxDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQUMsVUFBVSxDQUFDLENBQUM7UUFDeEQsSUFBSSxDQUFDLGVBQWUsQ0FBQyxTQUFTLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxVQUFVLENBQUMsQ0FBQztJQUMzRCxDQUFDO0lBRU0saUJBQWlCO1FBQ3RCLE1BQU0sR0FBRyxHQUFHLFVBQVUsQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDLGVBQWUsQ0FBQyxRQUFRLENBQUMsS0FBSyxDQUFDLENBQUM7UUFDbEUsTUFBTSxHQUFHLEdBQUcsVUFBVSxDQUFDLEtBQUssQ0FBQyxJQUFJLENBQUMsZUFBZSxDQUFDLFNBQVMsQ0FBQyxLQUFLLENBQUMsQ0FBQztRQUNuRSxJQUFJLENBQUMsa0JBQWtCLENBQUMsSUFBSSxDQUFDLENBQUMsR0FBRyxFQUFFLEdBQUcsQ0FBQyxDQUFDLENBQUM7UUFDekMsSUFBSSxDQUFDLFdBQVcsR0FBRyxLQUFLLENBQUM7UUFDekIsSUFBSSxDQUFDLFVBQVUsR0FBRyxNQUFNLENBQUMsR0FBRyxDQUFDLENBQUM7UUFDOUIsSUFBSSxDQUFDLFVBQVUsR0FBRyxNQUFNLENBQUMsR0FBRyxDQUFDLENBQUM7SUFDaEMsQ0FBQzsrR0E5QlUsb0JBQW9CO21HQUFwQixvQkFBb0IsZ0xDN0JqQyw4ekRBaUNjOzs0RkRKRCxvQkFBb0I7a0JBTGhDLFNBQVM7K0JBQ0UsbUJBQW1COzhCQUtiLFVBQVU7c0JBQXpCLEtBQUs7Z0JBQ1UsVUFBVTtzQkFBekIsS0FBSztnQkFPVyxrQkFBa0I7c0JBQWxDLE1BQU0iLCJzb3VyY2VzQ29udGVudCI6WyIvKlxuICogTGljZW5zZWQgdG8gR2lzYcOvYSB1bmRlciBvbmUgb3IgbW9yZSBjb250cmlidXRvclxuICogbGljZW5zZSBhZ3JlZW1lbnRzLiBTZWUgdGhlIE5PVElDRS50eHQgZmlsZSBkaXN0cmlidXRlZCB3aXRoXG4gKiB0aGlzIHdvcmsgZm9yIGFkZGl0aW9uYWwgaW5mb3JtYXRpb24gcmVnYXJkaW5nIGNvcHlyaWdodFxuICogb3duZXJzaGlwLiBHaXNhw69hIGxpY2Vuc2VzIHRoaXMgZmlsZSB0byB5b3UgdW5kZXJcbiAqIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7IHlvdSBtYXlcbiAqIG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiAgICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsXG4gKiBzb2Z0d2FyZSBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhblxuICogXCJBUyBJU1wiIEJBU0lTLCBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTllcbiAqIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuICBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZVxuICogc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZCBsaW1pdGF0aW9uc1xuICogdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cblxuaW1wb3J0IHsgQ29tcG9uZW50LCBFdmVudEVtaXR0ZXIsIElucHV0LCBPbkluaXQsIE91dHB1dCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgQ29vcmRpbmF0ZSwgUG9pbnRGb3JtR3JvdXAgfSBmcm9tICcuLi9iYm94LWdlbmVyYXRvci9jb29yZGluYXRlcy50b29scyc7XG5pbXBvcnQgeyBGb3JtQ29udHJvbCwgRm9ybUdyb3VwIH0gZnJvbSAnQGFuZ3VsYXIvZm9ybXMnO1xuaW1wb3J0IHsgbWFya2VyIH0gZnJvbSAnQGNvbHNlbjE5OTEvbmd4LXRyYW5zbGF0ZS1leHRyYWN0LW1hcmtlcic7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ2FybGFzLWNvb3JkaW5hdGVzJyxcbiAgdGVtcGxhdGVVcmw6ICcuL2Nvb3JkaW5hdGVzLmNvbXBvbmVudC5odG1sJyxcbiAgc3R5bGVVcmxzOiBbJy4vY29vcmRpbmF0ZXMuY29tcG9uZW50LnNjc3MnXVxufSlcbmV4cG9ydCBjbGFzcyBDb29yZGluYXRlc0NvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCB7XG4gIEBJbnB1dCgpIHB1YmxpYyBjdXJyZW50TGF0OiBzdHJpbmc7XG4gIEBJbnB1dCgpIHB1YmxpYyBjdXJyZW50TG5nOiBzdHJpbmc7XG5cbiAgLyoqXG4gICAqIEBjb25zdGFudFxuICAgKi9cbiAgcHVibGljIHBsYWNlSG9sZGVyID0gbWFya2VyKCcxLjEgb3IgMcKwNlxcJzNcIicpO1xuXG4gIEBPdXRwdXQoKSBwdWJsaWMgbW92ZVRvQ29vcmRpbmF0ZXMkOiBFdmVudEVtaXR0ZXI8W251bWJlciwgbnVtYmVyXT4gPSBuZXcgRXZlbnRFbWl0dGVyKCk7XG4gIHB1YmxpYyBjb29yZGluYXRlc0Zvcm06IFBvaW50Rm9ybUdyb3VwO1xuICBwdWJsaWMgZWRpdGlvbk1vZGUgPSBmYWxzZTtcblxuICBwdWJsaWMgbmdPbkluaXQoKTogdm9pZCB7XG4gICAgdGhpcy5jb29yZGluYXRlc0Zvcm0gPSBuZXcgUG9pbnRGb3JtR3JvdXAodGhpcy5jdXJyZW50TGF0LCB0aGlzLmN1cnJlbnRMbmcpO1xuICB9XG5cbiAgcHVibGljIHN3aXRjaFRvRWRpdGlvbk1vZGUoKSB7XG4gICAgdGhpcy5lZGl0aW9uTW9kZSA9IHRydWU7XG4gICAgdGhpcy5jb29yZGluYXRlc0Zvcm0ubGF0aXR1ZGUuc2V0VmFsdWUodGhpcy5jdXJyZW50TGF0KTtcbiAgICB0aGlzLmNvb3JkaW5hdGVzRm9ybS5sb25naXR1ZGUuc2V0VmFsdWUodGhpcy5jdXJyZW50TG5nKTtcbiAgfVxuXG4gIHB1YmxpYyBtb3ZlVG9Db29yZGluYXRlcygpIHtcbiAgICBjb25zdCBsYXQgPSBDb29yZGluYXRlLnBhcnNlKHRoaXMuY29vcmRpbmF0ZXNGb3JtLmxhdGl0dWRlLnZhbHVlKTtcbiAgICBjb25zdCBsbmcgPSBDb29yZGluYXRlLnBhcnNlKHRoaXMuY29vcmRpbmF0ZXNGb3JtLmxvbmdpdHVkZS52YWx1ZSk7XG4gICAgdGhpcy5tb3ZlVG9Db29yZGluYXRlcyQuZW1pdChbbG5nLCBsYXRdKTtcbiAgICB0aGlzLmVkaXRpb25Nb2RlID0gZmFsc2U7XG4gICAgdGhpcy5jdXJyZW50TGF0ID0gU3RyaW5nKGxhdCk7XG4gICAgdGhpcy5jdXJyZW50TG5nID0gU3RyaW5nKGxuZyk7XG4gIH1cblxufVxuIiwiPGRpdiBjbGFzcz1cImN1cnJlbnQtY29vcmRpbmF0ZVwiIChjbGljayk9XCJzd2l0Y2hUb0VkaXRpb25Nb2RlKClcIiAoa2V5RG93bik9XCJzd2l0Y2hUb0VkaXRpb25Nb2RlKClcIiBbbWF0VG9vbHRpcF09XCInRW50ZXIgY29vcmRpbmF0ZXMgYW5kIGNlbnRyZSB0aGUgbWFwJyB8IHRyYW5zbGF0ZVwiXG4gIG1hdFRvb2x0aXBQb3NpdGlvbj1cImFib3ZlXCIgKm5nSWY9XCIhZWRpdGlvbk1vZGU7IGVsc2UgZWRpdGluZ1wiPlxuICA8c3BhbiBjbGFzcz1cImxhdFwiPiB7eyAnTGF0OicgfCB0cmFuc2xhdGUgfX0ge3sgY3VycmVudExhdCB8IG51bWJlcjonMS41LTUnIH19IDwvc3Bhbj5cbiAgPHNwYW4gY2xhc3M9XCJsbmdcIj4ge3sgJ0xuZzonIHwgdHJhbnNsYXRlIH19IHt7IGN1cnJlbnRMbmcgfCBudW1iZXI6JzEuNS01JyB9fSA8L3NwYW4+XG48L2Rpdj5cbjxuZy10ZW1wbGF0ZSAjZWRpdGluZz5cbiAgPGRpdiBjbGFzcz1cImN1cnJlbnQtY29vcmRpbmF0ZS1lZGl0aW9uXCI+XG4gICAgPGRpdiBjbGFzcz1cInNlY3Rpb25cIiBbZm9ybUdyb3VwXT1cImNvb3JkaW5hdGVzRm9ybVwiPlxuICAgICAgPG1hdC1mb3JtLWZpZWxkIGFwcGVhcmFuY2U9XCJvdXRsaW5lXCI+XG4gICAgICAgIDxtYXQtbGFiZWw+e3snTGF0aXR1ZGUnIHwgdHJhbnNsYXRlfX08L21hdC1sYWJlbD5cbiAgICAgICAgPGlucHV0IGNsYXNzPVwiaW5wdXRcIiBtYXRJbnB1dCBbZm9ybUNvbnRyb2xdPVwiY29vcmRpbmF0ZXNGb3JtLmxhdGl0dWRlXCJcbiAgICAgICAgICBbcGxhY2Vob2xkZXJdPVwicGxhY2VIb2xkZXIgfCB0cmFuc2xhdGVcIj5cbiAgICAgICAgPG1hdC1lcnJvciAqbmdJZj1cImNvb3JkaW5hdGVzRm9ybS5sYXRpdHVkZS5pbnZhbGlkXCI+e3tjb29yZGluYXRlc0Zvcm0ubGF0aXR1ZGUgfCBjb29yZGluYXRlc0Zvcm1FcnJvciB8IHRyYW5zbGF0ZX19XG4gICAgICAgIDwvbWF0LWVycm9yPlxuICAgICAgPC9tYXQtZm9ybS1maWVsZD5cbiAgICAgIDxkaXYgY2xhc3M9XCJjb29yZGluYXRlXCI+XG4gICAgICAgIDxtYXQtZm9ybS1maWVsZCBhcHBlYXJhbmNlPVwib3V0bGluZVwiPlxuICAgICAgICAgIDxtYXQtbGFiZWw+e3snTG9uZ2l0dWRlJyB8IHRyYW5zbGF0ZX19PC9tYXQtbGFiZWw+XG4gICAgICAgICAgPGlucHV0IGNsYXNzPVwiaW5wdXRcIiBtYXRJbnB1dCBbZm9ybUNvbnRyb2xdPVwiY29vcmRpbmF0ZXNGb3JtLmxvbmdpdHVkZVwiXG4gICAgICAgICAgICBbcGxhY2Vob2xkZXJdPVwicGxhY2VIb2xkZXIgfCB0cmFuc2xhdGVcIj5cbiAgICAgICAgICA8bWF0LWVycm9yICpuZ0lmPVwiY29vcmRpbmF0ZXNGb3JtLmxvbmdpdHVkZS5pbnZhbGlkXCI+e3tjb29yZGluYXRlc0Zvcm0ubG9uZ2l0dWRlIHwgY29vcmRpbmF0ZXNGb3JtRXJyb3IgfFxuICAgICAgICAgICAgdHJhbnNsYXRlfX08L21hdC1lcnJvcj5cbiAgICAgICAgPC9tYXQtZm9ybS1maWVsZD5cbiAgICAgIDwvZGl2PlxuICAgICAgPGJ1dHRvbiBjbGFzcz1cIm1vdmVcIiBtYXQtc3Ryb2tlZC1idXR0b24gKGNsaWNrKT1cIm1vdmVUb0Nvb3JkaW5hdGVzKClcIlxuICAgICAgICBbZGlzYWJsZWRdPVwiY29vcmRpbmF0ZXNGb3JtLmludmFsaWRcIj5cbiAgICAgICAgPHNwYW4gY2xhc3M9XCJsYWJlbFwiPnt7J01vdmUgdG8nIHwgdHJhbnNsYXRlfX08L3NwYW4+XG4gICAgICA8L2J1dHRvbj5cbiAgICA8L2Rpdj5cbiAgICA8ZGl2IGNsYXNzPVwiZXhpdFwiIChjbGljayk9XCJlZGl0aW9uTW9kZSA9IGZhbHNlXCIgKGtleURvd24pPVwiZWRpdGlvbk1vZGUgPSBmYWxzZVwiPlxuICAgICAgPG1hdC1pY29uPmNsZWFyPC9tYXQtaWNvbj5cbiAgICA8L2Rpdj5cbiAgPC9kaXY+XG48L25nLXRlbXBsYXRlPiJdfQ==
import { Action, Attachment, ItemDataType } from '../utils/results.utils';
import { Column } from './column';
export interface ItemDetailGroup {
    group: string;
    details: Array<{
        key: string;
        value: string;
    }>;
}
export declare class Item {
    /**
     * @description Item's identifier.
     */
    identifier: string;
    /**
     * @description List of urls pointing to the item's images.
     */
    urlImages: Array<string>;
    /**
     * @description List of descriptions of the images.
     */
    descriptions: Array<string>;
    /**
     * @description If image is enabled (to avoid 404 not found)
     */
    imageEnabled: boolean;
    /**
     * @description Url that links the item's thumbnail.
     */
    urlThumbnail: string;
    /**
     * @description If thumbnail is enabled (to avoid 404 nott found)
     */
    thumbnailEnabled: boolean;
    /**
     * @description Item's title.
     */
    title: string;
    /**
     * @description Item's tooltip.
     */
    tooltip: string;
    /**
     * @description The item's data is organized in this columns when represented in a table.
     */
    columns: Array<Column>;
    /**
     * @description A fieldName-fieldValue map representing the item's data.
     */
    itemData: Map<string, ItemDataType>;
    /**
     * @description More data organized in groups.
     */
    itemDetailedData: ItemDetailGroup[];
    /**
       * @description Links attached to the item.
       */
    attachments: Array<Attachment>;
    /**
     * @description List of actions that can be applied to this item.
     */
    actions: Array<Action>;
    /**
     * @description Whether to display the detailed data.
     */
    isDetailToggled: boolean;
    /**
     * @description Whether the item is checked.
     */
    isChecked: boolean;
    /**
     * @description Whether the item state is indeterminated.
     */
    isindeterminated: boolean;
    /**
     * @description Whether to highlight the item.
     */
    ishighLight: any;
    /**
     * @description The item position in a list of items.
     */
    position: number;
    /**
     * @description The material grid icon.
     * @deprecated
     */
    icon: string;
    /**
     * @description The css class for material grid icon.
     */
    iconCssClass: string;
    /**
     * @description color characterising the item
     */
    color: string;
    /**
      * @description Title for the details section.
      */
    detailsTitle: string;
    /**
     * @description If details item title is enabled
     */
    detailsTitleEnabled: boolean;
    constructor(columns: Array<Column>, itemData: Map<string, ItemDataType>);
}

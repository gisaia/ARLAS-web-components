/*
 * Licensed to Gisaïa under one or more contributor
 * license agreements. See the NOTICE.txt file distributed with
 * this work for additional information regarding copyright
 * ownership. Gisaïa licenses this file to you under
 * the Apache License, Version 2.0 (the "License"); you may
 * not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */
import { Component, EventEmitter, Input, Output } from '@angular/core';
import { DEFAULT_SHORTENING_PRECISION, NUMBER_FORMAT_CHAR } from '../../componentsUtils';
import { PowerBar } from '../model/powerbar';
import * as i0 from "@angular/core";
import * as i1 from "@angular/common";
import * as i2 from "@angular/material/tooltip";
import * as i3 from "@angular/material/checkbox";
import * as i4 from "@ngx-translate/core";
import * as i5 from "../../../pipes/shorten-number/shorten-number.pipe";
import * as i6 from "../../../pipes/format-number/format-number.pipe";
export class PowerbarComponent {
    constructor() {
        /**
         * @Input : Angular
         * @description Precision when rounding numbers (ie the count next to the progress bar).
         * Default is 2.
         */
        this.numberShorteningPrecision = DEFAULT_SHORTENING_PRECISION;
        /**
         * @Input : Angular
         * @description Unit the a powerbar represents
         */
        this.unit = '';
        /**
         * @Input : Angular
         * @description Whether to allow colorizing the bar according to its term or not using keysToColors
         */
        this.useColorService = false;
        /**
         * @Input : Angular
         * @description Whether to allow colorizing the bar according to its term or not using a field of the data
         */
        this.useColorFromData = false;
        /**
         * @Input : Angular
         * @description Hide selected powerbar
         */
        this.hideSelected = true;
        /**
         * @Input : Angular
         * @description Whether to have the option to select the powerbar using checkboxes.
         */
        this.selectWithCheckbox = false;
        this.onCheckEvent = new EventEmitter();
        this.onClickEvent = new EventEmitter();
        this.NUMBER_FORMAT_CHAR = NUMBER_FORMAT_CHAR;
    }
    onCheck() {
        this.onCheckEvent.emit(true);
    }
    onSelect() {
        this.onClickEvent.emit(true);
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "18.2.13", ngImport: i0, type: PowerbarComponent, deps: [], target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "18.2.13", type: PowerbarComponent, selector: "arlas-powerbar", inputs: { powerbar: "powerbar", numberShorteningPrecision: "numberShorteningPrecision", unit: "unit", useColorService: "useColorService", useColorFromData: "useColorFromData", hideSelected: "hideSelected", selectWithCheckbox: "selectWithCheckbox" }, outputs: { onCheckEvent: "onCheckEvent", onClickEvent: "onClickEvent" }, ngImport: i0, template: "<ng-container *ngIf=\"!!powerbar\">\n    <ng-container *ngIf=\"!powerbar.isSelected || (powerbar.isSelected && !hideSelected)\">\n        <div class=\"container\" (click)=\"onSelect()\"> <!-- //NOSONAR -->\n            <section *ngIf=\"selectWithCheckbox\" class=\"checkbox checkbox-{{powerbar.classSuffix}}\">\n                <mat-checkbox [checked]=\"powerbar.isSelected\" (change)=\"onCheck()\" (click)=\"$event.stopPropagation()\"></mat-checkbox> <!-- //NOSONAR -->\n            </section>\n            <section style=\"width: 100%;\">\n                <div class=\"powerbars__powerbar powerbars__powerbar--{{powerbar.classSuffix}}\"\n                    matTooltip=\"{{(powerbar.count | formatNumber:NUMBER_FORMAT_CHAR) + ' ' + (unit | translate)}}\"\n                    [matTooltipPosition]=\"'after'\">\n                    <div class=\"powerbars__powerbar--top-group\">\n                        <div [class.powerbars__powerbar--selected]=\"powerbar.isSelected\" class=\"powerbars__powerbar--term powerbars__powerbar--term-{{powerbar.classSuffix}} powerbars__powerbar--term--{{powerbar.term}}\">\n                            {{powerbar.term | translate}}\n                        </div>\n\n                        <div [class.powerbars__powerbar--selected]=\"powerbar.isSelected\" class=\"powerbars__powerbar--count powerbars__powerbar--term-{{powerbar.classSuffix}} powerbars__powerbar--term--{{powerbar.term}}\">\n                            {{powerbar.count | shortenNumber:numberShorteningPrecision}}\n                        </div>\n                    </div>\n\n                    <div *ngIf=\"!useColorService && !useColorFromData\" class=\"powerbars__powerbar--progression-default-colour\"\n                        [style.width.%]=\"powerbar.progression\"></div>\n                    <div *ngIf=\"useColorService || useColorFromData\" [style.background-color]=\"powerbar.color\"\n                        [style.border-color]=\"powerbar.color\" [style.width.%]=\"powerbar.progression\" class=\"powerbars__powerbar--progression\"></div>\n                </div>\n            </section>\n        </div>\n    </ng-container>\n</ng-container>", styles: ["@charset \"UTF-8\";.container{display:flex;align-items:flex-start;--mdc-checkbox-state-layer-size: 10px}.container ::ng-deep .mdc-checkbox__native-control{top:0!important;right:0!important;left:0!important}.container ::ng-deep .mdc-checkbox,.container ::ng-deep .mdc-checkbox__background,.container ::ng-deep .mat-mdc-checkbox-touch-target,.container ::ng-deep .mdc-checkbox__ripple,.container ::ng-deep .mat-mdc-checkbox-ripple{width:10px;height:10px;top:0!important;left:0!important}.container ::ng-deep .mat-mdc-checkbox-touch-target{transform:unset}.checkbox{margin-right:5px;padding-bottom:5px}.powerbars__powerbar{position:relative;display:flex;flex-direction:column;justify-content:space-between}.powerbars__powerbar--neutral-state,.powerbars__powerbar--selected-bar,.powerbars__powerbar--unselected-bar,.powerbars__powerbar--selected-no-mounted-bar{margin-top:0;padding-bottom:8px}.powerbars__powerbar--neutral-state:hover,.powerbars__powerbar--selected-bar:hover,.powerbars__powerbar--unselected-bar:hover{opacity:.8;cursor:pointer}.powerbars__powerbar--progression-default-colour{background-color:#88c9c3;height:4px;border-radius:2px}.powerbars__powerbar--progression{height:4px;border-radius:2px}.powerbars__powerbar--top-group{cursor:pointer;display:flex;align-items:center;justify-content:space-between;width:100%}.powerbars__powerbar--term{font-size:10px;width:70%;cursor:pointer;position:absolute;display:inline-block;white-space:nowrap;overflow:hidden;text-overflow:ellipsis;text-align:left}.powerbars__powerbar--count{font-size:10px;width:100%;cursor:pointer;position:relative;display:inline-block;white-space:nowrap;text-align:right}.powerbars__powerbar--selected{font-weight:700}.powerbars__powerbar--term-unselected-bar{color:#888}.powerbars__powerbar--selected-bar,.powerbars__powerbar--selected-no-mounted-bar{background-color:#fff}\n"], dependencies: [{ kind: "directive", type: i1.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { kind: "directive", type: i2.MatTooltip, selector: "[matTooltip]", inputs: ["matTooltipPosition", "matTooltipPositionAtOrigin", "matTooltipDisabled", "matTooltipShowDelay", "matTooltipHideDelay", "matTooltipTouchGestures", "matTooltip", "matTooltipClass"], exportAs: ["matTooltip"] }, { kind: "component", type: i3.MatCheckbox, selector: "mat-checkbox", inputs: ["aria-label", "aria-labelledby", "aria-describedby", "id", "required", "labelPosition", "name", "value", "disableRipple", "tabIndex", "color", "disabledInteractive", "checked", "disabled", "indeterminate"], outputs: ["change", "indeterminateChange"], exportAs: ["matCheckbox"] }, { kind: "pipe", type: i4.TranslatePipe, name: "translate" }, { kind: "pipe", type: i5.ShortenNumberPipe, name: "shortenNumber" }, { kind: "pipe", type: i6.FormatNumberPipe, name: "formatNumber" }] }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "18.2.13", ngImport: i0, type: PowerbarComponent, decorators: [{
            type: Component,
            args: [{ selector: 'arlas-powerbar', template: "<ng-container *ngIf=\"!!powerbar\">\n    <ng-container *ngIf=\"!powerbar.isSelected || (powerbar.isSelected && !hideSelected)\">\n        <div class=\"container\" (click)=\"onSelect()\"> <!-- //NOSONAR -->\n            <section *ngIf=\"selectWithCheckbox\" class=\"checkbox checkbox-{{powerbar.classSuffix}}\">\n                <mat-checkbox [checked]=\"powerbar.isSelected\" (change)=\"onCheck()\" (click)=\"$event.stopPropagation()\"></mat-checkbox> <!-- //NOSONAR -->\n            </section>\n            <section style=\"width: 100%;\">\n                <div class=\"powerbars__powerbar powerbars__powerbar--{{powerbar.classSuffix}}\"\n                    matTooltip=\"{{(powerbar.count | formatNumber:NUMBER_FORMAT_CHAR) + ' ' + (unit | translate)}}\"\n                    [matTooltipPosition]=\"'after'\">\n                    <div class=\"powerbars__powerbar--top-group\">\n                        <div [class.powerbars__powerbar--selected]=\"powerbar.isSelected\" class=\"powerbars__powerbar--term powerbars__powerbar--term-{{powerbar.classSuffix}} powerbars__powerbar--term--{{powerbar.term}}\">\n                            {{powerbar.term | translate}}\n                        </div>\n\n                        <div [class.powerbars__powerbar--selected]=\"powerbar.isSelected\" class=\"powerbars__powerbar--count powerbars__powerbar--term-{{powerbar.classSuffix}} powerbars__powerbar--term--{{powerbar.term}}\">\n                            {{powerbar.count | shortenNumber:numberShorteningPrecision}}\n                        </div>\n                    </div>\n\n                    <div *ngIf=\"!useColorService && !useColorFromData\" class=\"powerbars__powerbar--progression-default-colour\"\n                        [style.width.%]=\"powerbar.progression\"></div>\n                    <div *ngIf=\"useColorService || useColorFromData\" [style.background-color]=\"powerbar.color\"\n                        [style.border-color]=\"powerbar.color\" [style.width.%]=\"powerbar.progression\" class=\"powerbars__powerbar--progression\"></div>\n                </div>\n            </section>\n        </div>\n    </ng-container>\n</ng-container>", styles: ["@charset \"UTF-8\";.container{display:flex;align-items:flex-start;--mdc-checkbox-state-layer-size: 10px}.container ::ng-deep .mdc-checkbox__native-control{top:0!important;right:0!important;left:0!important}.container ::ng-deep .mdc-checkbox,.container ::ng-deep .mdc-checkbox__background,.container ::ng-deep .mat-mdc-checkbox-touch-target,.container ::ng-deep .mdc-checkbox__ripple,.container ::ng-deep .mat-mdc-checkbox-ripple{width:10px;height:10px;top:0!important;left:0!important}.container ::ng-deep .mat-mdc-checkbox-touch-target{transform:unset}.checkbox{margin-right:5px;padding-bottom:5px}.powerbars__powerbar{position:relative;display:flex;flex-direction:column;justify-content:space-between}.powerbars__powerbar--neutral-state,.powerbars__powerbar--selected-bar,.powerbars__powerbar--unselected-bar,.powerbars__powerbar--selected-no-mounted-bar{margin-top:0;padding-bottom:8px}.powerbars__powerbar--neutral-state:hover,.powerbars__powerbar--selected-bar:hover,.powerbars__powerbar--unselected-bar:hover{opacity:.8;cursor:pointer}.powerbars__powerbar--progression-default-colour{background-color:#88c9c3;height:4px;border-radius:2px}.powerbars__powerbar--progression{height:4px;border-radius:2px}.powerbars__powerbar--top-group{cursor:pointer;display:flex;align-items:center;justify-content:space-between;width:100%}.powerbars__powerbar--term{font-size:10px;width:70%;cursor:pointer;position:absolute;display:inline-block;white-space:nowrap;overflow:hidden;text-overflow:ellipsis;text-align:left}.powerbars__powerbar--count{font-size:10px;width:100%;cursor:pointer;position:relative;display:inline-block;white-space:nowrap;text-align:right}.powerbars__powerbar--selected{font-weight:700}.powerbars__powerbar--term-unselected-bar{color:#888}.powerbars__powerbar--selected-bar,.powerbars__powerbar--selected-no-mounted-bar{background-color:#fff}\n"] }]
        }], propDecorators: { powerbar: [{
                type: Input
            }], numberShorteningPrecision: [{
                type: Input
            }], unit: [{
                type: Input
            }], useColorService: [{
                type: Input
            }], useColorFromData: [{
                type: Input
            }], hideSelected: [{
                type: Input
            }], selectWithCheckbox: [{
                type: Input
            }], onCheckEvent: [{
                type: Output
            }], onClickEvent: [{
                type: Output
            }] } });
//# sourceMappingURL=data:application/json;base64,
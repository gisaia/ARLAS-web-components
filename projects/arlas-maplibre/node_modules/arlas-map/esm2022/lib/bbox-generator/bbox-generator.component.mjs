/*
 * Licensed to Gisaïa under one or more contributor
 * license agreements. See the NOTICE.txt file distributed with
 * this work for additional information regarding copyright
 * ownership. Gisaïa licenses this file to you under
 * the Apache License, Version 2.0 (the "License"); you may
 * not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */
import { ChangeDetectorRef, Component, Inject } from '@angular/core';
import { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';
import { BboxFormGroup } from './bbox-generator.utils';
import { marker } from '@colsen1991/ngx-translate-extract-marker';
import { MapboxAoiDrawService } from '../draw/draw.service';
import * as i0 from "@angular/core";
import * as i1 from "../draw/draw.service";
import * as i2 from "@angular/material/dialog";
import * as i3 from "@angular/common";
import * as i4 from "@angular/forms";
import * as i5 from "@angular/material/form-field";
import * as i6 from "@angular/material/icon";
import * as i7 from "@angular/material/button";
import * as i8 from "@angular/material/input";
import * as i9 from "@ngx-translate/core";
import * as i10 from "./bbox-form-error.pipe";
export class BboxGeneratorComponent {
    constructor(drawService, cdr, data, dialogRef) {
        this.drawService = drawService;
        this.cdr = cdr;
        this.data = data;
        this.dialogRef = dialogRef;
        /**
         * @constant
         */
        this.DESCRIPTION = marker('Enter coordinates in decimal or sexagesimal degrees');
        /**
         * @constant
         */
        this.placeHolder = marker('Decimal: 1.1 or Sexagesimal 1°6\'3" coordinate');
    }
    ngOnInit() {
        if (!!this.data && !this.data.initCorner) {
            this.data.initCorner = {
                lat: 0,
                lng: 0
            };
        }
        this.bboxForm = new BboxFormGroup(this.data.initCorner);
    }
    ngAfterViewInit() {
        this.cdr.detectChanges();
    }
    ngOnDestroy() {
        this.bboxForm.subscriptions.forEach(s => s.unsubscribe());
    }
    close() {
        this.dialogRef.close();
    }
    generateBbox() {
        this.drawService.drawBbox(this.bboxForm.getFirstCorner(), this.bboxForm.getSecondCorner());
        this.dialogRef.close();
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "18.2.13", ngImport: i0, type: BboxGeneratorComponent, deps: [{ token: i1.MapboxAoiDrawService }, { token: i0.ChangeDetectorRef }, { token: MAT_DIALOG_DATA }, { token: i2.MatDialogRef }], target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "18.2.13", type: BboxGeneratorComponent, selector: "arlas-bbox-generator", ngImport: i0, template: "<div class=\"wrapper\">\n    <div class=\"title-wrapper\">\n        <span>{{'BBox generator' | translate}}</span>\n        <mat-icon class=\"clear\" (click)=\"close()\" (keyDown)=\"close()\">clear</mat-icon>\n    </div>\n    <div class=\"content\">\n        <div class=\"description\">\n            <mat-icon>info</mat-icon>\n            <span>{{DESCRIPTION | translate}}</span>\n        </div>\n        <div class=\"section\" *ngIf=\"bboxForm?.firstCorner\" [formGroup]=\"bboxForm?.firstCorner\">\n            <div class=\"title\">{{'First corner' | translate}}</div>\n            <div class=\"coordinate\">\n                <mat-form-field appearance=\"outline\" >\n                    <mat-label>{{'Latitude' |translate}}</mat-label>\n                    <input class=\"input\"  matInput [formControl]=\"bboxForm.firstCorner.latitude\" [placeholder]=\"placeHolder | translate\">\n                    <mat-error *ngIf=\"bboxForm.firstCorner.latitude.invalid\">{{bboxForm.firstCorner.latitude | bboxFormError | translate}}</mat-error>\n                </mat-form-field>\n            </div>\n            <div class=\"coordinate\">\n                <mat-form-field appearance=\"outline\">\n                    <mat-label>{{'Longitude'|translate }}</mat-label>\n                    <input class=\"input\"  matInput [formControl]=\"bboxForm.firstCorner.longitude\" [placeholder]=\"placeHolder | translate\">\n                    <mat-error *ngIf=\"bboxForm.firstCorner.longitude.invalid\">{{bboxForm.firstCorner.longitude | bboxFormError | translate}}</mat-error>\n                </mat-form-field>\n            </div>\n        </div>\n        <div class=\"section\" *ngIf=\"bboxForm?.secondCorner\" [formGroup]=\"bboxForm?.secondCorner\">\n            <div class=\"title\">{{'Second corner' | translate}}</div>\n            <div class=\"coordinate\">\n                <mat-form-field appearance=\"outline\" >\n                    <mat-label>{{'Latitude' | translate}}</mat-label>\n                    <input class=\"input\"  matInput [formControl]=\"bboxForm.secondCorner.latitude\" [placeholder]=\"placeHolder | translate\">\n                    <mat-error *ngIf=\"bboxForm.secondCorner.latitude.invalid\">{{bboxForm.secondCorner.latitude | bboxFormError | translate}} </mat-error>\n                </mat-form-field>\n            </div>\n            <div class=\"coordinate\">\n                <mat-form-field appearance=\"outline\">\n                    <mat-label>{{'Longitude' | translate}}</mat-label>\n                    <input class=\"input\"  matInput [formControl]=\"bboxForm.secondCorner.longitude\" [placeholder]=\"placeHolder | translate\">\n                    <mat-error *ngIf=\"bboxForm.secondCorner.longitude.invalid\">{{bboxForm.secondCorner.longitude | bboxFormError | translate}}</mat-error>\n                </mat-form-field>\n            </div>\n\n\n        </div>\n        <div class=\"errors\" *ngIf=\"bboxForm.latitudeErrors\">\n            <mat-icon>report</mat-icon>\n            <mat-error>{{bboxForm | bboxFormError | translate}}</mat-error>\n        </div>\n    </div>\n    <div class=\"actions\">\n        <button mat-button [mat-dialog-close]=\"null\">{{'Close' | translate}}\n        </button>\n        <button class=\"create-action\" mat-stroked-button (click)=\"generateBbox()\"\n            [disabled]=\"bboxForm.invalid || bboxForm.latitudeErrors\">\n            <span class=\"label\">{{'Generate AOI' | translate}}</span>\n        </button>\n    </div>\n</div>", styles: ["@charset \"UTF-8\";.wrapper{padding:5px;border-radius:4px;background-color:#fff;font-size:16px;min-width:365px}.wrapper .title-wrapper{display:flex;justify-content:space-between;align-items:center;font-weight:600}.wrapper .title-wrapper .clear{cursor:pointer}.wrapper .content{display:flex;flex-direction:column}.wrapper .content .description{margin:5px 0;display:flex;align-items:center;font-size:14px;color:#929292}.wrapper .content .description mat-icon{font-size:18px;height:18px;width:18px;margin-right:5px}.wrapper .content .section{display:flex;flex-direction:column}.wrapper .content .section .title{margin-bottom:5px}.wrapper .content .section .coordinate{width:100%}.wrapper .content .section .coordinate mat-form-field{width:100%}.wrapper .content .section .coordinate .input{font-size:14px}.wrapper .content .section .coordinate ::ng-deep .mat-mdc-form-field-infix{padding-left:10px;padding-bottom:10px;padding-top:10px;font-size:14px;display:flex}.wrapper .content .section .coordinate ::ng-deep .mat-mdc-form-field{padding:7px 0;width:130px}.wrapper .content .section .coordinate ::ng-deep .mat-mdc-form-field-subscript-wrapper{display:none}.wrapper .content .errors{margin-bottom:10px;display:flex;align-items:center;font-size:12px}.wrapper .content .errors mat-icon{font-size:16px;height:16px;width:16px;margin-right:5px;color:#f44336}.wrapper .actions{display:flex;justify-content:flex-end}.wrapper .actions .create-action{margin-left:5px}\n"], dependencies: [{ kind: "directive", type: i3.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { kind: "directive", type: i4.DefaultValueAccessor, selector: "input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]" }, { kind: "directive", type: i4.NgControlStatus, selector: "[formControlName],[ngModel],[formControl]" }, { kind: "directive", type: i4.NgControlStatusGroup, selector: "[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]" }, { kind: "directive", type: i2.MatDialogClose, selector: "[mat-dialog-close], [matDialogClose]", inputs: ["aria-label", "type", "mat-dialog-close", "matDialogClose"], exportAs: ["matDialogClose"] }, { kind: "component", type: i5.MatFormField, selector: "mat-form-field", inputs: ["hideRequiredMarker", "color", "floatLabel", "appearance", "subscriptSizing", "hintLabel"], exportAs: ["matFormField"] }, { kind: "directive", type: i5.MatLabel, selector: "mat-label" }, { kind: "directive", type: i5.MatError, selector: "mat-error, [matError]", inputs: ["id"] }, { kind: "component", type: i6.MatIcon, selector: "mat-icon", inputs: ["color", "inline", "svgIcon", "fontSet", "fontIcon"], exportAs: ["matIcon"] }, { kind: "component", type: i7.MatButton, selector: "    button[mat-button], button[mat-raised-button], button[mat-flat-button],    button[mat-stroked-button]  ", exportAs: ["matButton"] }, { kind: "directive", type: i8.MatInput, selector: "input[matInput], textarea[matInput], select[matNativeControl],      input[matNativeControl], textarea[matNativeControl]", inputs: ["disabled", "id", "placeholder", "name", "required", "type", "errorStateMatcher", "aria-describedby", "value", "readonly"], exportAs: ["matInput"] }, { kind: "directive", type: i4.FormControlDirective, selector: "[formControl]", inputs: ["formControl", "disabled", "ngModel"], outputs: ["ngModelChange"], exportAs: ["ngForm"] }, { kind: "directive", type: i4.FormGroupDirective, selector: "[formGroup]", inputs: ["formGroup"], outputs: ["ngSubmit"], exportAs: ["ngForm"] }, { kind: "pipe", type: i9.TranslatePipe, name: "translate" }, { kind: "pipe", type: i10.BboxFormErrorPipe, name: "bboxFormError" }] }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "18.2.13", ngImport: i0, type: BboxGeneratorComponent, decorators: [{
            type: Component,
            args: [{ selector: 'arlas-bbox-generator', template: "<div class=\"wrapper\">\n    <div class=\"title-wrapper\">\n        <span>{{'BBox generator' | translate}}</span>\n        <mat-icon class=\"clear\" (click)=\"close()\" (keyDown)=\"close()\">clear</mat-icon>\n    </div>\n    <div class=\"content\">\n        <div class=\"description\">\n            <mat-icon>info</mat-icon>\n            <span>{{DESCRIPTION | translate}}</span>\n        </div>\n        <div class=\"section\" *ngIf=\"bboxForm?.firstCorner\" [formGroup]=\"bboxForm?.firstCorner\">\n            <div class=\"title\">{{'First corner' | translate}}</div>\n            <div class=\"coordinate\">\n                <mat-form-field appearance=\"outline\" >\n                    <mat-label>{{'Latitude' |translate}}</mat-label>\n                    <input class=\"input\"  matInput [formControl]=\"bboxForm.firstCorner.latitude\" [placeholder]=\"placeHolder | translate\">\n                    <mat-error *ngIf=\"bboxForm.firstCorner.latitude.invalid\">{{bboxForm.firstCorner.latitude | bboxFormError | translate}}</mat-error>\n                </mat-form-field>\n            </div>\n            <div class=\"coordinate\">\n                <mat-form-field appearance=\"outline\">\n                    <mat-label>{{'Longitude'|translate }}</mat-label>\n                    <input class=\"input\"  matInput [formControl]=\"bboxForm.firstCorner.longitude\" [placeholder]=\"placeHolder | translate\">\n                    <mat-error *ngIf=\"bboxForm.firstCorner.longitude.invalid\">{{bboxForm.firstCorner.longitude | bboxFormError | translate}}</mat-error>\n                </mat-form-field>\n            </div>\n        </div>\n        <div class=\"section\" *ngIf=\"bboxForm?.secondCorner\" [formGroup]=\"bboxForm?.secondCorner\">\n            <div class=\"title\">{{'Second corner' | translate}}</div>\n            <div class=\"coordinate\">\n                <mat-form-field appearance=\"outline\" >\n                    <mat-label>{{'Latitude' | translate}}</mat-label>\n                    <input class=\"input\"  matInput [formControl]=\"bboxForm.secondCorner.latitude\" [placeholder]=\"placeHolder | translate\">\n                    <mat-error *ngIf=\"bboxForm.secondCorner.latitude.invalid\">{{bboxForm.secondCorner.latitude | bboxFormError | translate}} </mat-error>\n                </mat-form-field>\n            </div>\n            <div class=\"coordinate\">\n                <mat-form-field appearance=\"outline\">\n                    <mat-label>{{'Longitude' | translate}}</mat-label>\n                    <input class=\"input\"  matInput [formControl]=\"bboxForm.secondCorner.longitude\" [placeholder]=\"placeHolder | translate\">\n                    <mat-error *ngIf=\"bboxForm.secondCorner.longitude.invalid\">{{bboxForm.secondCorner.longitude | bboxFormError | translate}}</mat-error>\n                </mat-form-field>\n            </div>\n\n\n        </div>\n        <div class=\"errors\" *ngIf=\"bboxForm.latitudeErrors\">\n            <mat-icon>report</mat-icon>\n            <mat-error>{{bboxForm | bboxFormError | translate}}</mat-error>\n        </div>\n    </div>\n    <div class=\"actions\">\n        <button mat-button [mat-dialog-close]=\"null\">{{'Close' | translate}}\n        </button>\n        <button class=\"create-action\" mat-stroked-button (click)=\"generateBbox()\"\n            [disabled]=\"bboxForm.invalid || bboxForm.latitudeErrors\">\n            <span class=\"label\">{{'Generate AOI' | translate}}</span>\n        </button>\n    </div>\n</div>", styles: ["@charset \"UTF-8\";.wrapper{padding:5px;border-radius:4px;background-color:#fff;font-size:16px;min-width:365px}.wrapper .title-wrapper{display:flex;justify-content:space-between;align-items:center;font-weight:600}.wrapper .title-wrapper .clear{cursor:pointer}.wrapper .content{display:flex;flex-direction:column}.wrapper .content .description{margin:5px 0;display:flex;align-items:center;font-size:14px;color:#929292}.wrapper .content .description mat-icon{font-size:18px;height:18px;width:18px;margin-right:5px}.wrapper .content .section{display:flex;flex-direction:column}.wrapper .content .section .title{margin-bottom:5px}.wrapper .content .section .coordinate{width:100%}.wrapper .content .section .coordinate mat-form-field{width:100%}.wrapper .content .section .coordinate .input{font-size:14px}.wrapper .content .section .coordinate ::ng-deep .mat-mdc-form-field-infix{padding-left:10px;padding-bottom:10px;padding-top:10px;font-size:14px;display:flex}.wrapper .content .section .coordinate ::ng-deep .mat-mdc-form-field{padding:7px 0;width:130px}.wrapper .content .section .coordinate ::ng-deep .mat-mdc-form-field-subscript-wrapper{display:none}.wrapper .content .errors{margin-bottom:10px;display:flex;align-items:center;font-size:12px}.wrapper .content .errors mat-icon{font-size:16px;height:16px;width:16px;margin-right:5px;color:#f44336}.wrapper .actions{display:flex;justify-content:flex-end}.wrapper .actions .create-action{margin-left:5px}\n"] }]
        }], ctorParameters: () => [{ type: i1.MapboxAoiDrawService }, { type: i0.ChangeDetectorRef }, { type: undefined, decorators: [{
                    type: Inject,
                    args: [MAT_DIALOG_DATA]
                }] }, { type: i2.MatDialogRef }] });
//# sourceMappingURL=data:application/json;base64,
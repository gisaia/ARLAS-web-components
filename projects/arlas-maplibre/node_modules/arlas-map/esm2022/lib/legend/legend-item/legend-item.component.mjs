/*
 * Licensed to Gisaïa under one or more contributor
 * license agreements. See the NOTICE.txt file distributed with
 * this work for additional information regarding copyright
 * ownership. Gisaïa licenses this file to you under
 * the Apache License, Version 2.0 (the "License"); you may
 * not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */
import { Component, ElementRef, Input, ViewChild } from '@angular/core';
import { PROPERTY_SELECTOR_SOURCE } from '../legend.config';
import * as i0 from "@angular/core";
import * as i1 from "@angular/material/tooltip";
import * as i2 from "@angular/common";
import * as i3 from "@ngx-translate/core";
import * as i4 from "arlas-web-components";
import * as i5 from "../format-legend.pipe";
export class LegendItemComponent {
    constructor() {
        this.PROPERTY_SELECTOR_SOURCE = PROPERTY_SELECTOR_SOURCE;
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "18.2.13", ngImport: i0, type: LegendItemComponent, deps: [], target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "18.2.13", type: LegendItemComponent, selector: "arlas-legend-item", inputs: { legend: "legend", title: "title", layer: "layer", colorPalette: "colorPalette" }, viewQueries: [{ propertyName: "interpolatedElement", first: true, predicate: ["interpolated_svg"], descendants: true, read: ElementRef }], ngImport: i0, template: "<div *ngIf=\"legend && legend.type && legend.visible !== false && layer\" class=\"legend\">\n  <ng-container *ngIf=\"(legend.title | formatLegend) as l\">\n    <div class=\"legend__title\">\n      {{ title | translate}} {{ l.translateKey | translate: {metric: l.metric | translate, field: l.field | translate, normalized: l.normalized | translate: {normalizedKey: l.normalizedKey | translate} } }}\n    </div>\n  </ng-container>\n\n  <div class=\"legend--manual\" *ngIf=\"legend.type === PROPERTY_SELECTOR_SOURCE.manual\n        || legend.type === PROPERTY_SELECTOR_SOURCE.generated\n        || legend.type === PROPERTY_SELECTOR_SOURCE.provided\">\n    <div class=\"legend--manual__item\" *ngFor=\"let manualColor of legend.manualValues | keyvalue\">\n      <div [style.backgroundColor]=\"manualColor.value\"\n        [class.circle-tip]=\"layer.type === 'circle'\"\n        [class.line-tip]=\"layer.type === 'line'\"\n        [class.fill-tip]=\"layer.type === 'fill'\">\n      </div>\n      <div class=\"legend--manual__item__key\" [matTooltip]=\"manualColor.key | translate\" [matTooltipPosition]=\"'left'\">\n        {{manualColor.key | translate}}\n      </div>\n    </div>\n  </div>\n\n  <div class=\"legend--interpolated\" *ngIf=\"legend.type === PROPERTY_SELECTOR_SOURCE.interpolated\">\n    <div *ngIf=\"!!colorPalette; else size\" class=\"legend--interpolated__palette\"\n      [style.background]=\"'linear-gradient(to right, ' + colorPalette + ')'\"></div>\n    <ng-template #size>\n      <div class=\"legend--interpolated__svg\">\n        <svg #interpolated_svg></svg>\n      </div>\n    </ng-template>\n    <div class=\"legend--interpolated__range\">\n      <div class=\"legend--interpolated__range__value\">\n        {{legend?.minValue | formatNumber:'NUMBER_FORMAT_CHAR' | translate}}\n      </div>\n      <div class=\"legend--interpolated__range__value\">\n        {{legend?.maxValue | formatNumber:'NUMBER_FORMAT_CHAR' | translate}}\n      </div>\n    </div>\n  </div>\n</div>", styles: ["@charset \"UTF-8\";.legend{padding-bottom:2px}.legend__title{text-align:center;font-size:12px;color:#666;text-overflow:ellipsis;overflow:hidden;font-family:Roboto,Helvetica Neue,Arial,Noto Sans,sans-serif}.legend--manual{display:flex;flex-flow:wrap;margin-top:5px;max-height:160px;overflow-y:auto}.legend--manual__item{display:flex;align-items:center;min-width:50%}.legend--manual__item .circle-tip{width:12px;height:12px;-webkit-border-radius:6px;-moz-border-radius:6px;border-radius:6px;margin-top:2px}.legend--manual__item .line-tip{width:20px;height:4px;border-radius:2px}.legend--manual__item .fill-tip{width:10px;height:10px}.legend--manual__item__key{font-size:12px;margin-left:5px;flex:1;white-space:nowrap;overflow:hidden;text-overflow:ellipsis}.legend--interpolated{height:100%;padding-top:5px}.legend--interpolated__palette{height:5px;border-radius:2px}.legend--interpolated__range{display:flex;justify-content:space-between;padding-top:2.5px}.legend--interpolated__range__value{font-size:12px;color:#666}\n"], dependencies: [{ kind: "directive", type: i1.MatTooltip, selector: "[matTooltip]", inputs: ["matTooltipPosition", "matTooltipPositionAtOrigin", "matTooltipDisabled", "matTooltipShowDelay", "matTooltipHideDelay", "matTooltipTouchGestures", "matTooltip", "matTooltipClass"], exportAs: ["matTooltip"] }, { kind: "directive", type: i2.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { kind: "directive", type: i2.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { kind: "pipe", type: i3.TranslatePipe, name: "translate" }, { kind: "pipe", type: i4.FormatNumberPipe, name: "formatNumber" }, { kind: "pipe", type: i2.KeyValuePipe, name: "keyvalue" }, { kind: "pipe", type: i5.FormatLegendPipe, name: "formatLegend" }] }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "18.2.13", ngImport: i0, type: LegendItemComponent, decorators: [{
            type: Component,
            args: [{ selector: 'arlas-legend-item', template: "<div *ngIf=\"legend && legend.type && legend.visible !== false && layer\" class=\"legend\">\n  <ng-container *ngIf=\"(legend.title | formatLegend) as l\">\n    <div class=\"legend__title\">\n      {{ title | translate}} {{ l.translateKey | translate: {metric: l.metric | translate, field: l.field | translate, normalized: l.normalized | translate: {normalizedKey: l.normalizedKey | translate} } }}\n    </div>\n  </ng-container>\n\n  <div class=\"legend--manual\" *ngIf=\"legend.type === PROPERTY_SELECTOR_SOURCE.manual\n        || legend.type === PROPERTY_SELECTOR_SOURCE.generated\n        || legend.type === PROPERTY_SELECTOR_SOURCE.provided\">\n    <div class=\"legend--manual__item\" *ngFor=\"let manualColor of legend.manualValues | keyvalue\">\n      <div [style.backgroundColor]=\"manualColor.value\"\n        [class.circle-tip]=\"layer.type === 'circle'\"\n        [class.line-tip]=\"layer.type === 'line'\"\n        [class.fill-tip]=\"layer.type === 'fill'\">\n      </div>\n      <div class=\"legend--manual__item__key\" [matTooltip]=\"manualColor.key | translate\" [matTooltipPosition]=\"'left'\">\n        {{manualColor.key | translate}}\n      </div>\n    </div>\n  </div>\n\n  <div class=\"legend--interpolated\" *ngIf=\"legend.type === PROPERTY_SELECTOR_SOURCE.interpolated\">\n    <div *ngIf=\"!!colorPalette; else size\" class=\"legend--interpolated__palette\"\n      [style.background]=\"'linear-gradient(to right, ' + colorPalette + ')'\"></div>\n    <ng-template #size>\n      <div class=\"legend--interpolated__svg\">\n        <svg #interpolated_svg></svg>\n      </div>\n    </ng-template>\n    <div class=\"legend--interpolated__range\">\n      <div class=\"legend--interpolated__range__value\">\n        {{legend?.minValue | formatNumber:'NUMBER_FORMAT_CHAR' | translate}}\n      </div>\n      <div class=\"legend--interpolated__range__value\">\n        {{legend?.maxValue | formatNumber:'NUMBER_FORMAT_CHAR' | translate}}\n      </div>\n    </div>\n  </div>\n</div>", styles: ["@charset \"UTF-8\";.legend{padding-bottom:2px}.legend__title{text-align:center;font-size:12px;color:#666;text-overflow:ellipsis;overflow:hidden;font-family:Roboto,Helvetica Neue,Arial,Noto Sans,sans-serif}.legend--manual{display:flex;flex-flow:wrap;margin-top:5px;max-height:160px;overflow-y:auto}.legend--manual__item{display:flex;align-items:center;min-width:50%}.legend--manual__item .circle-tip{width:12px;height:12px;-webkit-border-radius:6px;-moz-border-radius:6px;border-radius:6px;margin-top:2px}.legend--manual__item .line-tip{width:20px;height:4px;border-radius:2px}.legend--manual__item .fill-tip{width:10px;height:10px}.legend--manual__item__key{font-size:12px;margin-left:5px;flex:1;white-space:nowrap;overflow:hidden;text-overflow:ellipsis}.legend--interpolated{height:100%;padding-top:5px}.legend--interpolated__palette{height:5px;border-radius:2px}.legend--interpolated__range{display:flex;justify-content:space-between;padding-top:2.5px}.legend--interpolated__range__value{font-size:12px;color:#666}\n"] }]
        }], ctorParameters: () => [], propDecorators: { legend: [{
                type: Input
            }], title: [{
                type: Input
            }], layer: [{
                type: Input
            }], colorPalette: [{
                type: Input
            }], interpolatedElement: [{
                type: ViewChild,
                args: ['interpolated_svg', { read: ElementRef, static: false }]
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibGVnZW5kLWl0ZW0uY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvYXJsYXMtbWFwL3NyYy9saWIvbGVnZW5kL2xlZ2VuZC1pdGVtL2xlZ2VuZC1pdGVtLmNvbXBvbmVudC50cyIsIi4uLy4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL2FybGFzLW1hcC9zcmMvbGliL2xlZ2VuZC9sZWdlbmQtaXRlbS9sZWdlbmQtaXRlbS5jb21wb25lbnQuaHRtbCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Ozs7Ozs7Ozs7R0FpQkc7QUFFSCxPQUFPLEVBQUUsU0FBUyxFQUFFLFVBQVUsRUFBRSxLQUFLLEVBQUUsU0FBUyxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ3hFLE9BQU8sRUFBVSx3QkFBd0IsRUFBRSxNQUFNLGtCQUFrQixDQUFDOzs7Ozs7O0FBT3BFLE1BQU0sT0FBTyxtQkFBbUI7SUFTOUI7UUFGVSw2QkFBd0IsR0FBRyx3QkFBd0IsQ0FBQztJQUV2QyxDQUFDOytHQVRiLG1CQUFtQjttR0FBbkIsbUJBQW1CLHlQQUtTLFVBQVUsNkJDaENuRCx5OERBdUNNOzs0RkRaTyxtQkFBbUI7a0JBTC9CLFNBQVM7K0JBQ0UsbUJBQW1CO3dEQUtiLE1BQU07c0JBQXJCLEtBQUs7Z0JBQ1UsS0FBSztzQkFBcEIsS0FBSztnQkFDVSxLQUFLO3NCQUFwQixLQUFLO2dCQUNVLFlBQVk7c0JBQTNCLEtBQUs7Z0JBQ3FFLG1CQUFtQjtzQkFBN0YsU0FBUzt1QkFBQyxrQkFBa0IsRUFBRSxFQUFFLElBQUksRUFBRSxVQUFVLEVBQUUsTUFBTSxFQUFFLEtBQUssRUFBRSIsInNvdXJjZXNDb250ZW50IjpbIi8qXG4gKiBMaWNlbnNlZCB0byBHaXNhw69hIHVuZGVyIG9uZSBvciBtb3JlIGNvbnRyaWJ1dG9yXG4gKiBsaWNlbnNlIGFncmVlbWVudHMuIFNlZSB0aGUgTk9USUNFLnR4dCBmaWxlIGRpc3RyaWJ1dGVkIHdpdGhcbiAqIHRoaXMgd29yayBmb3IgYWRkaXRpb25hbCBpbmZvcm1hdGlvbiByZWdhcmRpbmcgY29weXJpZ2h0XG4gKiBvd25lcnNoaXAuIEdpc2HDr2EgbGljZW5zZXMgdGhpcyBmaWxlIHRvIHlvdSB1bmRlclxuICogdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTsgeW91IG1heVxuICogbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqICAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZyxcbiAqIHNvZnR3YXJlIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuXG4gKiBcIkFTIElTXCIgQkFTSVMsIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWVxuICogS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC4gIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlXG4gKiBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kIGxpbWl0YXRpb25zXG4gKiB1bmRlciB0aGUgTGljZW5zZS5cbiAqL1xuXG5pbXBvcnQgeyBDb21wb25lbnQsIEVsZW1lbnRSZWYsIElucHV0LCBWaWV3Q2hpbGQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IExlZ2VuZCwgUFJPUEVSVFlfU0VMRUNUT1JfU09VUkNFIH0gZnJvbSAnLi4vbGVnZW5kLmNvbmZpZyc7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ2FybGFzLWxlZ2VuZC1pdGVtJyxcbiAgdGVtcGxhdGVVcmw6ICcuL2xlZ2VuZC1pdGVtLmNvbXBvbmVudC5odG1sJyxcbiAgc3R5bGVVcmxzOiBbJy4vbGVnZW5kLWl0ZW0uY29tcG9uZW50LnNjc3MnXVxufSlcbmV4cG9ydCBjbGFzcyBMZWdlbmRJdGVtQ29tcG9uZW50IHtcbiAgQElucHV0KCkgcHVibGljIGxlZ2VuZDogTGVnZW5kO1xuICBASW5wdXQoKSBwdWJsaWMgdGl0bGU6IHN0cmluZztcbiAgQElucHV0KCkgcHVibGljIGxheWVyOiBhbnk7XG4gIEBJbnB1dCgpIHB1YmxpYyBjb2xvclBhbGV0dGU6IHN0cmluZztcbiAgQFZpZXdDaGlsZCgnaW50ZXJwb2xhdGVkX3N2ZycsIHsgcmVhZDogRWxlbWVudFJlZiwgc3RhdGljOiBmYWxzZSB9KSBwdWJsaWMgaW50ZXJwb2xhdGVkRWxlbWVudDogRWxlbWVudFJlZjtcblxuICBwcm90ZWN0ZWQgUFJPUEVSVFlfU0VMRUNUT1JfU09VUkNFID0gUFJPUEVSVFlfU0VMRUNUT1JfU09VUkNFO1xuXG4gIHB1YmxpYyBjb25zdHJ1Y3RvcigpIHsgfVxuXG59XG4iLCI8ZGl2ICpuZ0lmPVwibGVnZW5kICYmIGxlZ2VuZC50eXBlICYmIGxlZ2VuZC52aXNpYmxlICE9PSBmYWxzZSAmJiBsYXllclwiIGNsYXNzPVwibGVnZW5kXCI+XG4gIDxuZy1jb250YWluZXIgKm5nSWY9XCIobGVnZW5kLnRpdGxlIHwgZm9ybWF0TGVnZW5kKSBhcyBsXCI+XG4gICAgPGRpdiBjbGFzcz1cImxlZ2VuZF9fdGl0bGVcIj5cbiAgICAgIHt7IHRpdGxlIHwgdHJhbnNsYXRlfX0ge3sgbC50cmFuc2xhdGVLZXkgfCB0cmFuc2xhdGU6IHttZXRyaWM6IGwubWV0cmljIHwgdHJhbnNsYXRlLCBmaWVsZDogbC5maWVsZCB8IHRyYW5zbGF0ZSwgbm9ybWFsaXplZDogbC5ub3JtYWxpemVkIHwgdHJhbnNsYXRlOiB7bm9ybWFsaXplZEtleTogbC5ub3JtYWxpemVkS2V5IHwgdHJhbnNsYXRlfSB9IH19XG4gICAgPC9kaXY+XG4gIDwvbmctY29udGFpbmVyPlxuXG4gIDxkaXYgY2xhc3M9XCJsZWdlbmQtLW1hbnVhbFwiICpuZ0lmPVwibGVnZW5kLnR5cGUgPT09IFBST1BFUlRZX1NFTEVDVE9SX1NPVVJDRS5tYW51YWxcbiAgICAgICAgfHwgbGVnZW5kLnR5cGUgPT09IFBST1BFUlRZX1NFTEVDVE9SX1NPVVJDRS5nZW5lcmF0ZWRcbiAgICAgICAgfHwgbGVnZW5kLnR5cGUgPT09IFBST1BFUlRZX1NFTEVDVE9SX1NPVVJDRS5wcm92aWRlZFwiPlxuICAgIDxkaXYgY2xhc3M9XCJsZWdlbmQtLW1hbnVhbF9faXRlbVwiICpuZ0Zvcj1cImxldCBtYW51YWxDb2xvciBvZiBsZWdlbmQubWFudWFsVmFsdWVzIHwga2V5dmFsdWVcIj5cbiAgICAgIDxkaXYgW3N0eWxlLmJhY2tncm91bmRDb2xvcl09XCJtYW51YWxDb2xvci52YWx1ZVwiXG4gICAgICAgIFtjbGFzcy5jaXJjbGUtdGlwXT1cImxheWVyLnR5cGUgPT09ICdjaXJjbGUnXCJcbiAgICAgICAgW2NsYXNzLmxpbmUtdGlwXT1cImxheWVyLnR5cGUgPT09ICdsaW5lJ1wiXG4gICAgICAgIFtjbGFzcy5maWxsLXRpcF09XCJsYXllci50eXBlID09PSAnZmlsbCdcIj5cbiAgICAgIDwvZGl2PlxuICAgICAgPGRpdiBjbGFzcz1cImxlZ2VuZC0tbWFudWFsX19pdGVtX19rZXlcIiBbbWF0VG9vbHRpcF09XCJtYW51YWxDb2xvci5rZXkgfCB0cmFuc2xhdGVcIiBbbWF0VG9vbHRpcFBvc2l0aW9uXT1cIidsZWZ0J1wiPlxuICAgICAgICB7e21hbnVhbENvbG9yLmtleSB8IHRyYW5zbGF0ZX19XG4gICAgICA8L2Rpdj5cbiAgICA8L2Rpdj5cbiAgPC9kaXY+XG5cbiAgPGRpdiBjbGFzcz1cImxlZ2VuZC0taW50ZXJwb2xhdGVkXCIgKm5nSWY9XCJsZWdlbmQudHlwZSA9PT0gUFJPUEVSVFlfU0VMRUNUT1JfU09VUkNFLmludGVycG9sYXRlZFwiPlxuICAgIDxkaXYgKm5nSWY9XCIhIWNvbG9yUGFsZXR0ZTsgZWxzZSBzaXplXCIgY2xhc3M9XCJsZWdlbmQtLWludGVycG9sYXRlZF9fcGFsZXR0ZVwiXG4gICAgICBbc3R5bGUuYmFja2dyb3VuZF09XCInbGluZWFyLWdyYWRpZW50KHRvIHJpZ2h0LCAnICsgY29sb3JQYWxldHRlICsgJyknXCI+PC9kaXY+XG4gICAgPG5nLXRlbXBsYXRlICNzaXplPlxuICAgICAgPGRpdiBjbGFzcz1cImxlZ2VuZC0taW50ZXJwb2xhdGVkX19zdmdcIj5cbiAgICAgICAgPHN2ZyAjaW50ZXJwb2xhdGVkX3N2Zz48L3N2Zz5cbiAgICAgIDwvZGl2PlxuICAgIDwvbmctdGVtcGxhdGU+XG4gICAgPGRpdiBjbGFzcz1cImxlZ2VuZC0taW50ZXJwb2xhdGVkX19yYW5nZVwiPlxuICAgICAgPGRpdiBjbGFzcz1cImxlZ2VuZC0taW50ZXJwb2xhdGVkX19yYW5nZV9fdmFsdWVcIj5cbiAgICAgICAge3tsZWdlbmQ/Lm1pblZhbHVlIHwgZm9ybWF0TnVtYmVyOidOVU1CRVJfRk9STUFUX0NIQVInIHwgdHJhbnNsYXRlfX1cbiAgICAgIDwvZGl2PlxuICAgICAgPGRpdiBjbGFzcz1cImxlZ2VuZC0taW50ZXJwb2xhdGVkX19yYW5nZV9fdmFsdWVcIj5cbiAgICAgICAge3tsZWdlbmQ/Lm1heFZhbHVlIHwgZm9ybWF0TnVtYmVyOidOVU1CRVJfRk9STUFUX0NIQVInIHwgdHJhbnNsYXRlfX1cbiAgICAgIDwvZGl2PlxuICAgIDwvZGl2PlxuICA8L2Rpdj5cbjwvZGl2PiJdfQ==
import { EventEmitter, OnDestroy, OnInit } from '@angular/core';
import { Subject } from 'rxjs/internal/Subject';
import { AbstractArlasMapGL } from '../map/AbstractArlasMapGL';
import { ArlasMapSource } from '../map/model/sources';
import { ArlasBasemaps } from './basemaps.model';
import { BasemapService } from './basemap.service';
import { BasemapStyle } from './basemap.config';
import { ArlasMapFrameworkService } from '../arlas-map-framework.service';
import { AbstractArlasMapService } from '../arlas-map.service';
import * as i0 from "@angular/core";
export declare class BasemapComponent<L, S, M> implements OnInit, OnDestroy {
    protected basemapService: BasemapService<L, S, M>;
    protected mapService: AbstractArlasMapService<L, S, M>;
    protected mapFrameworkService: ArlasMapFrameworkService<L, S, M>;
    private readonly _onDestroy$;
    map: AbstractArlasMapGL;
    mapSources: Array<ArlasMapSource<any>>;
    basemapChanged: EventEmitter<void>;
    blur: Subject<void>;
    showList: boolean;
    basemaps: ArlasBasemaps;
    constructor(basemapService: BasemapService<L, S, M>, mapService: AbstractArlasMapService<L, S, M>, mapFrameworkService: ArlasMapFrameworkService<L, S, M>);
    ngOnInit(): void;
    protected initBasemaps(): void;
    /** Removes the old basemap and set the new one that is given as a parameter
     * @param newBasemap: Basemap selected by the user
     */
    onChangeBasemap(newBasemap: BasemapStyle): void;
    setBaseMapStyle(newBasemap: BasemapStyle): void;
    ngOnDestroy(): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<BasemapComponent<any, any, any>, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<BasemapComponent<any, any, any>, "arlas-basemap", never, { "map": { "alias": "map"; "required": false; }; "mapSources": { "alias": "mapSources"; "required": false; }; }, { "basemapChanged": "basemapChanged"; "blur": "blur"; }, never, never, false, never>;
}
